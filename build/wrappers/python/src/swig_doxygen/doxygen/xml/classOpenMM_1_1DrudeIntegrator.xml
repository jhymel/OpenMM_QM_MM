<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classOpenMM_1_1DrudeIntegrator" kind="class" language="C++" prot="public">
    <compoundname>OpenMM::DrudeIntegrator</compoundname>
    <basecompoundref refid="classOpenMM_1_1Integrator" prot="public" virt="non-virtual">OpenMM::Integrator</basecompoundref>
    <derivedcompoundref refid="classOpenMM_1_1DrudeLangevinIntegrator" prot="public" virt="non-virtual">OpenMM::DrudeLangevinIntegrator</derivedcompoundref>
    <derivedcompoundref refid="classOpenMM_1_1DrudeSCFIntegrator" prot="public" virt="non-virtual">OpenMM::DrudeSCFIntegrator</derivedcompoundref>
    <includes refid="DrudeIntegrator_8h" local="no">DrudeIntegrator.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classOpenMM_1_1DrudeIntegrator_1a383eaedfbff0731918caa4596614386d" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int OpenMM::DrudeIntegrator::randomNumberSeed</definition>
        <argsstring></argsstring>
        <name>randomNumberSeed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeIntegrator.h" line="135" column="9" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeIntegrator.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1DrudeIntegrator_1af0281f0272add4008cae2408b3d5d741" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double OpenMM::DrudeIntegrator::drudeTemperature</definition>
        <argsstring></argsstring>
        <name>drudeTemperature</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeIntegrator.h" line="136" column="12" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeIntegrator.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1DrudeIntegrator_1aeb96a9167260e9ac900300be717800e0" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double OpenMM::DrudeIntegrator::maxDrudeDistance</definition>
        <argsstring></argsstring>
        <name>maxDrudeDistance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeIntegrator.h" line="136" column="29" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeIntegrator.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classOpenMM_1_1DrudeIntegrator_1ae4bb7e6cc9e04383692ae6866340e057" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>OpenMM::DrudeIntegrator::DrudeIntegrator</definition>
        <argsstring>(double stepSize)</argsstring>
        <name>DrudeIntegrator</name>
        <param>
          <type>double</type>
          <declname>stepSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a <ref refid="classOpenMM_1_1DrudeSCFIntegrator" kindref="compound">DrudeSCFIntegrator</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stepSize</parametername>
</parameternamelist>
<parameterdescription>
<para>the step size with which to integrator the system (in picoseconds) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeIntegrator.h" line="52" column="5" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeIntegrator.h" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1DrudeIntegrator_1ad1009cf9c59c3d8ed72b643988d49ad4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void OpenMM::DrudeIntegrator::step</definition>
        <argsstring>(int steps) override</argsstring>
        <name>step</name>
        <reimplements refid="classOpenMM_1_1Integrator_1a55151232664ae778eb2f0e2e8bbe7b67">step</reimplements>
        <reimplementedby refid="classOpenMM_1_1DrudeLangevinIntegrator_1afd5fb980e9419e2cd44d5df905a85805">step</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1DrudeSCFIntegrator_1a83203aa9557e3f1851578a5f218ce9fc">step</reimplementedby>
        <param>
          <type>int</type>
          <declname>steps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Advance a simulation through time by taking a series of time steps.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>steps</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of time steps to take </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeIntegrator.h" line="58" column="18" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeIntegrator.h" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1DrudeIntegrator_1a67f74b0f96aab922e167c36f34bde4da" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double OpenMM::DrudeIntegrator::getDrudeTemperature</definition>
        <argsstring>() const</argsstring>
        <name>getDrudeTemperature</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the temperature of the heat bath applied to internal coordinates of Drude particles (in Kelvin).</para>
<para><simplesect kind="return"><para>the temperature of the heat bath, measured in Kelvin </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeIntegrator.h" line="64" column="12" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeIntegrator.h" bodystart="64" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1DrudeIntegrator_1a55b0b8499c4b57a401c4d2544ae5ac1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::DrudeIntegrator::setDrudeTemperature</definition>
        <argsstring>(double temp)</argsstring>
        <name>setDrudeTemperature</name>
        <param>
          <type>double</type>
          <declname>temp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the temperature of the heat bath applied to internal coordinates of Drude particles (in Kelvin).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>temp</parametername>
</parameternamelist>
<parameterdescription>
<para>the temperature of the heat bath, measured in Kelvin </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeIntegrator.h" line="72" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1DrudeIntegrator_1a7b82b8db3a1ec58baece52656258d1cb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double OpenMM::DrudeIntegrator::getMaxDrudeDistance</definition>
        <argsstring>() const</argsstring>
        <name>getMaxDrudeDistance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the maximum distance a Drude particle can ever move from its parent particle, measured in nm. This is implemented with a hard wall constraint. If this distance is set to 0 (the default), the hard wall constraint is omitted. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeIntegrator.h" line="77" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1DrudeIntegrator_1ad48071c91a96bdcdab8a0d56b4bd40ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::DrudeIntegrator::setMaxDrudeDistance</definition>
        <argsstring>(double distance)</argsstring>
        <name>setMaxDrudeDistance</name>
        <param>
          <type>double</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the maximum distance a Drude particle can ever move from its parent particle, measured in nm. This is implemented with a hard wall constraint. If this distance is set to 0 (the default), the hard wall constraint is omitted. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeIntegrator.h" line="82" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1DrudeIntegrator_1a6b90dae171d8172cfcea760ffcf114b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::DrudeIntegrator::setRandomNumberSeed</definition>
        <argsstring>(int seed)</argsstring>
        <name>setRandomNumberSeed</name>
        <param>
          <type>int</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the random number seed. The precise meaning of this parameter is undefined, and is left up to each <ref refid="classOpenMM_1_1Platform" kindref="compound">Platform</ref> to interpret in an appropriate way. It is guaranteed that if two simulations are run with different random number seeds, the sequence of random forces will be different. On the other hand, no guarantees are made about the behavior of simulations that use the same seed. In particular, Platforms are permitted to use non-deterministic algorithms which produce different results on successive runs, even if those runs were initialized identically.</para>
<para>If seed is set to 0 (which is the default value assigned), a unique seed is chosen when a <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> is created from this <ref refid="classOpenMM_1_1Force" kindref="compound">Force</ref>. This is done to ensure that each <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> receives unique random seeds without you needing to set them explicitly. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeIntegrator.h" line="95" column="10" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeIntegrator.h" bodystart="95" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1DrudeIntegrator_1a0b286d3f3b571e071abb60689a06bbca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::DrudeIntegrator::getRandomNumberSeed</definition>
        <argsstring>() const</argsstring>
        <name>getRandomNumberSeed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the random number seed. See <ref refid="classOpenMM_1_1DrudeIntegrator_1a6b90dae171d8172cfcea760ffcf114b8" kindref="member">setRandomNumberSeed()</ref> for details. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeIntegrator.h" line="101" column="9" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeIntegrator.h" bodystart="101" bodyend="103"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classOpenMM_1_1DrudeIntegrator_1aafea63d5f4700959278d1a62280a9ae4" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void OpenMM::DrudeIntegrator::initialize</definition>
        <argsstring>(ContextImpl &amp;context) override</argsstring>
        <name>initialize</name>
        <reimplements refid="classOpenMM_1_1Integrator_1a6a2b5bcc61b799be0a37b4a431bdcd7d">initialize</reimplements>
        <reimplementedby refid="classOpenMM_1_1DrudeLangevinIntegrator_1a5d1f2842adff4074b9169bdd2bbf5995">initialize</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1DrudeSCFIntegrator_1a5af38c878e7c1ec54fad0d62f483ffe8">initialize</reimplementedby>
        <param>
          <type>ContextImpl &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This will be called by the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> when it is created. It informs the <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> of what context it will be integrating, and gives it a chance to do any necessary initialization. It will also get called again if the application calls reinitialize() on the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeIntegrator.h" line="110" column="18" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeIntegrator.h" bodystart="110" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1DrudeIntegrator_1a4a6264148723056ce014bb4ce9c8b658" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void OpenMM::DrudeIntegrator::cleanup</definition>
        <argsstring>() override</argsstring>
        <name>cleanup</name>
        <reimplements refid="classOpenMM_1_1Integrator_1a204f42ff795b94be55d0c9ba32261af6">cleanup</reimplements>
        <reimplementedby refid="classOpenMM_1_1DrudeLangevinIntegrator_1ad94a165ffe2b3e203b20b49642bd1e42">cleanup</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1DrudeSCFIntegrator_1ad730cb1ec7dca2d618e42f269cacdf37">cleanup</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This will be called by the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> when it is destroyed to let the <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> do any necessary cleanup. It will also get called again if the application calls reinitialize() on the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeIntegrator.h" line="115" column="18" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeIntegrator.h" bodystart="115" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1DrudeIntegrator_1a790f388ce33b7501bcdcb9376764145c" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>virtual std::vector&lt; std::string &gt; OpenMM::DrudeIntegrator::getKernelNames</definition>
        <argsstring>() override</argsstring>
        <name>getKernelNames</name>
        <reimplements refid="classOpenMM_1_1Integrator_1a8f89d06e97e930a35c0c7825f80ea9c9">getKernelNames</reimplements>
        <reimplementedby refid="classOpenMM_1_1DrudeLangevinIntegrator_1a21a93d074d12221348bd4ccfebfbf69c">getKernelNames</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1DrudeSCFIntegrator_1a73dad1c32454114e115bc4089f957f15">getKernelNames</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the names of all Kernels used by this <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeIntegrator.h" line="119" column="25" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeIntegrator.h" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1DrudeIntegrator_1a1d0cc4e25d5d2968dd0d987db2f6c02f" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>virtual double OpenMM::DrudeIntegrator::computeKineticEnergy</definition>
        <argsstring>() override</argsstring>
        <name>computeKineticEnergy</name>
        <reimplements refid="classOpenMM_1_1Integrator_1a0fd62d5846712eca58341556d48d991c">computeKineticEnergy</reimplements>
        <reimplementedby refid="classOpenMM_1_1DrudeLangevinIntegrator_1af2073f30347f550c5ccb9a8d465e6345">computeKineticEnergy</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1DrudeSCFIntegrator_1a1eed614b0b38e764bdf7624a47a90de7">computeKineticEnergy</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the kinetic energy of the system at the current time. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeIntegrator.h" line="123" column="20" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeIntegrator.h" bodystart="123" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1DrudeIntegrator_1ae817978ed25583082139d74196eb8415" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; <ref refid="classOpenMM_1_1Vec3" kindref="compound">Vec3</ref> &gt;</type>
        <definition>virtual std::vector&lt; Vec3 &gt; OpenMM::DrudeIntegrator::getVelocitiesForTemperature</definition>
        <argsstring>(const System &amp;system, double temperature, int randomSeed) const override</argsstring>
        <name>getVelocitiesForTemperature</name>
        <reimplements refid="classOpenMM_1_1Integrator_1a3a3874d3287e9e2ef4bd21dd2dd02d8a">getVelocitiesForTemperature</reimplements>
        <param>
          <type>const <ref refid="classOpenMM_1_1System" kindref="compound">System</ref> &amp;</type>
          <declname>system</declname>
        </param>
        <param>
          <type>double</type>
          <declname>temperature</declname>
        </param>
        <param>
          <type>int</type>
          <declname>randomSeed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a list of velocities normally distributed around a target temperature, with the Drude temperatures assigned according to the Drude temperature assigned to the integrator.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>system</parametername>
</parameternamelist>
<parameterdescription>
<para>the system whose velocities are to be initialized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>temperature</parametername>
</parameternamelist>
<parameterdescription>
<para>the target temperature in Kelvin. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>randomSeed</parametername>
</parameternamelist>
<parameterdescription>
<para>the random number seed to use when selecting velocities </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeIntegrator.h" line="132" column="25"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A base class to encapsulate features common to Drude integrators. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>OpenMM::DrudeIntegrator</label>
        <link refid="classOpenMM_1_1DrudeIntegrator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>OpenMM::DrudeLangevinIntegrator</label>
        <link refid="classOpenMM_1_1DrudeLangevinIntegrator"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>OpenMM::DrudeSCFIntegrator</label>
        <link refid="classOpenMM_1_1DrudeSCFIntegrator"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>OpenMM::Integrator</label>
        <link refid="classOpenMM_1_1Integrator"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>OpenMM::Context</label>
        <link refid="classOpenMM_1_1Context"/>
      </node>
      <node id="1">
        <label>OpenMM::DrudeIntegrator</label>
        <link refid="classOpenMM_1_1DrudeIntegrator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>OpenMM::Integrator</label>
        <link refid="classOpenMM_1_1Integrator"/>
        <childnode refid="3" relation="usage">
          <edgelabel>owner</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeIntegrator.h" line="45" column="1" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeIntegrator.h" bodystart="45" bodyend="137"/>
    <listofallmembers>
      <member refid="classOpenMM_1_1DrudeIntegrator_1a4a6264148723056ce014bb4ce9c8b658" prot="protected" virt="virtual"><scope>OpenMM::DrudeIntegrator</scope><name>cleanup</name></member>
      <member refid="classOpenMM_1_1DrudeIntegrator_1a1d0cc4e25d5d2968dd0d987db2f6c02f" prot="protected" virt="virtual"><scope>OpenMM::DrudeIntegrator</scope><name>computeKineticEnergy</name></member>
      <member refid="classOpenMM_1_1Integrator_1ac9c1c07848ae2c2e8617a949a11070c1" prot="protected" virt="non-virtual"><scope>OpenMM::DrudeIntegrator</scope><name>context</name></member>
      <member refid="classOpenMM_1_1Integrator_1a08d633ac9c6fbcbfc507ea8ff1fdf26a" prot="protected" virt="virtual"><scope>OpenMM::DrudeIntegrator</scope><name>createCheckpoint</name></member>
      <member refid="classOpenMM_1_1Integrator_1a6ef56427b124e5e36cabfefc8c11ced4" prot="protected" virt="virtual"><scope>OpenMM::DrudeIntegrator</scope><name>deserializeParameters</name></member>
      <member refid="classOpenMM_1_1DrudeIntegrator_1ae4bb7e6cc9e04383692ae6866340e057" prot="public" virt="non-virtual"><scope>OpenMM::DrudeIntegrator</scope><name>DrudeIntegrator</name></member>
      <member refid="classOpenMM_1_1DrudeIntegrator_1af0281f0272add4008cae2408b3d5d741" prot="protected" virt="non-virtual"><scope>OpenMM::DrudeIntegrator</scope><name>drudeTemperature</name></member>
      <member refid="classOpenMM_1_1Integrator_1af742feb7b5b9adfcb259bf2dbc9319c4" prot="public" virt="virtual"><scope>OpenMM::DrudeIntegrator</scope><name>getConstraintTolerance</name></member>
      <member refid="classOpenMM_1_1DrudeIntegrator_1a67f74b0f96aab922e167c36f34bde4da" prot="public" virt="non-virtual"><scope>OpenMM::DrudeIntegrator</scope><name>getDrudeTemperature</name></member>
      <member refid="classOpenMM_1_1Integrator_1a38c94f952b4fcab36371402e508eacf1" prot="public" virt="virtual"><scope>OpenMM::DrudeIntegrator</scope><name>getIntegrationForceGroups</name></member>
      <member refid="classOpenMM_1_1DrudeIntegrator_1a790f388ce33b7501bcdcb9376764145c" prot="protected" virt="virtual"><scope>OpenMM::DrudeIntegrator</scope><name>getKernelNames</name></member>
      <member refid="classOpenMM_1_1DrudeIntegrator_1a7b82b8db3a1ec58baece52656258d1cb" prot="public" virt="non-virtual"><scope>OpenMM::DrudeIntegrator</scope><name>getMaxDrudeDistance</name></member>
      <member refid="classOpenMM_1_1DrudeIntegrator_1a0b286d3f3b571e071abb60689a06bbca" prot="public" virt="non-virtual"><scope>OpenMM::DrudeIntegrator</scope><name>getRandomNumberSeed</name></member>
      <member refid="classOpenMM_1_1Integrator_1a880821318aee5b25b02f0929887825c1" prot="public" virt="virtual"><scope>OpenMM::DrudeIntegrator</scope><name>getStepSize</name></member>
      <member refid="classOpenMM_1_1DrudeIntegrator_1ae817978ed25583082139d74196eb8415" prot="protected" virt="virtual"><scope>OpenMM::DrudeIntegrator</scope><name>getVelocitiesForTemperature</name></member>
      <member refid="classOpenMM_1_1Integrator_1a1fc2b21fac0b7497399a499f24c2628f" prot="protected" virt="virtual"><scope>OpenMM::DrudeIntegrator</scope><name>getVelocityTimeOffset</name></member>
      <member refid="classOpenMM_1_1DrudeIntegrator_1aafea63d5f4700959278d1a62280a9ae4" prot="protected" virt="virtual"><scope>OpenMM::DrudeIntegrator</scope><name>initialize</name></member>
      <member refid="classOpenMM_1_1Integrator_1a2732506bfb2afd8e2e9954d08cab1304" prot="public" virt="non-virtual"><scope>OpenMM::DrudeIntegrator</scope><name>Integrator</name></member>
      <member refid="classOpenMM_1_1Integrator_1ad61399ae80cda00231dd5d573cfd30e8" prot="protected" virt="virtual"><scope>OpenMM::DrudeIntegrator</scope><name>kineticEnergyRequiresForce</name></member>
      <member refid="classOpenMM_1_1Integrator_1a6928a443a3f4eb407e4a8e82d549683d" prot="protected" virt="virtual"><scope>OpenMM::DrudeIntegrator</scope><name>loadCheckpoint</name></member>
      <member refid="classOpenMM_1_1DrudeIntegrator_1aeb96a9167260e9ac900300be717800e0" prot="protected" virt="non-virtual"><scope>OpenMM::DrudeIntegrator</scope><name>maxDrudeDistance</name></member>
      <member refid="classOpenMM_1_1Integrator_1ab3f6088553343feb8f47ab789e7a09a1" prot="protected" virt="non-virtual"><scope>OpenMM::DrudeIntegrator</scope><name>owner</name></member>
      <member refid="classOpenMM_1_1DrudeIntegrator_1a383eaedfbff0731918caa4596614386d" prot="protected" virt="non-virtual"><scope>OpenMM::DrudeIntegrator</scope><name>randomNumberSeed</name></member>
      <member refid="classOpenMM_1_1Integrator_1a38196dae74d6dea780076f44a10ed4aa" prot="protected" virt="virtual"><scope>OpenMM::DrudeIntegrator</scope><name>serializeParameters</name></member>
      <member refid="classOpenMM_1_1Integrator_1a47f81ac027670bcad6050c72cc41bd67" prot="public" virt="virtual"><scope>OpenMM::DrudeIntegrator</scope><name>setConstraintTolerance</name></member>
      <member refid="classOpenMM_1_1DrudeIntegrator_1a55b0b8499c4b57a401c4d2544ae5ac1b" prot="public" virt="non-virtual"><scope>OpenMM::DrudeIntegrator</scope><name>setDrudeTemperature</name></member>
      <member refid="classOpenMM_1_1Integrator_1a22b42a4a502c999d87e6bbd3f444eab4" prot="public" virt="virtual"><scope>OpenMM::DrudeIntegrator</scope><name>setIntegrationForceGroups</name></member>
      <member refid="classOpenMM_1_1DrudeIntegrator_1ad48071c91a96bdcdab8a0d56b4bd40ca" prot="public" virt="non-virtual"><scope>OpenMM::DrudeIntegrator</scope><name>setMaxDrudeDistance</name></member>
      <member refid="classOpenMM_1_1DrudeIntegrator_1a6b90dae171d8172cfcea760ffcf114b8" prot="public" virt="non-virtual"><scope>OpenMM::DrudeIntegrator</scope><name>setRandomNumberSeed</name></member>
      <member refid="classOpenMM_1_1Integrator_1a86ef00f4e3abb9e3e325e3c4ebe5ead1" prot="public" virt="virtual"><scope>OpenMM::DrudeIntegrator</scope><name>setStepSize</name></member>
      <member refid="classOpenMM_1_1Integrator_1aa41aa4c012de261afa5dda15af4fb721" prot="protected" virt="virtual"><scope>OpenMM::DrudeIntegrator</scope><name>stateChanged</name></member>
      <member refid="classOpenMM_1_1DrudeIntegrator_1ad1009cf9c59c3d8ed72b643988d49ad4" prot="public" virt="virtual"><scope>OpenMM::DrudeIntegrator</scope><name>step</name></member>
      <member refid="classOpenMM_1_1Integrator_1a9abbef84d9e2c4e5a3d3139f8fa84fff" prot="public" virt="virtual"><scope>OpenMM::DrudeIntegrator</scope><name>~Integrator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
