<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classOpenMM_1_1CompoundIntegrator" kind="class" language="C++" prot="public">
    <compoundname>OpenMM::CompoundIntegrator</compoundname>
    <basecompoundref refid="classOpenMM_1_1Integrator" prot="public" virt="non-virtual">OpenMM::Integrator</basecompoundref>
    <includes refid="CompoundIntegrator_8h" local="no">CompoundIntegrator.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classOpenMM_1_1CompoundIntegrator_1ac9edb7a2a8665b194fe73e1ebb84bd42" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int OpenMM::CompoundIntegrator::currentIntegrator</definition>
        <argsstring></argsstring>
        <name>currentIntegrator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CompoundIntegrator.h" line="230" column="9" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CompoundIntegrator.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1CompoundIntegrator_1a5c975c5b0853d432a50b5592f1723703" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> * &gt;</type>
        <definition>std::vector&lt;Integrator*&gt; OpenMM::CompoundIntegrator::integrators</definition>
        <argsstring></argsstring>
        <name>integrators</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CompoundIntegrator.h" line="231" column="17" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CompoundIntegrator.h" bodystart="231" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classOpenMM_1_1CompoundIntegrator_1a7b6cba1657f6f6fa090f861a81941440" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>OpenMM::CompoundIntegrator::CompoundIntegrator</definition>
        <argsstring>()</argsstring>
        <name>CompoundIntegrator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a <ref refid="classOpenMM_1_1CompoundIntegrator" kindref="compound">CompoundIntegrator</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CompoundIntegrator.h" line="92" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CompoundIntegrator_1a295842b100b68b8cdb1aff132062daec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OpenMM::CompoundIntegrator::~CompoundIntegrator</definition>
        <argsstring>()</argsstring>
        <name>~CompoundIntegrator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CompoundIntegrator.h" line="93" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CompoundIntegrator_1aaed10077238aba9f392531de741ca546" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::CompoundIntegrator::getNumIntegrators</definition>
        <argsstring>() const</argsstring>
        <name>getNumIntegrators</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of Integrators that have been added to this <ref refid="classOpenMM_1_1CompoundIntegrator" kindref="compound">CompoundIntegrator</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CompoundIntegrator.h" line="97" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CompoundIntegrator_1a9274d1a1d1ff0d1826781449cb2e980e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::CompoundIntegrator::addIntegrator</definition>
        <argsstring>(Integrator *integrator)</argsstring>
        <name>addIntegrator</name>
        <param>
          <type><ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> *</type>
          <declname>integrator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add an <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> to this <ref refid="classOpenMM_1_1CompoundIntegrator" kindref="compound">CompoundIntegrator</ref>. The <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> object should have been created on the heap with the &quot;new&quot; operator. The <ref refid="classOpenMM_1_1CompoundIntegrator" kindref="compound">CompoundIntegrator</ref> takes over ownership of it, and deletes it when the <ref refid="classOpenMM_1_1CompoundIntegrator" kindref="compound">CompoundIntegrator</ref> itself is deleted. All Integrators must be added before the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> is created.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>integrator</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> to add </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the index of the <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> that was added </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CompoundIntegrator.h" line="107" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CompoundIntegrator_1ab825fcf29ea8556d0b81f78437909349" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> &amp;</type>
        <definition>Integrator &amp; OpenMM::CompoundIntegrator::getIntegrator</definition>
        <argsstring>(int index)</argsstring>
        <name>getIntegrator</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a reference to one of the Integrators that have been added to this <ref refid="classOpenMM_1_1CompoundIntegrator" kindref="compound">CompoundIntegrator</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> to get </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CompoundIntegrator.h" line="113" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CompoundIntegrator_1a070c03eaab2f6ca54c5a772972c2be83" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> &amp;</type>
        <definition>const Integrator &amp; OpenMM::CompoundIntegrator::getIntegrator</definition>
        <argsstring>(int index) const</argsstring>
        <name>getIntegrator</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a const reference to one of the Integrators that have been added to this <ref refid="classOpenMM_1_1CompoundIntegrator" kindref="compound">CompoundIntegrator</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> to get </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CompoundIntegrator.h" line="119" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CompoundIntegrator_1a3d37f7b96cd4bfc2e8d2bfa89fe299fa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::CompoundIntegrator::getCurrentIntegrator</definition>
        <argsstring>() const</argsstring>
        <name>getCurrentIntegrator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the index of the current <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CompoundIntegrator.h" line="123" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CompoundIntegrator_1ad6c6734cb0f4e5507649e9c2698abcc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::CompoundIntegrator::setCurrentIntegrator</definition>
        <argsstring>(int index)</argsstring>
        <name>setCurrentIntegrator</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the current <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> to use </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CompoundIntegrator.h" line="129" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CompoundIntegrator_1a584cf6ec5f12df62143e394a96c5ba26" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double OpenMM::CompoundIntegrator::getStepSize</definition>
        <argsstring>() const</argsstring>
        <name>getStepSize</name>
        <reimplements refid="classOpenMM_1_1Integrator_1a880821318aee5b25b02f0929887825c1">getStepSize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the size of each time step, in picoseconds. This method calls <ref refid="classOpenMM_1_1CompoundIntegrator_1a584cf6ec5f12df62143e394a96c5ba26" kindref="member">getStepSize()</ref> on whichever <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> has been set as current.</para>
<para><simplesect kind="return"><para>the step size, measured in ps </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CompoundIntegrator.h" line="136" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CompoundIntegrator_1abb64e175a1a55b76088b1ad74aea76b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void OpenMM::CompoundIntegrator::setStepSize</definition>
        <argsstring>(double size)</argsstring>
        <name>setStepSize</name>
        <reimplements refid="classOpenMM_1_1Integrator_1a86ef00f4e3abb9e3e325e3c4ebe5ead1">setStepSize</reimplements>
        <param>
          <type>double</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the size of each time step, in picoseconds. This method calls <ref refid="classOpenMM_1_1CompoundIntegrator_1abb64e175a1a55b76088b1ad74aea76b0" kindref="member">setStepSize()</ref> on whichever <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> has been set as current.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>the step size, measured in ps </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CompoundIntegrator.h" line="143" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CompoundIntegrator_1a7c83301f2a67053d16e510de2701e0fa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double OpenMM::CompoundIntegrator::getConstraintTolerance</definition>
        <argsstring>() const</argsstring>
        <name>getConstraintTolerance</name>
        <reimplements refid="classOpenMM_1_1Integrator_1af742feb7b5b9adfcb259bf2dbc9319c4">getConstraintTolerance</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the distance tolerance within which constraints are maintained, as a fraction of the constrained distance. This method calls <ref refid="classOpenMM_1_1CompoundIntegrator_1a7c83301f2a67053d16e510de2701e0fa" kindref="member">getConstraintTolerance()</ref> on whichever <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> has been set as current. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CompoundIntegrator.h" line="148" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CompoundIntegrator_1adb8469bf1fa3e318b202e3a20d1111cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void OpenMM::CompoundIntegrator::setConstraintTolerance</definition>
        <argsstring>(double tol)</argsstring>
        <name>setConstraintTolerance</name>
        <reimplements refid="classOpenMM_1_1Integrator_1a47f81ac027670bcad6050c72cc41bd67">setConstraintTolerance</reimplements>
        <param>
          <type>double</type>
          <declname>tol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the distance tolerance within which constraints are maintained, as a fraction of the constrained distance. This method calls <ref refid="classOpenMM_1_1CompoundIntegrator_1adb8469bf1fa3e318b202e3a20d1111cf" kindref="member">setConstraintTolerance()</ref> on whichever <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> has been set as current. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CompoundIntegrator.h" line="153" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CompoundIntegrator_1aba23d74fdc33f9c5957aa7aab7d4dd83" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void OpenMM::CompoundIntegrator::step</definition>
        <argsstring>(int steps)</argsstring>
        <name>step</name>
        <reimplements refid="classOpenMM_1_1Integrator_1a55151232664ae778eb2f0e2e8bbe7b67">step</reimplements>
        <param>
          <type>int</type>
          <declname>steps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Advance a simulation through time by taking a series of time steps. This method calls <ref refid="classOpenMM_1_1CompoundIntegrator_1aba23d74fdc33f9c5957aa7aab7d4dd83" kindref="member">step()</ref> on whichever <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> has been set as current.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>steps</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of time steps to take </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CompoundIntegrator.h" line="160" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classOpenMM_1_1CompoundIntegrator_1a37d872f691a9019281566635ba420c03" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void OpenMM::CompoundIntegrator::initialize</definition>
        <argsstring>(ContextImpl &amp;context)</argsstring>
        <name>initialize</name>
        <reimplements refid="classOpenMM_1_1Integrator_1a6a2b5bcc61b799be0a37b4a431bdcd7d">initialize</reimplements>
        <param>
          <type>ContextImpl &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This will be called by the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> when it is created. It informs the <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> of what context it will be integrating, and gives it a chance to do any necessary initialization. It will also get called again if the application calls reinitialize() on the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref>.</para>
<para>The implementation calls <ref refid="classOpenMM_1_1CompoundIntegrator_1a37d872f691a9019281566635ba420c03" kindref="member">initialize()</ref> on each <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> that has been added to this <ref refid="classOpenMM_1_1CompoundIntegrator" kindref="compound">CompoundIntegrator</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CompoundIntegrator.h" line="169" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CompoundIntegrator_1a1fc90b4a8d7225a692f891581bd9cafc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void OpenMM::CompoundIntegrator::cleanup</definition>
        <argsstring>()</argsstring>
        <name>cleanup</name>
        <reimplements refid="classOpenMM_1_1Integrator_1a204f42ff795b94be55d0c9ba32261af6">cleanup</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This will be called by the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> when it is destroyed to let the <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> do any necessary cleanup. It will also get called again if the application calls reinitialize() on the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref>.</para>
<para>The implementation calls <ref refid="classOpenMM_1_1CompoundIntegrator_1a1fc90b4a8d7225a692f891581bd9cafc" kindref="member">cleanup()</ref> on each <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> that has been added to this <ref refid="classOpenMM_1_1CompoundIntegrator" kindref="compound">CompoundIntegrator</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CompoundIntegrator.h" line="176" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CompoundIntegrator_1a2fdb9eb40fd50dea17541b37f8158bda" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; OpenMM::CompoundIntegrator::getKernelNames</definition>
        <argsstring>()</argsstring>
        <name>getKernelNames</name>
        <reimplements refid="classOpenMM_1_1Integrator_1a8f89d06e97e930a35c0c7825f80ea9c9">getKernelNames</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the names of all Kernels used by this <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref>.</para>
<para>The implementation returns the union of all kernel names required by all Integrators that have been added. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CompoundIntegrator.h" line="182" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CompoundIntegrator_1aa9aa5ffaa70ed940fab8c44d6fc96201" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void OpenMM::CompoundIntegrator::stateChanged</definition>
        <argsstring>(State::DataType changed)</argsstring>
        <name>stateChanged</name>
        <reimplements refid="classOpenMM_1_1Integrator_1aa41aa4c012de261afa5dda15af4fb721">stateChanged</reimplements>
        <param>
          <type><ref refid="classOpenMM_1_1State_1a33046c06dbd6c93b71cc5d1448771933" kindref="member">State::DataType</ref></type>
          <declname>changed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This will be called by the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> when the user modifies aspects of the context state, such as positions, velocities, or parameters. This gives the <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> a chance to discard cached information. This is <emphasis>only</emphasis> called when the user modifies information using methods of the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> object. It is <emphasis>not</emphasis> called when a ForceImpl object modifies state information in its updateContextState() method (unless the ForceImpl calls a <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> method to perform the modification).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>changed</parametername>
</parameternamelist>
<parameterdescription>
<para>this specifies what aspect of the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> was changed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CompoundIntegrator.h" line="192" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CompoundIntegrator_1a30694f0f3e73880a1b8fd8af3e5dcde2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double OpenMM::CompoundIntegrator::computeKineticEnergy</definition>
        <argsstring>()</argsstring>
        <name>computeKineticEnergy</name>
        <reimplements refid="classOpenMM_1_1Integrator_1a0fd62d5846712eca58341556d48d991c">computeKineticEnergy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the kinetic energy of the system at the current time.</para>
<para>The implementation calls <ref refid="classOpenMM_1_1CompoundIntegrator_1a30694f0f3e73880a1b8fd8af3e5dcde2" kindref="member">computeKineticEnergy()</ref> on whichever <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> has been set as current. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CompoundIntegrator.h" line="198" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CompoundIntegrator_1a9b4c50611d590e1b0794474144dbd28e" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double OpenMM::CompoundIntegrator::getVelocityTimeOffset</definition>
        <argsstring>() const</argsstring>
        <name>getVelocityTimeOffset</name>
        <reimplements refid="classOpenMM_1_1Integrator_1a1fc2b21fac0b7497399a499f24c2628f">getVelocityTimeOffset</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the time interval by which velocities are offset from positions. This is used to adjust velocities when setVelocitiesToTemperature() is called on a <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CompoundIntegrator.h" line="203" column="12" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CompoundIntegrator.h" bodystart="203" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CompoundIntegrator_1af3c31f8730469c6b5bc86b5b6f524440" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void OpenMM::CompoundIntegrator::createCheckpoint</definition>
        <argsstring>(std::ostream &amp;stream) const</argsstring>
        <name>createCheckpoint</name>
        <reimplements refid="classOpenMM_1_1Integrator_1a08d633ac9c6fbcbfc507ea8ff1fdf26a">createCheckpoint</reimplements>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is called while writing checkpoints. It gives the integrator a chance to write its own data. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CompoundIntegrator.h" line="210" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CompoundIntegrator_1a1249d858fe4cda28bf179eb9fdd90ac8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void OpenMM::CompoundIntegrator::loadCheckpoint</definition>
        <argsstring>(std::istream &amp;stream)</argsstring>
        <name>loadCheckpoint</name>
        <reimplements refid="classOpenMM_1_1Integrator_1a6928a443a3f4eb407e4a8e82d549683d">loadCheckpoint</reimplements>
        <param>
          <type>std::istream &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is called while loading a checkpoint. The integrator should read in whatever data it wrote in <ref refid="classOpenMM_1_1CompoundIntegrator_1af3c31f8730469c6b5bc86b5b6f524440" kindref="member">createCheckpoint()</ref> and update its internal state accordingly. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CompoundIntegrator.h" line="215" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CompoundIntegrator_1a5e3f818818363b689550f1d79fc67fa5" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void OpenMM::CompoundIntegrator::serializeParameters</definition>
        <argsstring>(SerializationNode &amp;node) const</argsstring>
        <name>serializeParameters</name>
        <reimplements refid="classOpenMM_1_1Integrator_1a38196dae74d6dea780076f44a10ed4aa">serializeParameters</reimplements>
        <param>
          <type><ref refid="classOpenMM_1_1SerializationNode" kindref="compound">SerializationNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is called while creating a <ref refid="classOpenMM_1_1State" kindref="compound">State</ref>. The <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> should store the values of all time-varying parameters into the <ref refid="classOpenMM_1_1SerializationNode" kindref="compound">SerializationNode</ref> so they can be saved as part of the state. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CompoundIntegrator.h" line="221" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CompoundIntegrator_1a7167d400a076e6117ed15c65eeb68723" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void OpenMM::CompoundIntegrator::deserializeParameters</definition>
        <argsstring>(const SerializationNode &amp;node)</argsstring>
        <name>deserializeParameters</name>
        <reimplements refid="classOpenMM_1_1Integrator_1a6ef56427b124e5e36cabfefc8c11ced4">deserializeParameters</reimplements>
        <param>
          <type>const <ref refid="classOpenMM_1_1SerializationNode" kindref="compound">SerializationNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is called when loading a previously saved <ref refid="classOpenMM_1_1State" kindref="compound">State</ref>. The <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> should load the values of all time-varying parameters from the <ref refid="classOpenMM_1_1SerializationNode" kindref="compound">SerializationNode</ref>. If the node contains parameters that are not defined for this <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref>, it should throw an exception. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CompoundIntegrator.h" line="228" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class allows you to use multiple integration algorithms within a single simulation, switching back and forth between them. To use it, create whatever other Integrators you need, then add all of them to a <ref refid="classOpenMM_1_1CustomIntegrator" kindref="compound">CustomIntegrator</ref>:</para>
<para><verbatim>embed:rst:leading-asterisk
* .. code-block:: cpp
*
*    CompoundIntegrator compoundIntegrator;
*    compoundIntegrator.addIntegrator(new VerletIntegrator(0.001));
*    compoundIntegrator.addIntegrator(new LangevinIntegrator(300.0, 1.0, 0.001));
*
* </verbatim></para>
<para>Next create a <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref>, specifying the <ref refid="classOpenMM_1_1CompoundIntegrator" kindref="compound">CompoundIntegrator</ref> as the <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> to use for the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref>:</para>
<para><verbatim>embed:rst:leading-asterisk
* .. code-block:: cpp
*
*     Context context(system, compoundIntegrator);
*
* </verbatim></para>
<para>Finally, call <ref refid="classOpenMM_1_1CompoundIntegrator_1ad6c6734cb0f4e5507649e9c2698abcc5" kindref="member">setCurrentIntegrator()</ref> to set which <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> is active. That one will be used for all calls to <ref refid="classOpenMM_1_1CompoundIntegrator_1aba23d74fdc33f9c5957aa7aab7d4dd83" kindref="member">step()</ref> until the next time you change it.</para>
<para><verbatim>embed:rst:leading-asterisk
* .. code-block:: cpp
*
*     compoundIntegrator.setCurrentIntegrator(0);
*     compoundIntegrator.step(1000); // Take 1000 steps of Verlet dynamics
*     compoundIntegrator.setCurrentIntegrator(1);
*     compoundIntegrator.step(1000); // Take 1000 steps of Langevin dynamics
*
* </verbatim></para>
<para>When switching between integrators, it is important to make sure they are compatible with each other, and that they will interpret the positions and velocities in the same way. Remember that leapfrog style integrators assume the positions and velocities are offset from each other by half a time step. When switching between a leapfrog and non-leapfrog integrator, you must first adjust the velocities to avoid introducing error. This is also true when switching between two leapfrog integrators that use different step sizes, since they will interpret the velocities as corresponding to different times. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>OpenMM::CompoundIntegrator</label>
        <link refid="classOpenMM_1_1CompoundIntegrator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>OpenMM::Integrator</label>
        <link refid="classOpenMM_1_1Integrator"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>OpenMM::CompoundIntegrator</label>
        <link refid="classOpenMM_1_1CompoundIntegrator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>OpenMM::Context</label>
        <link refid="classOpenMM_1_1Context"/>
      </node>
      <node id="2">
        <label>OpenMM::Integrator</label>
        <link refid="classOpenMM_1_1Integrator"/>
        <childnode refid="3" relation="usage">
          <edgelabel>owner</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CompoundIntegrator.h" line="87" column="1" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CompoundIntegrator.h" bodystart="87" bodyend="232"/>
    <listofallmembers>
      <member refid="classOpenMM_1_1CompoundIntegrator_1a9274d1a1d1ff0d1826781449cb2e980e" prot="public" virt="non-virtual"><scope>OpenMM::CompoundIntegrator</scope><name>addIntegrator</name></member>
      <member refid="classOpenMM_1_1CompoundIntegrator_1a1fc90b4a8d7225a692f891581bd9cafc" prot="protected" virt="virtual"><scope>OpenMM::CompoundIntegrator</scope><name>cleanup</name></member>
      <member refid="classOpenMM_1_1CompoundIntegrator_1a7b6cba1657f6f6fa090f861a81941440" prot="public" virt="non-virtual"><scope>OpenMM::CompoundIntegrator</scope><name>CompoundIntegrator</name></member>
      <member refid="classOpenMM_1_1CompoundIntegrator_1a30694f0f3e73880a1b8fd8af3e5dcde2" prot="protected" virt="virtual"><scope>OpenMM::CompoundIntegrator</scope><name>computeKineticEnergy</name></member>
      <member refid="classOpenMM_1_1Integrator_1ac9c1c07848ae2c2e8617a949a11070c1" prot="protected" virt="non-virtual"><scope>OpenMM::CompoundIntegrator</scope><name>context</name></member>
      <member refid="classOpenMM_1_1CompoundIntegrator_1af3c31f8730469c6b5bc86b5b6f524440" prot="protected" virt="virtual"><scope>OpenMM::CompoundIntegrator</scope><name>createCheckpoint</name></member>
      <member refid="classOpenMM_1_1CompoundIntegrator_1ac9edb7a2a8665b194fe73e1ebb84bd42" prot="private" virt="non-virtual"><scope>OpenMM::CompoundIntegrator</scope><name>currentIntegrator</name></member>
      <member refid="classOpenMM_1_1CompoundIntegrator_1a7167d400a076e6117ed15c65eeb68723" prot="protected" virt="virtual"><scope>OpenMM::CompoundIntegrator</scope><name>deserializeParameters</name></member>
      <member refid="classOpenMM_1_1CompoundIntegrator_1a7c83301f2a67053d16e510de2701e0fa" prot="public" virt="virtual"><scope>OpenMM::CompoundIntegrator</scope><name>getConstraintTolerance</name></member>
      <member refid="classOpenMM_1_1CompoundIntegrator_1a3d37f7b96cd4bfc2e8d2bfa89fe299fa" prot="public" virt="non-virtual"><scope>OpenMM::CompoundIntegrator</scope><name>getCurrentIntegrator</name></member>
      <member refid="classOpenMM_1_1Integrator_1a38c94f952b4fcab36371402e508eacf1" prot="public" virt="virtual"><scope>OpenMM::CompoundIntegrator</scope><name>getIntegrationForceGroups</name></member>
      <member refid="classOpenMM_1_1CompoundIntegrator_1ab825fcf29ea8556d0b81f78437909349" prot="public" virt="non-virtual"><scope>OpenMM::CompoundIntegrator</scope><name>getIntegrator</name></member>
      <member refid="classOpenMM_1_1CompoundIntegrator_1a070c03eaab2f6ca54c5a772972c2be83" prot="public" virt="non-virtual"><scope>OpenMM::CompoundIntegrator</scope><name>getIntegrator</name></member>
      <member refid="classOpenMM_1_1CompoundIntegrator_1a2fdb9eb40fd50dea17541b37f8158bda" prot="protected" virt="virtual"><scope>OpenMM::CompoundIntegrator</scope><name>getKernelNames</name></member>
      <member refid="classOpenMM_1_1CompoundIntegrator_1aaed10077238aba9f392531de741ca546" prot="public" virt="non-virtual"><scope>OpenMM::CompoundIntegrator</scope><name>getNumIntegrators</name></member>
      <member refid="classOpenMM_1_1CompoundIntegrator_1a584cf6ec5f12df62143e394a96c5ba26" prot="public" virt="virtual"><scope>OpenMM::CompoundIntegrator</scope><name>getStepSize</name></member>
      <member refid="classOpenMM_1_1Integrator_1a3a3874d3287e9e2ef4bd21dd2dd02d8a" prot="protected" virt="virtual"><scope>OpenMM::CompoundIntegrator</scope><name>getVelocitiesForTemperature</name></member>
      <member refid="classOpenMM_1_1CompoundIntegrator_1a9b4c50611d590e1b0794474144dbd28e" prot="protected" virt="virtual"><scope>OpenMM::CompoundIntegrator</scope><name>getVelocityTimeOffset</name></member>
      <member refid="classOpenMM_1_1CompoundIntegrator_1a37d872f691a9019281566635ba420c03" prot="protected" virt="virtual"><scope>OpenMM::CompoundIntegrator</scope><name>initialize</name></member>
      <member refid="classOpenMM_1_1Integrator_1a2732506bfb2afd8e2e9954d08cab1304" prot="public" virt="non-virtual"><scope>OpenMM::CompoundIntegrator</scope><name>Integrator</name></member>
      <member refid="classOpenMM_1_1CompoundIntegrator_1a5c975c5b0853d432a50b5592f1723703" prot="private" virt="non-virtual"><scope>OpenMM::CompoundIntegrator</scope><name>integrators</name></member>
      <member refid="classOpenMM_1_1Integrator_1ad61399ae80cda00231dd5d573cfd30e8" prot="protected" virt="virtual"><scope>OpenMM::CompoundIntegrator</scope><name>kineticEnergyRequiresForce</name></member>
      <member refid="classOpenMM_1_1CompoundIntegrator_1a1249d858fe4cda28bf179eb9fdd90ac8" prot="protected" virt="virtual"><scope>OpenMM::CompoundIntegrator</scope><name>loadCheckpoint</name></member>
      <member refid="classOpenMM_1_1Integrator_1ab3f6088553343feb8f47ab789e7a09a1" prot="protected" virt="non-virtual"><scope>OpenMM::CompoundIntegrator</scope><name>owner</name></member>
      <member refid="classOpenMM_1_1CompoundIntegrator_1a5e3f818818363b689550f1d79fc67fa5" prot="protected" virt="virtual"><scope>OpenMM::CompoundIntegrator</scope><name>serializeParameters</name></member>
      <member refid="classOpenMM_1_1CompoundIntegrator_1adb8469bf1fa3e318b202e3a20d1111cf" prot="public" virt="virtual"><scope>OpenMM::CompoundIntegrator</scope><name>setConstraintTolerance</name></member>
      <member refid="classOpenMM_1_1CompoundIntegrator_1ad6c6734cb0f4e5507649e9c2698abcc5" prot="public" virt="non-virtual"><scope>OpenMM::CompoundIntegrator</scope><name>setCurrentIntegrator</name></member>
      <member refid="classOpenMM_1_1Integrator_1a22b42a4a502c999d87e6bbd3f444eab4" prot="public" virt="virtual"><scope>OpenMM::CompoundIntegrator</scope><name>setIntegrationForceGroups</name></member>
      <member refid="classOpenMM_1_1CompoundIntegrator_1abb64e175a1a55b76088b1ad74aea76b0" prot="public" virt="virtual"><scope>OpenMM::CompoundIntegrator</scope><name>setStepSize</name></member>
      <member refid="classOpenMM_1_1CompoundIntegrator_1aa9aa5ffaa70ed940fab8c44d6fc96201" prot="protected" virt="virtual"><scope>OpenMM::CompoundIntegrator</scope><name>stateChanged</name></member>
      <member refid="classOpenMM_1_1CompoundIntegrator_1aba23d74fdc33f9c5957aa7aab7d4dd83" prot="public" virt="virtual"><scope>OpenMM::CompoundIntegrator</scope><name>step</name></member>
      <member refid="classOpenMM_1_1CompoundIntegrator_1a295842b100b68b8cdb1aff132062daec" prot="public" virt="non-virtual"><scope>OpenMM::CompoundIntegrator</scope><name>~CompoundIntegrator</name></member>
      <member refid="classOpenMM_1_1Integrator_1a9abbef84d9e2c4e5a3d3139f8fa84fff" prot="public" virt="virtual"><scope>OpenMM::CompoundIntegrator</scope><name>~Integrator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
