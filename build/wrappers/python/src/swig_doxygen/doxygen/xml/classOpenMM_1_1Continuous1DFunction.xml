<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classOpenMM_1_1Continuous1DFunction" kind="class" language="C++" prot="public">
    <compoundname>OpenMM::Continuous1DFunction</compoundname>
    <basecompoundref refid="classOpenMM_1_1TabulatedFunction" prot="public" virt="non-virtual">OpenMM::TabulatedFunction</basecompoundref>
    <includes refid="TabulatedFunction_8h" local="no">TabulatedFunction.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classOpenMM_1_1Continuous1DFunction_1a7244a52fa3e0296f83002cd85f9c7bc3" prot="private" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; OpenMM::Continuous1DFunction::values</definition>
        <argsstring></argsstring>
        <name>values</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/TabulatedFunction.h" line="122" column="17" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/TabulatedFunction.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1Continuous1DFunction_1ab3fdb1eb8ed2a0015d4d7c9459be9568" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double OpenMM::Continuous1DFunction::min</definition>
        <argsstring></argsstring>
        <name>min</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/TabulatedFunction.h" line="123" column="12" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/TabulatedFunction.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1Continuous1DFunction_1ad8e40c377e31e616b1c876274c92dc79" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double OpenMM::Continuous1DFunction::max</definition>
        <argsstring></argsstring>
        <name>max</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/TabulatedFunction.h" line="123" column="16" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/TabulatedFunction.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classOpenMM_1_1Continuous1DFunction_1a7e9bdeb0594053cd4fdb772f12baf687" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OpenMM::Continuous1DFunction::Continuous1DFunction</definition>
        <argsstring>(const std::vector&lt; double &gt; &amp;values, double min, double max, bool periodic=false)</argsstring>
        <name>Continuous1DFunction</name>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>double</type>
          <declname>min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>max</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>periodic</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a <ref refid="classOpenMM_1_1Continuous1DFunction" kindref="compound">Continuous1DFunction</ref> f(x) based on a set of tabulated values.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>values</parametername>
</parameternamelist>
<parameterdescription>
<para>the tabulated values of the function f(x) at uniformly spaced values of x between min and max. A natural cubic spline is used to interpolate between the tabulated values. The function is assumed to be zero for x &lt; min or x &gt; max. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>the value of x corresponding to the first element of values </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>the value of x corresponding to the last element of values </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>periodic</parametername>
</parameternamelist>
<parameterdescription>
<para>whether the interpolated function is periodic </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/TabulatedFunction.h" line="93" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1Continuous1DFunction_1a4d472eb7ca5e2cef7f394f634c413340" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::Continuous1DFunction::getFunctionParameters</definition>
        <argsstring>(std::vector&lt; double &gt; &amp;values, double &amp;min, double &amp;max) const</argsstring>
        <name>getFunctionParameters</name>
        <param>
          <type>std::vector&lt; double &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the parameters for the tabulated function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">values</parametername>
</parameternamelist>
<parameterdescription>
<para>the tabulated values of the function f(x) at uniformly spaced values of x between min and max. A natural cubic spline is used to interpolate between the tabulated values. The function is assumed to be zero for x &lt; min or x &gt; max. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">min</parametername>
</parameternamelist>
<parameterdescription>
<para>the value of x corresponding to the first element of values </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">max</parametername>
</parameternamelist>
<parameterdescription>
<para>the value of x corresponding to the last element of values </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/TabulatedFunction.h" line="103" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1Continuous1DFunction_1a67c560ff5f4680287e6740b2ebbdd254" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::Continuous1DFunction::setFunctionParameters</definition>
        <argsstring>(const std::vector&lt; double &gt; &amp;values, double min, double max)</argsstring>
        <name>setFunctionParameters</name>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>double</type>
          <declname>min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the parameters for the tabulated function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>values</parametername>
</parameternamelist>
<parameterdescription>
<para>the tabulated values of the function f(x) at uniformly spaced values of x between min and max. A natural cubic spline is used to interpolate between the tabulated values. The function is assumed to be zero for x &lt; min or x &gt; max. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>the value of x corresponding to the first element of values </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>the value of x corresponding to the last element of values </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/TabulatedFunction.h" line="113" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1Continuous1DFunction_1aac20b9417021468e15f10ede2cff61fa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classOpenMM_1_1Continuous1DFunction" kindref="compound">Continuous1DFunction</ref> *</type>
        <definition>Continuous1DFunction * OpenMM::Continuous1DFunction::Copy</definition>
        <argsstring>() const</argsstring>
        <name>Copy</name>
        <reimplements refid="classOpenMM_1_1TabulatedFunction_1adce303d356f47ce25bad0d8f426f9d00">Copy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a deep copy of the tabulated function.</para>
<para><xrefsect id="deprecated_1_deprecated000020"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This will be removed in a future release. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/TabulatedFunction.h" line="119" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1Continuous1DFunction_1a955999dce4ff1d83db8adeab768a292e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool OpenMM::Continuous1DFunction::operator==</definition>
        <argsstring>(const TabulatedFunction &amp;other) const</argsstring>
        <name>operator==</name>
        <reimplements refid="classOpenMM_1_1TabulatedFunction_1ac7b903e168af8fb26de6126863d385b8">operator==</reimplements>
        <param>
          <type>const <ref refid="classOpenMM_1_1TabulatedFunction" kindref="compound">TabulatedFunction</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/TabulatedFunction.h" line="120" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This is a <ref refid="classOpenMM_1_1TabulatedFunction" kindref="compound">TabulatedFunction</ref> that computes a continuous one dimensional function. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>OpenMM::Continuous1DFunction</label>
        <link refid="classOpenMM_1_1Continuous1DFunction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>OpenMM::TabulatedFunction</label>
        <link refid="classOpenMM_1_1TabulatedFunction"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>OpenMM::Continuous1DFunction</label>
        <link refid="classOpenMM_1_1Continuous1DFunction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>OpenMM::TabulatedFunction</label>
        <link refid="classOpenMM_1_1TabulatedFunction"/>
      </node>
    </collaborationgraph>
    <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/TabulatedFunction.h" line="81" column="1" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/TabulatedFunction.h" bodystart="81" bodyend="124"/>
    <listofallmembers>
      <member refid="classOpenMM_1_1Continuous1DFunction_1a7e9bdeb0594053cd4fdb772f12baf687" prot="public" virt="non-virtual"><scope>OpenMM::Continuous1DFunction</scope><name>Continuous1DFunction</name></member>
      <member refid="classOpenMM_1_1Continuous1DFunction_1aac20b9417021468e15f10ede2cff61fa" prot="public" virt="virtual"><scope>OpenMM::Continuous1DFunction</scope><name>Copy</name></member>
      <member refid="classOpenMM_1_1Continuous1DFunction_1a4d472eb7ca5e2cef7f394f634c413340" prot="public" virt="non-virtual"><scope>OpenMM::Continuous1DFunction</scope><name>getFunctionParameters</name></member>
      <member refid="classOpenMM_1_1TabulatedFunction_1aef47933ac326aae1ea502c2b6a7dffd2" prot="public" virt="non-virtual"><scope>OpenMM::Continuous1DFunction</scope><name>getPeriodic</name></member>
      <member refid="classOpenMM_1_1Continuous1DFunction_1ad8e40c377e31e616b1c876274c92dc79" prot="private" virt="non-virtual"><scope>OpenMM::Continuous1DFunction</scope><name>max</name></member>
      <member refid="classOpenMM_1_1Continuous1DFunction_1ab3fdb1eb8ed2a0015d4d7c9459be9568" prot="private" virt="non-virtual"><scope>OpenMM::Continuous1DFunction</scope><name>min</name></member>
      <member refid="classOpenMM_1_1TabulatedFunction_1a0ce49dde966add4c82ae160d2f7e13db" prot="public" virt="virtual"><scope>OpenMM::Continuous1DFunction</scope><name>operator!=</name></member>
      <member refid="classOpenMM_1_1Continuous1DFunction_1a955999dce4ff1d83db8adeab768a292e" prot="public" virt="virtual"><scope>OpenMM::Continuous1DFunction</scope><name>operator==</name></member>
      <member refid="classOpenMM_1_1TabulatedFunction_1abab41e8ee1a8f4584a653d4134115017" prot="protected" virt="non-virtual"><scope>OpenMM::Continuous1DFunction</scope><name>periodic</name></member>
      <member refid="classOpenMM_1_1Continuous1DFunction_1a67c560ff5f4680287e6740b2ebbdd254" prot="public" virt="non-virtual"><scope>OpenMM::Continuous1DFunction</scope><name>setFunctionParameters</name></member>
      <member refid="classOpenMM_1_1Continuous1DFunction_1a7244a52fa3e0296f83002cd85f9c7bc3" prot="private" virt="non-virtual"><scope>OpenMM::Continuous1DFunction</scope><name>values</name></member>
      <member refid="classOpenMM_1_1TabulatedFunction_1a05a008921f73a6a35179ca9b1440dd0f" prot="public" virt="virtual"><scope>OpenMM::Continuous1DFunction</scope><name>~TabulatedFunction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
