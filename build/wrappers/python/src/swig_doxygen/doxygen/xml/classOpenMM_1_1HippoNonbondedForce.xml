<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classOpenMM_1_1HippoNonbondedForce" kind="class" language="C++" prot="public">
    <compoundname>OpenMM::HippoNonbondedForce</compoundname>
    <basecompoundref refid="classOpenMM_1_1Force" prot="public" virt="non-virtual">OpenMM::Force</basecompoundref>
    <includes refid="HippoNonbondedForce_8h" local="no">HippoNonbondedForce.h</includes>
    <innerclass refid="classOpenMM_1_1HippoNonbondedForce_1_1ExceptionInfo" prot="private">OpenMM::HippoNonbondedForce::ExceptionInfo</innerclass>
    <innerclass refid="classOpenMM_1_1HippoNonbondedForce_1_1ParticleInfo" prot="private">OpenMM::HippoNonbondedForce::ParticleInfo</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classOpenMM_1_1HippoNonbondedForce_1a2c8e3cdadc475d0668b5edb4b20f95b0" prot="public" static="no" strong="no">
        <type></type>
        <name>NonbondedMethod</name>
        <enumvalue id="classOpenMM_1_1HippoNonbondedForce_1a2c8e3cdadc475d0668b5edb4b20f95b0a4bde8396e88478627c960fb8a3c52310" prot="public">
          <name>NoCutoff</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>No cutoff is applied to nonbonded interactions. The full set of N^2 interactions is computed exactly. This necessarily means that periodic boundary conditions cannot be used. This is the default. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOpenMM_1_1HippoNonbondedForce_1a2c8e3cdadc475d0668b5edb4b20f95b0a35a8b76213df473b7478c29baaef1ecf" prot="public">
          <name>PME</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Periodic boundary conditions are used, and Particle-Mesh Ewald (PME) summation is used to compute the interaction of each particle with all periodic copies of every other particle. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="62" column="5" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" bodystart="62" bodyend="73"/>
      </memberdef>
      <memberdef kind="enum" id="classOpenMM_1_1HippoNonbondedForce_1a1776e95734f26bbe0cc0f5a92eafa687" prot="public" static="no" strong="no">
        <type></type>
        <name>ParticleAxisTypes</name>
        <enumvalue id="classOpenMM_1_1HippoNonbondedForce_1a1776e95734f26bbe0cc0f5a92eafa687a904dc7bb2d26b50444f29ac262a5b2ad" prot="public">
          <name>ZThenX</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOpenMM_1_1HippoNonbondedForce_1a1776e95734f26bbe0cc0f5a92eafa687a932ab4a48264b124ca8c45d853cde8da" prot="public">
          <name>Bisector</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOpenMM_1_1HippoNonbondedForce_1a1776e95734f26bbe0cc0f5a92eafa687a0ff471c451cff60a270f964630eb6a3b" prot="public">
          <name>ZBisect</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOpenMM_1_1HippoNonbondedForce_1a1776e95734f26bbe0cc0f5a92eafa687ab599018d100ec88e13b4f7a5801101ef" prot="public">
          <name>ThreeFold</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOpenMM_1_1HippoNonbondedForce_1a1776e95734f26bbe0cc0f5a92eafa687af20070c95501c93c1768c7405c62c9e3" prot="public">
          <name>ZOnly</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOpenMM_1_1HippoNonbondedForce_1a1776e95734f26bbe0cc0f5a92eafa687a4a19f913c108b7e8572d21b0f758dd4d" prot="public">
          <name>NoAxisType</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="75" column="5" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" bodystart="75" bodyend="75"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classOpenMM_1_1HippoNonbondedForce_1a21737b4784039ef7098896d71a531a63" prot="private" static="no" mutable="no">
        <type><ref refid="classOpenMM_1_1HippoNonbondedForce_1a2c8e3cdadc475d0668b5edb4b20f95b0" kindref="member">NonbondedMethod</ref></type>
        <definition>NonbondedMethod OpenMM::HippoNonbondedForce::nonbondedMethod</definition>
        <argsstring></argsstring>
        <name>nonbondedMethod</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="388" column="21" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" bodystart="387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1HippoNonbondedForce_1a7ee80dd75f551c67e6bc2560506d7d01" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double OpenMM::HippoNonbondedForce::cutoffDistance</definition>
        <argsstring></argsstring>
        <name>cutoffDistance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="389" column="12" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" bodystart="389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1HippoNonbondedForce_1a929fe0d17de05275a4f5856ad210c45a" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double OpenMM::HippoNonbondedForce::switchingDistance</definition>
        <argsstring></argsstring>
        <name>switchingDistance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="389" column="27" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" bodystart="389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1HippoNonbondedForce_1a536fae6930a7376a8baadf8d244d4c80" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double OpenMM::HippoNonbondedForce::ewaldErrorTol</definition>
        <argsstring></argsstring>
        <name>ewaldErrorTol</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="390" column="12" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" bodystart="390" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1HippoNonbondedForce_1a1b3ddee7553305c4d22c49a96e36721a" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double OpenMM::HippoNonbondedForce::alpha</definition>
        <argsstring></argsstring>
        <name>alpha</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="391" column="12" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" bodystart="391" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1HippoNonbondedForce_1aae2dac28f5ab1754c383fee48a1357e0" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double OpenMM::HippoNonbondedForce::dalpha</definition>
        <argsstring></argsstring>
        <name>dalpha</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="391" column="18" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" bodystart="391" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1HippoNonbondedForce_1a719879c21f1f6f663cf761f923f60356" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int OpenMM::HippoNonbondedForce::nx</definition>
        <argsstring></argsstring>
        <name>nx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="392" column="9" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1HippoNonbondedForce_1a25d3c47ebdb04cee542597bc0491b809" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int OpenMM::HippoNonbondedForce::ny</definition>
        <argsstring></argsstring>
        <name>ny</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="392" column="12" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1HippoNonbondedForce_1ad47810c64f4aab43b3f6f77da40810a1" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int OpenMM::HippoNonbondedForce::nz</definition>
        <argsstring></argsstring>
        <name>nz</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="392" column="15" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1HippoNonbondedForce_1a64a8b8430d5eb7724ae1ff3e01c5c080" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int OpenMM::HippoNonbondedForce::dnx</definition>
        <argsstring></argsstring>
        <name>dnx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="392" column="18" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1HippoNonbondedForce_1a9967591085b1d4df8804cf86c120654c" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int OpenMM::HippoNonbondedForce::dny</definition>
        <argsstring></argsstring>
        <name>dny</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="392" column="22" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1HippoNonbondedForce_1a39fbb1cbb211535bee79721026f0be71" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int OpenMM::HippoNonbondedForce::dnz</definition>
        <argsstring></argsstring>
        <name>dnz</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="392" column="26" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1HippoNonbondedForce_1a86385dca9c81a0e462bf24b3eab005f7" prot="private" static="no" mutable="no">
        <type>std::vector&lt; ParticleInfo &gt;</type>
        <definition>std::vector&lt;ParticleInfo&gt; OpenMM::HippoNonbondedForce::particles</definition>
        <argsstring></argsstring>
        <name>particles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="393" column="17" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" bodystart="393" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1HippoNonbondedForce_1a170d342540e8a9cf5a4ba915fb887bb5" prot="private" static="no" mutable="no">
        <type>std::vector&lt; ExceptionInfo &gt;</type>
        <definition>std::vector&lt;ExceptionInfo&gt; OpenMM::HippoNonbondedForce::exceptions</definition>
        <argsstring></argsstring>
        <name>exceptions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="394" column="17" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" bodystart="394" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1HippoNonbondedForce_1a5fbefa4f3e5cd90572370ec41d4eca64" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::pair&lt; int, int &gt;, int &gt;</type>
        <definition>std::map&lt;std::pair&lt;int, int&gt;, int&gt; OpenMM::HippoNonbondedForce::exceptionMap</definition>
        <argsstring></argsstring>
        <name>exceptionMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="395" column="14" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" bodystart="395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1HippoNonbondedForce_1ae41a5e4d406ba413a6d1895767abe463" prot="private" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; OpenMM::HippoNonbondedForce::extrapolationCoefficients</definition>
        <argsstring></argsstring>
        <name>extrapolationCoefficients</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="396" column="17" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" bodystart="396" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classOpenMM_1_1HippoNonbondedForce_1a2dfc667ce64b88e0554210dbe72ae41f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OpenMM::HippoNonbondedForce::HippoNonbondedForce</definition>
        <argsstring>()</argsstring>
        <name>HippoNonbondedForce</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a <ref refid="classOpenMM_1_1HippoNonbondedForce" kindref="compound">HippoNonbondedForce</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="80" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1HippoNonbondedForce_1a17bae8c612270f248011aa391a353d7d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::HippoNonbondedForce::getNumParticles</definition>
        <argsstring>() const</argsstring>
        <name>getNumParticles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of particles in the potential function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="84" column="9" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" bodystart="84" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1HippoNonbondedForce_1a2ebbac196991284d0ea1ddd21e8a23a8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::HippoNonbondedForce::getNumExceptions</definition>
        <argsstring>() const</argsstring>
        <name>getNumExceptions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of exceptions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="90" column="9" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" bodystart="90" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1HippoNonbondedForce_1a151796c4ac5d669e5ee38cd68d0a952a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classOpenMM_1_1HippoNonbondedForce_1a2c8e3cdadc475d0668b5edb4b20f95b0" kindref="member">NonbondedMethod</ref></type>
        <definition>NonbondedMethod OpenMM::HippoNonbondedForce::getNonbondedMethod</definition>
        <argsstring>() const</argsstring>
        <name>getNonbondedMethod</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the method used for handling long-range nonbonded interactions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="96" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1HippoNonbondedForce_1aae0bcae0273d29886ea4edf8ddc574ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::HippoNonbondedForce::setNonbondedMethod</definition>
        <argsstring>(NonbondedMethod method)</argsstring>
        <name>setNonbondedMethod</name>
        <param>
          <type><ref refid="classOpenMM_1_1HippoNonbondedForce_1a2c8e3cdadc475d0668b5edb4b20f95b0" kindref="member">NonbondedMethod</ref></type>
          <declname>method</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the method used for handling long-range nonbonded interactions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="100" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1HippoNonbondedForce_1a915f05e7661da688f3711c52135070d6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double OpenMM::HippoNonbondedForce::getCutoffDistance</definition>
        <argsstring>() const</argsstring>
        <name>getCutoffDistance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the cutoff distance (in nm) being used for nonbonded interactions. If the NonbondedMethod in use is NoCutoff, this value will have no effect.</para>
<para><simplesect kind="return"><para>the cutoff distance, measured in nm </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="107" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1HippoNonbondedForce_1afb77573991f24188dc30003e81f8f8ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::HippoNonbondedForce::setCutoffDistance</definition>
        <argsstring>(double distance)</argsstring>
        <name>setCutoffDistance</name>
        <param>
          <type>double</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the cutoff distance (in nm) being used for nonbonded interactions. If the NonbondedMethod in use is NoCutoff, this value will have no effect.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>distance</parametername>
</parameternamelist>
<parameterdescription>
<para>the cutoff distance, measured in nm </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="114" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1HippoNonbondedForce_1a11117474641a73c9940fcaa80c83573b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double OpenMM::HippoNonbondedForce::getSwitchingDistance</definition>
        <argsstring>() const</argsstring>
        <name>getSwitchingDistance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the distance at which the switching function begins to reduce the repulsion and charge transfer interactions. This must be less than the cutoff distance. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="119" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1HippoNonbondedForce_1a782b3fa4f2acca6c1e9310fecf4ad1d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::HippoNonbondedForce::setSwitchingDistance</definition>
        <argsstring>(double distance)</argsstring>
        <name>setSwitchingDistance</name>
        <param>
          <type>double</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the distance at which the switching function begins to reduce the repulsion and charge transfer interactions. This must be less than the cutoff distance. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="124" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1HippoNonbondedForce_1a3b7a042e47adf43883e9115cc98e3bd4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; double &gt; &amp;</type>
        <definition>const std::vector&lt; double &gt; &amp; OpenMM::HippoNonbondedForce::getExtrapolationCoefficients</definition>
        <argsstring>() const</argsstring>
        <name>getExtrapolationCoefficients</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the coefficients for the mu_0, mu_1, mu_2, ..., mu_n terms in the extrapolation algorithm for induced dipoles. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="129" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1HippoNonbondedForce_1a5cf66ab73236f4007491e6b434d56f37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::HippoNonbondedForce::setExtrapolationCoefficients</definition>
        <argsstring>(const std::vector&lt; double &gt; &amp;coefficients)</argsstring>
        <name>setExtrapolationCoefficients</name>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>coefficients</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the coefficients for the mu_0, mu_1, mu_2, ..., mu_n terms in the extrapolation algorithm for induced dipoles.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coefficients</parametername>
</parameternamelist>
<parameterdescription>
<para>a vector whose mth entry specifies the coefficient for mu_m. The length of this vector determines how many iterations are performed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="137" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1HippoNonbondedForce_1a5f3b4f9ce29986ba17d34a1082cb3a89" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::HippoNonbondedForce::getPMEParameters</definition>
        <argsstring>(double &amp;alpha, int &amp;nx, int &amp;ny, int &amp;nz) const</argsstring>
        <name>getPMEParameters</name>
        <param>
          <type>double &amp;</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>ny</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>nz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the parameters to use for PME calculations. If alpha is 0 (the default), these parameters are ignored and instead their values are chosen based on the Ewald error tolerance.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>the separation parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">nx</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of grid points along the X axis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">ny</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of grid points along the Y axis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">nz</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of grid points along the Z axis </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="147" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1HippoNonbondedForce_1a7ec050837adbb1b69c9942d154143f75" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::HippoNonbondedForce::getDPMEParameters</definition>
        <argsstring>(double &amp;alpha, int &amp;nx, int &amp;ny, int &amp;nz) const</argsstring>
        <name>getDPMEParameters</name>
        <param>
          <type>double &amp;</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>ny</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>nz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the parameters to use for dispersion PME calculations. If alpha is 0 (the default), these parameters are ignored and instead their values are chosen based on the Ewald error tolerance.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>the separation parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">nx</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of dispersion grid points along the X axis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">ny</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of dispersion grid points along the Y axis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">nz</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of dispersion grid points along the Z axis </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="157" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1HippoNonbondedForce_1a9af136dfc4078f0bdc938341359ae03d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::HippoNonbondedForce::setPMEParameters</definition>
        <argsstring>(double alpha, int nx, int ny, int nz)</argsstring>
        <name>setPMEParameters</name>
        <param>
          <type>double</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ny</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the parameters to use for PME calculations. If alpha is 0 (the default), these parameters are ignored and instead their values are chosen based on the Ewald error tolerance.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>the separation parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nx</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of grid points along the X axis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ny</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of grid points along the Y axis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nz</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of grid points along the Z axis </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="167" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1HippoNonbondedForce_1a9ca0804bfde5ed1dcb867bd024918e87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::HippoNonbondedForce::setDPMEParameters</definition>
        <argsstring>(double alpha, int nx, int ny, int nz)</argsstring>
        <name>setDPMEParameters</name>
        <param>
          <type>double</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ny</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the parameters to use for dispersion PME calculations. If alpha is 0 (the default), these parameters are ignored and instead their values are chosen based on the Ewald error tolerance.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>the separation parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nx</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of grid points along the X axis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ny</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of grid points along the Y axis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nz</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of grid points along the Z axis </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="177" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1HippoNonbondedForce_1a147cdd317f8186e5a9fbcc0ede2fee4c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::HippoNonbondedForce::getPMEParametersInContext</definition>
        <argsstring>(const Context &amp;context, double &amp;alpha, int &amp;nx, int &amp;ny, int &amp;nz) const</argsstring>
        <name>getPMEParametersInContext</name>
        <param>
          <type>const <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>ny</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>nz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the parameters being used for PME in a particular <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref>. Because some platforms have restrictions on the allowed grid sizes, the values that are actually used may be slightly different from those specified with setPmeGridDimensions(), or the standard values calculated based on the Ewald error tolerance. See the manual for details.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> for which to get the parameters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>the separation parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">nx</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of grid points along the X axis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">ny</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of grid points along the Y axis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">nz</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of grid points along the Z axis </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="190" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1HippoNonbondedForce_1a376d840bc29ab306878fd8a482a57666" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::HippoNonbondedForce::getDPMEParametersInContext</definition>
        <argsstring>(const Context &amp;context, double &amp;alpha, int &amp;nx, int &amp;ny, int &amp;nz) const</argsstring>
        <name>getDPMEParametersInContext</name>
        <param>
          <type>const <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>ny</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>nz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the parameters being used for dispersion PME in a particular <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref>. Because some platforms have restrictions on the allowed grid sizes, the values that are actually used may be slightly different from those specified with <ref refid="classOpenMM_1_1HippoNonbondedForce_1a9af136dfc4078f0bdc938341359ae03d" kindref="member">setPMEParameters()</ref>, or the standard values calculated based on the Ewald error tolerance. See the manual for details.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> for which to get the parameters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>the separation parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">nx</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of grid points along the X axis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">ny</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of grid points along the Y axis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">nz</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of grid points along the Z axis </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="203" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1HippoNonbondedForce_1a1b37e7a9c50b726a56eb77b035218f9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::HippoNonbondedForce::addParticle</definition>
        <argsstring>(double charge, const std::vector&lt; double &gt; &amp;dipole, const std::vector&lt; double &gt; &amp;quadrupole, double coreCharge, double alpha, double epsilon, double damping, double c6, double pauliK, double pauliQ, double pauliAlpha, double polarizability, int axisType, int multipoleAtomZ, int multipoleAtomX, int multipoleAtomY)</argsstring>
        <name>addParticle</name>
        <param>
          <type>double</type>
          <declname>charge</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>dipole</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>quadrupole</declname>
        </param>
        <param>
          <type>double</type>
          <declname>coreCharge</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>double</type>
          <declname>epsilon</declname>
        </param>
        <param>
          <type>double</type>
          <declname>damping</declname>
        </param>
        <param>
          <type>double</type>
          <declname>c6</declname>
        </param>
        <param>
          <type>double</type>
          <declname>pauliK</declname>
        </param>
        <param>
          <type>double</type>
          <declname>pauliQ</declname>
        </param>
        <param>
          <type>double</type>
          <declname>pauliAlpha</declname>
        </param>
        <param>
          <type>double</type>
          <declname>polarizability</declname>
        </param>
        <param>
          <type>int</type>
          <declname>axisType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>multipoleAtomZ</declname>
        </param>
        <param>
          <type>int</type>
          <declname>multipoleAtomX</declname>
        </param>
        <param>
          <type>int</type>
          <declname>multipoleAtomY</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add the nonbonded force parameters for a particle. This should be called once for each particle in the <ref refid="classOpenMM_1_1System" kindref="compound">System</ref>. When it is called for the i&apos;th time, it specifies the parameters for the i&apos;th particle.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>charge</parametername>
</parameternamelist>
<parameterdescription>
<para>the particle&apos;s charge </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dipole</parametername>
</parameternamelist>
<parameterdescription>
<para>the particle&apos;s molecular dipole (vector of size 3) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>quadrupole</parametername>
</parameternamelist>
<parameterdescription>
<para>the particle&apos;s molecular quadrupole (vector of size 9) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coreCharge</parametername>
</parameternamelist>
<parameterdescription>
<para>the charge of the atomic core </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>controls the width of the particle&apos;s electron density </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>epsilon</parametername>
</parameternamelist>
<parameterdescription>
<para>sets the magnitude of charge transfer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>damping</parametername>
</parameternamelist>
<parameterdescription>
<para>sets the length scale for charge transfer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c6</parametername>
</parameternamelist>
<parameterdescription>
<para>the coefficient of the dispersion interaction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pauliK</parametername>
</parameternamelist>
<parameterdescription>
<para>the coefficient of the Pauli repulsion interaction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pauliQ</parametername>
</parameternamelist>
<parameterdescription>
<para>the charge used in computing the Pauli repulsion interaction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pauliAlpha</parametername>
</parameternamelist>
<parameterdescription>
<para>the width of the particle&apos;s electron density for computing the Pauli repulsion interaction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>polarizability</parametername>
</parameternamelist>
<parameterdescription>
<para>atomic polarizability </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>axisType</parametername>
</parameternamelist>
<parameterdescription>
<para>the particle&apos;s axis type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>multipoleAtomZ</parametername>
</parameternamelist>
<parameterdescription>
<para>index of first atom used in defining the local coordinate system for multipoles </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>multipoleAtomX</parametername>
</parameternamelist>
<parameterdescription>
<para>index of second atom used in defining the local coordinate system for multipoles </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>multipoleAtomY</parametername>
</parameternamelist>
<parameterdescription>
<para>index of third atom used in defining the local coordinate system for multipoles</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the index of the particle that was added </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="227" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1HippoNonbondedForce_1aba80e66c07f1cabf96b095cd0490bed4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::HippoNonbondedForce::getParticleParameters</definition>
        <argsstring>(int index, double &amp;charge, std::vector&lt; double &gt; &amp;dipole, std::vector&lt; double &gt; &amp;quadrupole, double &amp;coreCharge, double &amp;alpha, double &amp;epsilon, double &amp;damping, double &amp;c6, double &amp;pauliK, double &amp;pauliQ, double &amp;pauliAlpha, double &amp;polarizability, int &amp;axisType, int &amp;multipoleAtomZ, int &amp;multipoleAtomX, int &amp;multipoleAtomY) const</argsstring>
        <name>getParticleParameters</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>charge</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt; &amp;</type>
          <declname>dipole</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt; &amp;</type>
          <declname>quadrupole</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>coreCharge</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>epsilon</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>damping</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>c6</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>pauliK</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>pauliQ</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>pauliAlpha</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>polarizability</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>axisType</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>multipoleAtomZ</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>multipoleAtomX</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>multipoleAtomY</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the nonbonded force parameters for a particle.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the particle for which to get parameters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>charge</parametername>
</parameternamelist>
<parameterdescription>
<para>the particle&apos;s charge </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dipole</parametername>
</parameternamelist>
<parameterdescription>
<para>the particle&apos;s molecular dipole (vector of size 3) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>quadrupole</parametername>
</parameternamelist>
<parameterdescription>
<para>the particle&apos;s molecular quadrupole (vector of size 9) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coreCharge</parametername>
</parameternamelist>
<parameterdescription>
<para>the charge of the atomic core </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>controls the width of the particle&apos;s electron density </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>epsilon</parametername>
</parameternamelist>
<parameterdescription>
<para>sets the magnitude of charge transfer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>damping</parametername>
</parameternamelist>
<parameterdescription>
<para>sets the length scale for charge transfer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c6</parametername>
</parameternamelist>
<parameterdescription>
<para>the coefficient of the dispersion interaction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pauliK</parametername>
</parameternamelist>
<parameterdescription>
<para>the coefficient of the Pauli repulsion interaction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pauliQ</parametername>
</parameternamelist>
<parameterdescription>
<para>the charge used in computing the Pauli repulsion interaction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pauliAlpha</parametername>
</parameternamelist>
<parameterdescription>
<para>the width of the particle&apos;s electron density for computing the Pauli repulsion interaction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>polarizability</parametername>
</parameternamelist>
<parameterdescription>
<para>atomic polarizability </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>axisType</parametername>
</parameternamelist>
<parameterdescription>
<para>the particle&apos;s axis type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>multipoleAtomZ</parametername>
</parameternamelist>
<parameterdescription>
<para>index of first atom used in defining the local coordinate system for multipoles </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>multipoleAtomX</parametername>
</parameternamelist>
<parameterdescription>
<para>index of second atom used in defining the local coordinate system for multipoles </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>multipoleAtomY</parametername>
</parameternamelist>
<parameterdescription>
<para>index of third atom used in defining the local coordinate system for multipoles </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="251" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1HippoNonbondedForce_1ad359724380e6e41652944f5e68b0a9d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::HippoNonbondedForce::setParticleParameters</definition>
        <argsstring>(int index, double charge, const std::vector&lt; double &gt; &amp;dipole, const std::vector&lt; double &gt; &amp;quadrupole, double coreCharge, double alpha, double epsilon, double damping, double c6, double pauliK, double pauliQ, double pauliAlpha, double polarizability, int axisType, int multipoleAtomZ, int multipoleAtomX, int multipoleAtomY)</argsstring>
        <name>setParticleParameters</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>double</type>
          <declname>charge</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>dipole</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>quadrupole</declname>
        </param>
        <param>
          <type>double</type>
          <declname>coreCharge</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>double</type>
          <declname>epsilon</declname>
        </param>
        <param>
          <type>double</type>
          <declname>damping</declname>
        </param>
        <param>
          <type>double</type>
          <declname>c6</declname>
        </param>
        <param>
          <type>double</type>
          <declname>pauliK</declname>
        </param>
        <param>
          <type>double</type>
          <declname>pauliQ</declname>
        </param>
        <param>
          <type>double</type>
          <declname>pauliAlpha</declname>
        </param>
        <param>
          <type>double</type>
          <declname>polarizability</declname>
        </param>
        <param>
          <type>int</type>
          <declname>axisType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>multipoleAtomZ</declname>
        </param>
        <param>
          <type>int</type>
          <declname>multipoleAtomX</declname>
        </param>
        <param>
          <type>int</type>
          <declname>multipoleAtomY</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the nonbonded force parameters for a particle.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the particle for which to set parameters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>charge</parametername>
</parameternamelist>
<parameterdescription>
<para>the particle&apos;s charge </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dipole</parametername>
</parameternamelist>
<parameterdescription>
<para>the particle&apos;s molecular dipole (vector of size 3) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>quadrupole</parametername>
</parameternamelist>
<parameterdescription>
<para>the particle&apos;s molecular quadrupole (vector of size 9) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coreCharge</parametername>
</parameternamelist>
<parameterdescription>
<para>the charge of the atomic core </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>controls the width of the particle&apos;s electron density </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>epsilon</parametername>
</parameternamelist>
<parameterdescription>
<para>sets the magnitude of charge transfer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>damping</parametername>
</parameternamelist>
<parameterdescription>
<para>sets the length scale for charge transfer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c6</parametername>
</parameternamelist>
<parameterdescription>
<para>the coefficient of the dispersion interaction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pauliK</parametername>
</parameternamelist>
<parameterdescription>
<para>the coefficient of the Pauli repulsion interaction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pauliQ</parametername>
</parameternamelist>
<parameterdescription>
<para>the charge used in computing the Pauli repulsion interaction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pauliAlpha</parametername>
</parameternamelist>
<parameterdescription>
<para>the width of the particle&apos;s electron density for computing the Pauli repulsion interaction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>polarizability</parametername>
</parameternamelist>
<parameterdescription>
<para>atomic polarizability </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>axisType</parametername>
</parameternamelist>
<parameterdescription>
<para>the particle&apos;s axis type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>multipoleAtomZ</parametername>
</parameternamelist>
<parameterdescription>
<para>index of first atom used in defining the local coordinate system for multipoles </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>multipoleAtomX</parametername>
</parameternamelist>
<parameterdescription>
<para>index of second atom used in defining the local coordinate system for multipoles </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>multipoleAtomY</parametername>
</parameternamelist>
<parameterdescription>
<para>index of third atom used in defining the local coordinate system for multipoles </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="275" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1HippoNonbondedForce_1aa4fb569ba2f93e26f7bcc0def684f390" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::HippoNonbondedForce::addException</definition>
        <argsstring>(int particle1, int particle2, double multipoleMultipoleScale, double dipoleMultipoleScale, double dipoleDipoleScale, double dispersionScale, double repulsionScale, double chargeTransferScale, bool replace=false)</argsstring>
        <name>addException</name>
        <param>
          <type>int</type>
          <declname>particle1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>particle2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>multipoleMultipoleScale</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dipoleMultipoleScale</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dipoleDipoleScale</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dispersionScale</declname>
        </param>
        <param>
          <type>double</type>
          <declname>repulsionScale</declname>
        </param>
        <param>
          <type>double</type>
          <declname>chargeTransferScale</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>replace</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add an interaction to the list of exceptions that should be calculated differently from other interactions. If all scale factors are set to 0, this will cause the interaction to be completely omitted from force and energy calculations.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>particle1</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the first particle involved in the interaction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>particle2</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the second particle involved in the interaction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>multipoleMultipoleScale</parametername>
</parameternamelist>
<parameterdescription>
<para>the factor by which to scale the Coulomb interaction between fixed multipoles </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dipoleMultipoleScale</parametername>
</parameternamelist>
<parameterdescription>
<para>the factor by which to scale the Coulomb interaction between an induced dipole and a fixed multipole </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dipoleDipoleScale</parametername>
</parameternamelist>
<parameterdescription>
<para>the factor by which to scale the Coulomb interaction between induced dipoles </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dispersionScale</parametername>
</parameternamelist>
<parameterdescription>
<para>the factor by which to scale the dispersion interaction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>repulsionScale</parametername>
</parameternamelist>
<parameterdescription>
<para>the factor by which to scale the Pauli repulsion </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chargeTransferScale</parametername>
</parameternamelist>
<parameterdescription>
<para>the factor by which to scale the charge transfer interaction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>replace</parametername>
</parameternamelist>
<parameterdescription>
<para>determines the behavior if there is already an exception for the same two particles. If true, the existing one is replaced. If false, an exception is thrown. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the index of the exception that was added </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="295" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1HippoNonbondedForce_1a240dab8836d1edc5a6077dc9b60bd319" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::HippoNonbondedForce::getExceptionParameters</definition>
        <argsstring>(int index, int &amp;particle1, int &amp;particle2, double &amp;multipoleMultipoleScale, double &amp;dipoleMultipoleScale, double &amp;dipoleDipoleScale, double &amp;dispersionScale, double &amp;repulsionScale, double &amp;chargeTransferScale) const</argsstring>
        <name>getExceptionParameters</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>particle1</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>particle2</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>multipoleMultipoleScale</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>dipoleMultipoleScale</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>dipoleDipoleScale</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>dispersionScale</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>repulsionScale</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>chargeTransferScale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the scale factors for an interaction that should be calculated differently from others.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the interaction for which to get parameters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>particle1</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the first particle involved in the interaction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>particle2</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the second particle involved in the interaction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>multipoleMultipoleScale</parametername>
</parameternamelist>
<parameterdescription>
<para>the factor by which to scale the Coulomb interaction between fixed multipoles </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dipoleMultipoleScale</parametername>
</parameternamelist>
<parameterdescription>
<para>the factor by which to scale the Coulomb interaction between an induced dipole and a fixed multipole </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dipoleDipoleScale</parametername>
</parameternamelist>
<parameterdescription>
<para>the factor by which to scale the Coulomb interaction between induced dipoles </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dispersionScale</parametername>
</parameternamelist>
<parameterdescription>
<para>the factor by which to scale the dispersion interaction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>repulsionScale</parametername>
</parameternamelist>
<parameterdescription>
<para>the factor by which to scale the Pauli repulsion </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chargeTransferScale</parametername>
</parameternamelist>
<parameterdescription>
<para>the factor by which to scale the charge transfer interaction </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="310" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1HippoNonbondedForce_1aff9840823e42e726ff06bd73d178a852" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::HippoNonbondedForce::setExceptionParameters</definition>
        <argsstring>(int index, int particle1, int particle2, double multipoleMultipoleScale, double dipoleMultipoleScale, double dipoleDipoleScale, double dispersionScale, double repulsionScale, double chargeTransferScale)</argsstring>
        <name>setExceptionParameters</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>int</type>
          <declname>particle1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>particle2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>multipoleMultipoleScale</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dipoleMultipoleScale</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dipoleDipoleScale</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dispersionScale</declname>
        </param>
        <param>
          <type>double</type>
          <declname>repulsionScale</declname>
        </param>
        <param>
          <type>double</type>
          <declname>chargeTransferScale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the scale factors for an interaction that should be calculated differently from others. If all scale factors are set to 0, this will cause the interaction to be completely omitted from force and energy calculations.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the interaction for which to set parameters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>particle1</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the first particle involved in the interaction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>particle2</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the second particle involved in the interaction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>multipoleMultipoleScale</parametername>
</parameternamelist>
<parameterdescription>
<para>the factor by which to scale the Coulomb interaction between fixed multipoles </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dipoleMultipoleScale</parametername>
</parameternamelist>
<parameterdescription>
<para>the factor by which to scale the Coulomb interaction between an induced dipole and a fixed multipole </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dipoleDipoleScale</parametername>
</parameternamelist>
<parameterdescription>
<para>the factor by which to scale the Coulomb interaction between induced dipoles </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dispersionScale</parametername>
</parameternamelist>
<parameterdescription>
<para>the factor by which to scale the dispersion interaction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>repulsionScale</parametername>
</parameternamelist>
<parameterdescription>
<para>the factor by which to scale the Pauli repulsion </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chargeTransferScale</parametername>
</parameternamelist>
<parameterdescription>
<para>the factor by which to scale the charge transfer interaction </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="327" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1HippoNonbondedForce_1a1b99bd0f1595c4fad795ec4b3fba4ebe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double OpenMM::HippoNonbondedForce::getEwaldErrorTolerance</definition>
        <argsstring>() const</argsstring>
        <name>getEwaldErrorTolerance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the error tolerance for Ewald summation. This corresponds to the fractional error in the forces which is acceptable. This value is used to select the grid dimensions and separation (alpha) parameter so that the average error level will be less than the tolerance. There is not a rigorous guarantee that all forces on all atoms will be less than the tolerance, however.</para>
<para>This can be overridden by explicitly setting an alpha parameter and grid dimensions to use. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="337" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1HippoNonbondedForce_1a9a2a8dae474149ae0509f335185e0abd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::HippoNonbondedForce::setEwaldErrorTolerance</definition>
        <argsstring>(double tol)</argsstring>
        <name>setEwaldErrorTolerance</name>
        <param>
          <type>double</type>
          <declname>tol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the error tolerance for Ewald summation. This corresponds to the fractional error in the forces which is acceptable. This value is used to select the grid dimensions and separation (alpha) parameter so that the average error level will be less than the tolerance. There is not a rigorous guarantee that all forces on all atoms will be less than the tolerance, however.</para>
<para>This can be overridden by explicitly setting an alpha parameter and grid dimensions to use. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="346" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1HippoNonbondedForce_1ad5293e6b2f31dda3583350666fde613e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::HippoNonbondedForce::getLabFramePermanentDipoles</definition>
        <argsstring>(Context &amp;context, std::vector&lt; Vec3 &gt; &amp;dipoles)</argsstring>
        <name>getLabFramePermanentDipoles</name>
        <param>
          <type><ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classOpenMM_1_1Vec3" kindref="compound">Vec3</ref> &gt; &amp;</type>
          <declname>dipoles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the fixed dipole moments of all particles in the global reference frame.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> for which to get the fixed dipoles </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dipoles</parametername>
</parameternamelist>
<parameterdescription>
<para>the fixed dipole moment of particle i is stored into the i&apos;th element </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="353" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1HippoNonbondedForce_1a38b44824854a2a8e2b4049d2801fb0ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::HippoNonbondedForce::getInducedDipoles</definition>
        <argsstring>(Context &amp;context, std::vector&lt; Vec3 &gt; &amp;dipoles)</argsstring>
        <name>getInducedDipoles</name>
        <param>
          <type><ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classOpenMM_1_1Vec3" kindref="compound">Vec3</ref> &gt; &amp;</type>
          <declname>dipoles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the induced dipole moments of all particles.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> for which to get the induced dipoles </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dipoles</parametername>
</parameternamelist>
<parameterdescription>
<para>the induced dipole moment of particle i is stored into the i&apos;th element </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="360" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1HippoNonbondedForce_1a69225cf8878a46ed06324bf586326400" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::HippoNonbondedForce::updateParametersInContext</definition>
        <argsstring>(Context &amp;context)</argsstring>
        <name>updateParametersInContext</name>
        <param>
          <type><ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update the particle and exception parameters in a <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> to match those stored in this <ref refid="classOpenMM_1_1Force" kindref="compound">Force</ref> object. This method provides an efficient method to update certain parameters in an existing <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> without needing to reinitialize it. Simply call <ref refid="classOpenMM_1_1HippoNonbondedForce_1ad359724380e6e41652944f5e68b0a9d0" kindref="member">setParticleParameters()</ref> to modify this object&apos;s parameters, then call <ref refid="classOpenMM_1_1HippoNonbondedForce_1a69225cf8878a46ed06324bf586326400" kindref="member">updateParametersInContext()</ref> to copy them over to the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref>.</para>
<para>This method has several limitations. The only information it updates is the parameters of particles and exceptions. All other aspects of the <ref refid="classOpenMM_1_1Force" kindref="compound">Force</ref> (the nonbonded method, the cutoff distance, etc.) are unaffected and can only be changed by reinitializing the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref>. Furthermore, only the scale factors for an exception can be changed; the pair of particles involved in the exception cannot change. Finally, this method cannot be used to add new particles or exceptions, only to change the parameters of existing ones. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="373" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1HippoNonbondedForce_1a8b30ec2e95e947e1cac6769c2d516a87" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool OpenMM::HippoNonbondedForce::usesPeriodicBoundaryConditions</definition>
        <argsstring>() const</argsstring>
        <name>usesPeriodicBoundaryConditions</name>
        <reimplements refid="classOpenMM_1_1Force_1a955afab55a1cd8b24cdf91258477237f">usesPeriodicBoundaryConditions</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns whether or not this force makes use of periodic boundary conditions.</para>
<para><simplesect kind="return"><para>true if nonbondedMethod uses PBC and false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="380" column="10" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" bodystart="380" bodyend="382"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classOpenMM_1_1HippoNonbondedForce_1a714e6eeb2701c2e660f363086733cbdf" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>ForceImpl *</type>
        <definition>ForceImpl * OpenMM::HippoNonbondedForce::createImpl</definition>
        <argsstring>() const</argsstring>
        <name>createImpl</name>
        <reimplements refid="classOpenMM_1_1Force_1a12dc4c2566ab670d47ef05bda169fa05">createImpl</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>When a <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> is created, it invokes this method on each <ref refid="classOpenMM_1_1Force" kindref="compound">Force</ref> in the <ref refid="classOpenMM_1_1System" kindref="compound">System</ref>. It should create a new ForceImpl object which can be used by the context for calculating forces. The ForceImpl will be deleted automatically when the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> is deleted. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="384" column="15"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class implements all nonbonded interactions in the HIPPO force field: electrostatics, induction, charge transfer, dispersion, and repulsion. Although some of these are conceptually distinct, they share parameters in common and are most efficiently computed together. For example, the same multipole definitions are used for both electrostatics and Pauli repulsion. Therefore, all of them are computed by a single <ref refid="classOpenMM_1_1Force" kindref="compound">Force</ref> object.</para>
<para>To use it, create a <ref refid="classOpenMM_1_1HippoNonbondedForce" kindref="compound">HippoNonbondedForce</ref> object, then call <ref refid="classOpenMM_1_1HippoNonbondedForce_1a1b37e7a9c50b726a56eb77b035218f9b" kindref="member">addParticle()</ref> once for each particle. After an entry has been added, you can modify its force field parameters by calling <ref refid="classOpenMM_1_1HippoNonbondedForce_1ad359724380e6e41652944f5e68b0a9d0" kindref="member">setParticleParameters()</ref>. This will have no effect on Contexts that already exist unless you call <ref refid="classOpenMM_1_1HippoNonbondedForce_1a69225cf8878a46ed06324bf586326400" kindref="member">updateParametersInContext()</ref>.</para>
<para>You also can specify &quot;exceptions&quot;, particular pairs of particles whose interactions should be reduced or completely omitted. Call <ref refid="classOpenMM_1_1HippoNonbondedForce_1aa4fb569ba2f93e26f7bcc0def684f390" kindref="member">addException()</ref> to define exceptions. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>OpenMM::Force</label>
        <link refid="classOpenMM_1_1Force"/>
      </node>
      <node id="1">
        <label>OpenMM::HippoNonbondedForce</label>
        <link refid="classOpenMM_1_1HippoNonbondedForce"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>OpenMM::Force</label>
        <link refid="classOpenMM_1_1Force"/>
      </node>
      <node id="1">
        <label>OpenMM::HippoNonbondedForce</label>
        <link refid="classOpenMM_1_1HippoNonbondedForce"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" line="59" column="1" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/HippoNonbondedForce.h" bodystart="59" bodyend="397"/>
    <listofallmembers>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1aa4fb569ba2f93e26f7bcc0def684f390" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>addException</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a1b37e7a9c50b726a56eb77b035218f9b" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>addParticle</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a1b3ddee7553305c4d22c49a96e36721a" prot="private" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>alpha</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a1776e95734f26bbe0cc0f5a92eafa687a932ab4a48264b124ca8c45d853cde8da" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>Bisector</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a714e6eeb2701c2e660f363086733cbdf" prot="protected" virt="virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>createImpl</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a7ee80dd75f551c67e6bc2560506d7d01" prot="private" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>cutoffDistance</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1aae2dac28f5ab1754c383fee48a1357e0" prot="private" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>dalpha</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a64a8b8430d5eb7724ae1ff3e01c5c080" prot="private" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>dnx</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a9967591085b1d4df8804cf86c120654c" prot="private" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>dny</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a39fbb1cbb211535bee79721026f0be71" prot="private" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>dnz</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a536fae6930a7376a8baadf8d244d4c80" prot="private" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>ewaldErrorTol</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a5fbefa4f3e5cd90572370ec41d4eca64" prot="private" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>exceptionMap</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a170d342540e8a9cf5a4ba915fb887bb5" prot="private" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>exceptions</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1ae41a5e4d406ba413a6d1895767abe463" prot="private" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>extrapolationCoefficients</name></member>
      <member refid="classOpenMM_1_1Force_1a40e75e251ec93d3bc9fc87b96026fbc2" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>Force</name></member>
      <member refid="classOpenMM_1_1Force_1a152bbe8e42e036e697b587c0832e233b" prot="protected" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>getContextImpl</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a915f05e7661da688f3711c52135070d6" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>getCutoffDistance</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a7ec050837adbb1b69c9942d154143f75" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>getDPMEParameters</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a376d840bc29ab306878fd8a482a57666" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>getDPMEParametersInContext</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a1b99bd0f1595c4fad795ec4b3fba4ebe" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>getEwaldErrorTolerance</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a240dab8836d1edc5a6077dc9b60bd319" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>getExceptionParameters</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a3b7a042e47adf43883e9115cc98e3bd4" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>getExtrapolationCoefficients</name></member>
      <member refid="classOpenMM_1_1Force_1ab9428f8447cba02d548963242dd674ff" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>getForceGroup</name></member>
      <member refid="classOpenMM_1_1Force_1aef442934a17134fe13f5dcc40ada7b11" prot="protected" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>getImplInContext</name></member>
      <member refid="classOpenMM_1_1Force_1a1af3134b705088bd8ed5b6e7521db43d" prot="protected" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>getImplInContext</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a38b44824854a2a8e2b4049d2801fb0ca" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>getInducedDipoles</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1ad5293e6b2f31dda3583350666fde613e" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>getLabFramePermanentDipoles</name></member>
      <member refid="classOpenMM_1_1Force_1a479fe60e5fe8e344109f794ecd7b7bab" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>getName</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a151796c4ac5d669e5ee38cd68d0a952a" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>getNonbondedMethod</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a2ebbac196991284d0ea1ddd21e8a23a8" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>getNumExceptions</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a17bae8c612270f248011aa391a353d7d" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>getNumParticles</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1aba80e66c07f1cabf96b095cd0490bed4" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>getParticleParameters</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a5f3b4f9ce29986ba17d34a1082cb3a89" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>getPMEParameters</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a147cdd317f8186e5a9fbcc0ede2fee4c" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>getPMEParametersInContext</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a11117474641a73c9940fcaa80c83573b" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>getSwitchingDistance</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a2dfc667ce64b88e0554210dbe72ae41f" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>HippoNonbondedForce</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a1776e95734f26bbe0cc0f5a92eafa687a4a19f913c108b7e8572d21b0f758dd4d" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>NoAxisType</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a2c8e3cdadc475d0668b5edb4b20f95b0a4bde8396e88478627c960fb8a3c52310" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>NoCutoff</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a21737b4784039ef7098896d71a531a63" prot="private" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>nonbondedMethod</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a2c8e3cdadc475d0668b5edb4b20f95b0" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>NonbondedMethod</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a719879c21f1f6f663cf761f923f60356" prot="private" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>nx</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a25d3c47ebdb04cee542597bc0491b809" prot="private" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>ny</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1ad47810c64f4aab43b3f6f77da40810a1" prot="private" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>nz</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a1776e95734f26bbe0cc0f5a92eafa687" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>ParticleAxisTypes</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a86385dca9c81a0e462bf24b3eab005f7" prot="private" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>particles</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a2c8e3cdadc475d0668b5edb4b20f95b0a35a8b76213df473b7478c29baaef1ecf" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>PME</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1afb77573991f24188dc30003e81f8f8ea" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>setCutoffDistance</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a9ca0804bfde5ed1dcb867bd024918e87" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>setDPMEParameters</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a9a2a8dae474149ae0509f335185e0abd" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>setEwaldErrorTolerance</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1aff9840823e42e726ff06bd73d178a852" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>setExceptionParameters</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a5cf66ab73236f4007491e6b434d56f37" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>setExtrapolationCoefficients</name></member>
      <member refid="classOpenMM_1_1Force_1a53e3829a91825a9f6aa17e5ade713f84" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>setForceGroup</name></member>
      <member refid="classOpenMM_1_1Force_1ac0a383a4d4203427652f1ad5b2528215" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>setName</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1aae0bcae0273d29886ea4edf8ddc574ca" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>setNonbondedMethod</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1ad359724380e6e41652944f5e68b0a9d0" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>setParticleParameters</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a9af136dfc4078f0bdc938341359ae03d" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>setPMEParameters</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a782b3fa4f2acca6c1e9310fecf4ad1d2" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>setSwitchingDistance</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a929fe0d17de05275a4f5856ad210c45a" prot="private" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>switchingDistance</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a1776e95734f26bbe0cc0f5a92eafa687ab599018d100ec88e13b4f7a5801101ef" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>ThreeFold</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a69225cf8878a46ed06324bf586326400" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>updateParametersInContext</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a8b30ec2e95e947e1cac6769c2d516a87" prot="public" virt="virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>usesPeriodicBoundaryConditions</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a1776e95734f26bbe0cc0f5a92eafa687a0ff471c451cff60a270f964630eb6a3b" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>ZBisect</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a1776e95734f26bbe0cc0f5a92eafa687af20070c95501c93c1768c7405c62c9e3" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>ZOnly</name></member>
      <member refid="classOpenMM_1_1HippoNonbondedForce_1a1776e95734f26bbe0cc0f5a92eafa687a904dc7bb2d26b50444f29ac262a5b2ad" prot="public" virt="non-virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>ZThenX</name></member>
      <member refid="classOpenMM_1_1Force_1a6516b32ebeb95a694f56d93bdf81f4fb" prot="public" virt="virtual"><scope>OpenMM::HippoNonbondedForce</scope><name>~Force</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
