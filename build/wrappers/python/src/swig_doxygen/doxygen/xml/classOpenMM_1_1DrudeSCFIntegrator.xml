<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classOpenMM_1_1DrudeSCFIntegrator" kind="class" language="C++" prot="public">
    <compoundname>OpenMM::DrudeSCFIntegrator</compoundname>
    <basecompoundref refid="classOpenMM_1_1DrudeIntegrator" prot="public" virt="non-virtual">OpenMM::DrudeIntegrator</basecompoundref>
    <includes refid="DrudeSCFIntegrator_8h" local="no">DrudeSCFIntegrator.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classOpenMM_1_1DrudeSCFIntegrator_1abe5323d65c34a2642fe02db46c01247b" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double OpenMM::DrudeSCFIntegrator::tolerance</definition>
        <argsstring></argsstring>
        <name>tolerance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeSCFIntegrator.h" line="101" column="12" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeSCFIntegrator.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1DrudeSCFIntegrator_1a1fe599db41c71276eca0adf9f5f0b3b7" prot="private" static="no" mutable="no">
        <type>Kernel</type>
        <definition>Kernel OpenMM::DrudeSCFIntegrator::kernel</definition>
        <argsstring></argsstring>
        <name>kernel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeSCFIntegrator.h" line="102" column="12" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeSCFIntegrator.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classOpenMM_1_1DrudeSCFIntegrator_1a367cfa2c858fb913f8ed6806144761f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OpenMM::DrudeSCFIntegrator::DrudeSCFIntegrator</definition>
        <argsstring>(double stepSize)</argsstring>
        <name>DrudeSCFIntegrator</name>
        <param>
          <type>double</type>
          <declname>stepSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a <ref refid="classOpenMM_1_1DrudeSCFIntegrator" kindref="compound">DrudeSCFIntegrator</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stepSize</parametername>
</parameternamelist>
<parameterdescription>
<para>the step size with which to integrator the system (in picoseconds) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeSCFIntegrator.h" line="57" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1DrudeSCFIntegrator_1afc062788ad3c74277ca1e20d285aa9a3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double OpenMM::DrudeSCFIntegrator::getMinimizationErrorTolerance</definition>
        <argsstring>() const</argsstring>
        <name>getMinimizationErrorTolerance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the error tolerance to use when minimizing the potential energy. This roughly corresponds to the maximum allowed force magnitude on the Drude particles after minimization.</para>
<para><simplesect kind="return"><para>the error tolerance to use, measured in kJ/mol/nm </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeSCFIntegrator.h" line="64" column="12" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeSCFIntegrator.h" bodystart="64" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1DrudeSCFIntegrator_1a4860e0fa8245a8f3973738892d582090" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::DrudeSCFIntegrator::setMinimizationErrorTolerance</definition>
        <argsstring>(double tol)</argsstring>
        <name>setMinimizationErrorTolerance</name>
        <param>
          <type>double</type>
          <declname>tol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the error tolerance to use when minimizing the potential energy. This roughly corresponds to the maximum allowed force magnitude on the Drude particles after minimization.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tol</parametername>
</parameternamelist>
<parameterdescription>
<para>the error tolerance to use, measured in kJ/mol/nm </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeSCFIntegrator.h" line="73" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1DrudeSCFIntegrator_1a83203aa9557e3f1851578a5f218ce9fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void OpenMM::DrudeSCFIntegrator::step</definition>
        <argsstring>(int steps) override</argsstring>
        <name>step</name>
        <reimplements refid="classOpenMM_1_1DrudeIntegrator_1ad1009cf9c59c3d8ed72b643988d49ad4">step</reimplements>
        <param>
          <type>int</type>
          <declname>steps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Advance a simulation through time by taking a series of time steps.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>steps</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of time steps to take </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeSCFIntegrator.h" line="79" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classOpenMM_1_1DrudeSCFIntegrator_1a5af38c878e7c1ec54fad0d62f483ffe8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void OpenMM::DrudeSCFIntegrator::initialize</definition>
        <argsstring>(ContextImpl &amp;context) override</argsstring>
        <name>initialize</name>
        <reimplements refid="classOpenMM_1_1DrudeIntegrator_1aafea63d5f4700959278d1a62280a9ae4">initialize</reimplements>
        <param>
          <type>ContextImpl &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This will be called by the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> when it is created. It informs the <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> of what context it will be integrating, and gives it a chance to do any necessary initialization. It will also get called again if the application calls reinitialize() on the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeSCFIntegrator.h" line="86" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1DrudeSCFIntegrator_1ad730cb1ec7dca2d618e42f269cacdf37" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void OpenMM::DrudeSCFIntegrator::cleanup</definition>
        <argsstring>() override</argsstring>
        <name>cleanup</name>
        <reimplements refid="classOpenMM_1_1DrudeIntegrator_1a4a6264148723056ce014bb4ce9c8b658">cleanup</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This will be called by the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> when it is destroyed to let the <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> do any necessary cleanup. It will also get called again if the application calls reinitialize() on the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeSCFIntegrator.h" line="91" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1DrudeSCFIntegrator_1a73dad1c32454114e115bc4089f957f15" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; OpenMM::DrudeSCFIntegrator::getKernelNames</definition>
        <argsstring>() override</argsstring>
        <name>getKernelNames</name>
        <reimplements refid="classOpenMM_1_1DrudeIntegrator_1a790f388ce33b7501bcdcb9376764145c">getKernelNames</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the names of all Kernels used by this <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeSCFIntegrator.h" line="95" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1DrudeSCFIntegrator_1a1eed614b0b38e764bdf7624a47a90de7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double OpenMM::DrudeSCFIntegrator::computeKineticEnergy</definition>
        <argsstring>() override</argsstring>
        <name>computeKineticEnergy</name>
        <reimplements refid="classOpenMM_1_1DrudeIntegrator_1a1d0cc4e25d5d2968dd0d987db2f6c02f">computeKineticEnergy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the kinetic energy of the system at the current time. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeSCFIntegrator.h" line="99" column="12"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This is a leap-frog Verlet <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> that simulates systems with Drude particles. It uses the self-consistent field (SCF) method: at every time step, the positions of Drude particles are adjusted to minimize the potential energy.</para>
<para>This <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> requires the <ref refid="classOpenMM_1_1System" kindref="compound">System</ref> to include a <ref refid="classOpenMM_1_1DrudeForce" kindref="compound">DrudeForce</ref>, which it uses to identify the Drude particles. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>OpenMM::DrudeIntegrator</label>
        <link refid="classOpenMM_1_1DrudeIntegrator"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>OpenMM::DrudeSCFIntegrator</label>
        <link refid="classOpenMM_1_1DrudeSCFIntegrator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>OpenMM::Integrator</label>
        <link refid="classOpenMM_1_1Integrator"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>OpenMM::Context</label>
        <link refid="classOpenMM_1_1Context"/>
      </node>
      <node id="2">
        <label>OpenMM::DrudeIntegrator</label>
        <link refid="classOpenMM_1_1DrudeIntegrator"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>OpenMM::DrudeSCFIntegrator</label>
        <link refid="classOpenMM_1_1DrudeSCFIntegrator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>OpenMM::Integrator</label>
        <link refid="classOpenMM_1_1Integrator"/>
        <childnode refid="4" relation="usage">
          <edgelabel>owner</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeSCFIntegrator.h" line="50" column="1" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/drude/openmmapi/include/openmm/DrudeSCFIntegrator.h" bodystart="50" bodyend="103"/>
    <listofallmembers>
      <member refid="classOpenMM_1_1DrudeSCFIntegrator_1ad730cb1ec7dca2d618e42f269cacdf37" prot="protected" virt="virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>cleanup</name></member>
      <member refid="classOpenMM_1_1DrudeSCFIntegrator_1a1eed614b0b38e764bdf7624a47a90de7" prot="protected" virt="virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>computeKineticEnergy</name></member>
      <member refid="classOpenMM_1_1Integrator_1ac9c1c07848ae2c2e8617a949a11070c1" prot="protected" virt="non-virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>context</name></member>
      <member refid="classOpenMM_1_1Integrator_1a08d633ac9c6fbcbfc507ea8ff1fdf26a" prot="protected" virt="virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>createCheckpoint</name></member>
      <member refid="classOpenMM_1_1Integrator_1a6ef56427b124e5e36cabfefc8c11ced4" prot="protected" virt="virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>deserializeParameters</name></member>
      <member refid="classOpenMM_1_1DrudeIntegrator_1ae4bb7e6cc9e04383692ae6866340e057" prot="public" virt="non-virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>DrudeIntegrator</name></member>
      <member refid="classOpenMM_1_1DrudeSCFIntegrator_1a367cfa2c858fb913f8ed6806144761f7" prot="public" virt="non-virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>DrudeSCFIntegrator</name></member>
      <member refid="classOpenMM_1_1DrudeIntegrator_1af0281f0272add4008cae2408b3d5d741" prot="protected" virt="non-virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>drudeTemperature</name></member>
      <member refid="classOpenMM_1_1Integrator_1af742feb7b5b9adfcb259bf2dbc9319c4" prot="public" virt="virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>getConstraintTolerance</name></member>
      <member refid="classOpenMM_1_1DrudeIntegrator_1a67f74b0f96aab922e167c36f34bde4da" prot="public" virt="non-virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>getDrudeTemperature</name></member>
      <member refid="classOpenMM_1_1Integrator_1a38c94f952b4fcab36371402e508eacf1" prot="public" virt="virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>getIntegrationForceGroups</name></member>
      <member refid="classOpenMM_1_1DrudeSCFIntegrator_1a73dad1c32454114e115bc4089f957f15" prot="protected" virt="virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>getKernelNames</name></member>
      <member refid="classOpenMM_1_1DrudeIntegrator_1a7b82b8db3a1ec58baece52656258d1cb" prot="public" virt="non-virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>getMaxDrudeDistance</name></member>
      <member refid="classOpenMM_1_1DrudeSCFIntegrator_1afc062788ad3c74277ca1e20d285aa9a3" prot="public" virt="non-virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>getMinimizationErrorTolerance</name></member>
      <member refid="classOpenMM_1_1DrudeIntegrator_1a0b286d3f3b571e071abb60689a06bbca" prot="public" virt="non-virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>getRandomNumberSeed</name></member>
      <member refid="classOpenMM_1_1Integrator_1a880821318aee5b25b02f0929887825c1" prot="public" virt="virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>getStepSize</name></member>
      <member refid="classOpenMM_1_1DrudeIntegrator_1ae817978ed25583082139d74196eb8415" prot="protected" virt="virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>getVelocitiesForTemperature</name></member>
      <member refid="classOpenMM_1_1Integrator_1a1fc2b21fac0b7497399a499f24c2628f" prot="protected" virt="virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>getVelocityTimeOffset</name></member>
      <member refid="classOpenMM_1_1DrudeSCFIntegrator_1a5af38c878e7c1ec54fad0d62f483ffe8" prot="protected" virt="virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>initialize</name></member>
      <member refid="classOpenMM_1_1Integrator_1a2732506bfb2afd8e2e9954d08cab1304" prot="public" virt="non-virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>Integrator</name></member>
      <member refid="classOpenMM_1_1DrudeSCFIntegrator_1a1fe599db41c71276eca0adf9f5f0b3b7" prot="private" virt="non-virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>kernel</name></member>
      <member refid="classOpenMM_1_1Integrator_1ad61399ae80cda00231dd5d573cfd30e8" prot="protected" virt="virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>kineticEnergyRequiresForce</name></member>
      <member refid="classOpenMM_1_1Integrator_1a6928a443a3f4eb407e4a8e82d549683d" prot="protected" virt="virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>loadCheckpoint</name></member>
      <member refid="classOpenMM_1_1DrudeIntegrator_1aeb96a9167260e9ac900300be717800e0" prot="protected" virt="non-virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>maxDrudeDistance</name></member>
      <member refid="classOpenMM_1_1Integrator_1ab3f6088553343feb8f47ab789e7a09a1" prot="protected" virt="non-virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>owner</name></member>
      <member refid="classOpenMM_1_1DrudeIntegrator_1a383eaedfbff0731918caa4596614386d" prot="protected" virt="non-virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>randomNumberSeed</name></member>
      <member refid="classOpenMM_1_1Integrator_1a38196dae74d6dea780076f44a10ed4aa" prot="protected" virt="virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>serializeParameters</name></member>
      <member refid="classOpenMM_1_1Integrator_1a47f81ac027670bcad6050c72cc41bd67" prot="public" virt="virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>setConstraintTolerance</name></member>
      <member refid="classOpenMM_1_1DrudeIntegrator_1a55b0b8499c4b57a401c4d2544ae5ac1b" prot="public" virt="non-virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>setDrudeTemperature</name></member>
      <member refid="classOpenMM_1_1Integrator_1a22b42a4a502c999d87e6bbd3f444eab4" prot="public" virt="virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>setIntegrationForceGroups</name></member>
      <member refid="classOpenMM_1_1DrudeIntegrator_1ad48071c91a96bdcdab8a0d56b4bd40ca" prot="public" virt="non-virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>setMaxDrudeDistance</name></member>
      <member refid="classOpenMM_1_1DrudeSCFIntegrator_1a4860e0fa8245a8f3973738892d582090" prot="public" virt="non-virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>setMinimizationErrorTolerance</name></member>
      <member refid="classOpenMM_1_1DrudeIntegrator_1a6b90dae171d8172cfcea760ffcf114b8" prot="public" virt="non-virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>setRandomNumberSeed</name></member>
      <member refid="classOpenMM_1_1Integrator_1a86ef00f4e3abb9e3e325e3c4ebe5ead1" prot="public" virt="virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>setStepSize</name></member>
      <member refid="classOpenMM_1_1Integrator_1aa41aa4c012de261afa5dda15af4fb721" prot="protected" virt="virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>stateChanged</name></member>
      <member refid="classOpenMM_1_1DrudeSCFIntegrator_1a83203aa9557e3f1851578a5f218ce9fc" prot="public" virt="virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>step</name></member>
      <member refid="classOpenMM_1_1DrudeSCFIntegrator_1abe5323d65c34a2642fe02db46c01247b" prot="private" virt="non-virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>tolerance</name></member>
      <member refid="classOpenMM_1_1Integrator_1a9abbef84d9e2c4e5a3d3139f8fa84fff" prot="public" virt="virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>~Integrator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
