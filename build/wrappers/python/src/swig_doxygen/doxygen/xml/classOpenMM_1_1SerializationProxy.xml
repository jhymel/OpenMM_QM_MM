<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classOpenMM_1_1SerializationProxy" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>OpenMM::SerializationProxy</compoundname>
    <includes refid="SerializationProxy_8h" local="no">SerializationProxy.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classOpenMM_1_1SerializationProxy_1add4339808ee44a5241f144e104e09a1d" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string OpenMM::SerializationProxy::typeName</definition>
        <argsstring></argsstring>
        <name>typeName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/serialization/include/openmm/serialization/SerializationProxy.h" line="107" column="17" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/serialization/include/openmm/serialization/SerializationProxy.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classOpenMM_1_1SerializationProxy_1aaf97aca9d83a73307ecf59333dc2e804" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OpenMM::SerializationProxy::SerializationProxy</definition>
        <argsstring>(const std::string &amp;typeName)</argsstring>
        <name>SerializationProxy</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>typeName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new <ref refid="classOpenMM_1_1SerializationProxy" kindref="compound">SerializationProxy</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>typeName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the object type this proxy knows how to serialize. This name is stored in the output stream during serialization, and is used to select a proxy during deserialization. This typically is the class name, although that is not a requirement. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/serialization/include/openmm/serialization/SerializationProxy.h" line="64" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1SerializationProxy_1a6cf550cc4edc2132f617712fb4bfe107" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual OpenMM::SerializationProxy::~SerializationProxy</definition>
        <argsstring>()</argsstring>
        <name>~SerializationProxy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/serialization/include/openmm/serialization/SerializationProxy.h" line="65" column="13" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/serialization/include/openmm/serialization/SerializationProxy.h" bodystart="65" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1SerializationProxy_1aa7cb8b5c23138159415ecfa3b1dc729a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; OpenMM::SerializationProxy::getTypeName</definition>
        <argsstring>() const</argsstring>
        <name>getTypeName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the name of the object type this proxy manipulates, as passed to the constructor. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/serialization/include/openmm/serialization/SerializationProxy.h" line="70" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1SerializationProxy_1a5f211c429e984c765e12adc996042879" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void OpenMM::SerializationProxy::serialize</definition>
        <argsstring>(const void *object, SerializationNode &amp;node) const =0</argsstring>
        <name>serialize</name>
        <param>
          <type>const void *</type>
          <declname>object</declname>
        </param>
        <param>
          <type><ref refid="classOpenMM_1_1SerializationNode" kindref="compound">SerializationNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Subclasses implement this method to record information about an object being serialized.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the object being serialized </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>all data to be serialized should be stored into this node, either directly as properties or indirectly by adding child nodes to it </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/serialization/include/openmm/serialization/SerializationProxy.h" line="78" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1SerializationProxy_1a0754fb425c8fcbabc4c5ab15b22d5379" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void *</type>
        <definition>virtual void * OpenMM::SerializationProxy::deserialize</definition>
        <argsstring>(const SerializationNode &amp;node) const =0</argsstring>
        <name>deserialize</name>
        <param>
          <type>const <ref refid="classOpenMM_1_1SerializationNode" kindref="compound">SerializationNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reconstruct an object from its serialized data.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>a <ref refid="classOpenMM_1_1SerializationNode" kindref="compound">SerializationNode</ref> containing the object&apos;s description </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer to a new object created from the data. The caller assumes ownership of the object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/serialization/include/openmm/serialization/SerializationProxy.h" line="86" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classOpenMM_1_1SerializationProxy_1a1f828bcc739036229bf4816ae52aa431" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void OpenMM::SerializationProxy::registerProxy</definition>
        <argsstring>(const std::type_info &amp;type, const SerializationProxy *proxy)</argsstring>
        <name>registerProxy</name>
        <param>
          <type>const std::type_info &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const <ref refid="classOpenMM_1_1SerializationProxy" kindref="compound">SerializationProxy</ref> *</type>
          <declname>proxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register a <ref refid="classOpenMM_1_1SerializationProxy" kindref="compound">SerializationProxy</ref> to be used for objects of a particular type.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>the type_info for the object type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>proxy</parametername>
</parameternamelist>
<parameterdescription>
<para>the proxy to use for objects of the specified type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/serialization/include/openmm/serialization/SerializationProxy.h" line="93" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1SerializationProxy_1a2aef6f14c1f3ee7a32d12dc0f21fa8ef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classOpenMM_1_1SerializationProxy" kindref="compound">SerializationProxy</ref> &amp;</type>
        <definition>static const SerializationProxy &amp; OpenMM::SerializationProxy::getProxy</definition>
        <argsstring>(const std::string &amp;typeName)</argsstring>
        <name>getProxy</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>typeName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the <ref refid="classOpenMM_1_1SerializationProxy" kindref="compound">SerializationProxy</ref> to use for objects of a particular type, specified by name.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>typeName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the object type to get a proxy for </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/serialization/include/openmm/serialization/SerializationProxy.h" line="99" column="37"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1SerializationProxy_1aa36b10c47eb96f09e21fb66dc08f0a74" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classOpenMM_1_1SerializationProxy" kindref="compound">SerializationProxy</ref> &amp;</type>
        <definition>static const SerializationProxy &amp; OpenMM::SerializationProxy::getProxy</definition>
        <argsstring>(const std::type_info &amp;type)</argsstring>
        <name>getProxy</name>
        <param>
          <type>const std::type_info &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the <ref refid="classOpenMM_1_1SerializationProxy" kindref="compound">SerializationProxy</ref> to use for objects of a particular type, specified by type_info.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>the type_info of the object type to get a proxy for </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/serialization/include/openmm/serialization/SerializationProxy.h" line="105" column="37"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classOpenMM_1_1SerializationProxy_1ac119f4d4e4fcf0a8b908d51f52b50df5" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::map&lt; const std::string, const <ref refid="classOpenMM_1_1SerializationProxy" kindref="compound">SerializationProxy</ref> * &gt; &amp;</type>
        <definition>static std::map&lt; const std::string, const SerializationProxy * &gt; &amp; OpenMM::SerializationProxy::getProxiesByType</definition>
        <argsstring>()</argsstring>
        <name>getProxiesByType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/serialization/include/openmm/serialization/SerializationProxy.h" line="108" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1SerializationProxy_1a29f4c99da62272c88ec5ca5f913d453f" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::map&lt; const std::string, const <ref refid="classOpenMM_1_1SerializationProxy" kindref="compound">SerializationProxy</ref> * &gt; &amp;</type>
        <definition>static std::map&lt; const std::string, const SerializationProxy * &gt; &amp; OpenMM::SerializationProxy::getProxiesByName</definition>
        <argsstring>()</argsstring>
        <name>getProxiesByName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/serialization/include/openmm/serialization/SerializationProxy.h" line="109" column="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A <ref refid="classOpenMM_1_1SerializationProxy" kindref="compound">SerializationProxy</ref> is an object that knows how to serialize and deserialize objects of a particular type. This is an abstract class. Subclasses implement the logic for serializing particular types of logic.</para>
<para>A global registry maintains the list of what <ref refid="classOpenMM_1_1SerializationProxy" kindref="compound">SerializationProxy</ref> to use for each type of object. Call <ref refid="classOpenMM_1_1SerializationProxy_1a1f828bcc739036229bf4816ae52aa431" kindref="member">registerProxy()</ref> to register the proxy for a particular type. This is typically done at application startup or by a dynamic library&apos;s initialization code. </para>
    </detaileddescription>
    <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/serialization/include/openmm/serialization/SerializationProxy.h" line="54" column="1" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/serialization/include/openmm/serialization/SerializationProxy.h" bodystart="54" bodyend="110"/>
    <listofallmembers>
      <member refid="classOpenMM_1_1SerializationProxy_1a0754fb425c8fcbabc4c5ab15b22d5379" prot="public" virt="pure-virtual"><scope>OpenMM::SerializationProxy</scope><name>deserialize</name></member>
      <member refid="classOpenMM_1_1SerializationProxy_1a29f4c99da62272c88ec5ca5f913d453f" prot="private" virt="non-virtual"><scope>OpenMM::SerializationProxy</scope><name>getProxiesByName</name></member>
      <member refid="classOpenMM_1_1SerializationProxy_1ac119f4d4e4fcf0a8b908d51f52b50df5" prot="private" virt="non-virtual"><scope>OpenMM::SerializationProxy</scope><name>getProxiesByType</name></member>
      <member refid="classOpenMM_1_1SerializationProxy_1a2aef6f14c1f3ee7a32d12dc0f21fa8ef" prot="public" virt="non-virtual"><scope>OpenMM::SerializationProxy</scope><name>getProxy</name></member>
      <member refid="classOpenMM_1_1SerializationProxy_1aa36b10c47eb96f09e21fb66dc08f0a74" prot="public" virt="non-virtual"><scope>OpenMM::SerializationProxy</scope><name>getProxy</name></member>
      <member refid="classOpenMM_1_1SerializationProxy_1aa7cb8b5c23138159415ecfa3b1dc729a" prot="public" virt="non-virtual"><scope>OpenMM::SerializationProxy</scope><name>getTypeName</name></member>
      <member refid="classOpenMM_1_1SerializationProxy_1a1f828bcc739036229bf4816ae52aa431" prot="public" virt="non-virtual"><scope>OpenMM::SerializationProxy</scope><name>registerProxy</name></member>
      <member refid="classOpenMM_1_1SerializationProxy_1aaf97aca9d83a73307ecf59333dc2e804" prot="public" virt="non-virtual"><scope>OpenMM::SerializationProxy</scope><name>SerializationProxy</name></member>
      <member refid="classOpenMM_1_1SerializationProxy_1a5f211c429e984c765e12adc996042879" prot="public" virt="pure-virtual"><scope>OpenMM::SerializationProxy</scope><name>serialize</name></member>
      <member refid="classOpenMM_1_1SerializationProxy_1add4339808ee44a5241f144e104e09a1d" prot="private" virt="non-virtual"><scope>OpenMM::SerializationProxy</scope><name>typeName</name></member>
      <member refid="classOpenMM_1_1SerializationProxy_1a6cf550cc4edc2132f617712fb4bfe107" prot="public" virt="virtual"><scope>OpenMM::SerializationProxy</scope><name>~SerializationProxy</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
