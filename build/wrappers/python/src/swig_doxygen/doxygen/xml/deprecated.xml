<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="deprecated" kind="page">
    <compoundname>deprecated</compoundname>
    <title>Deprecated List</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><variablelist>
<varlistentry><term>Member <ref refid="classOpenMM_1_1AmoebaMultipoleForce_1a84e355947848226c556c09b1c8f89133" kindref="member">OpenMM::AmoebaMultipoleForce::getAEwald</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000026"/>This method exists only for backward compatibility. Use <ref refid="classOpenMM_1_1AmoebaMultipoleForce_1a66a16dcdeb3f5363ddc8dcf1ba827a2e" kindref="member">getPMEParameters()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classOpenMM_1_1AmoebaMultipoleForce_1a63a7e21edb9fac22a07a6afec85087d9" kindref="member">OpenMM::AmoebaMultipoleForce::getPmeGridDimensions</ref>  (std::vector&lt; int &gt; &amp;gridDimension) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000028"/>This method exists only for backward compatibility. Use <ref refid="classOpenMM_1_1AmoebaMultipoleForce_1a66a16dcdeb3f5363ddc8dcf1ba827a2e" kindref="member">getPMEParameters()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classOpenMM_1_1AmoebaMultipoleForce_1a56d4e3101dcbf58bf2921af7d791e3a1" kindref="member">OpenMM::AmoebaMultipoleForce::setAEwald</ref>  (double aewald)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000027"/>This method exists only for backward compatibility. Use <ref refid="classOpenMM_1_1AmoebaMultipoleForce_1ae6c208c9cbf6c88b3b3eb68f46ef1308" kindref="member">setPMEParameters()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classOpenMM_1_1AmoebaMultipoleForce_1a0872fbc28e9a58d2d1742474c35068a0" kindref="member">OpenMM::AmoebaMultipoleForce::setPmeGridDimensions</ref>  (const std::vector&lt; int &gt; &amp;gridDimension)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000029"/>This method exists only for backward compatibility. Use <ref refid="classOpenMM_1_1AmoebaMultipoleForce_1ae6c208c9cbf6c88b3b3eb68f46ef1308" kindref="member">setPMEParameters()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classOpenMM_1_1AmoebaVdwForce_1adc650cce34c372766e0f3dc8a3cbd7b1" kindref="member">OpenMM::AmoebaVdwForce::getCutoff</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000031"/>This method exists only for backward compatibility. Use <ref refid="classOpenMM_1_1AmoebaVdwForce_1a3c90a82f0a325d2752b4ea1cde62248d" kindref="member">getCutoffDistance()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classOpenMM_1_1AmoebaVdwForce_1a876e5171181c90bf87e27d6a5cf0f4d7" kindref="member">OpenMM::AmoebaVdwForce::setCutoff</ref>  (double cutoff)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000030"/>This method exists only for backward compatibility. Use <ref refid="classOpenMM_1_1AmoebaVdwForce_1a9fc76ac10eec5d6af25875570607424e" kindref="member">setCutoffDistance()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classOpenMM_1_1Continuous1DFunction_1aac20b9417021468e15f10ede2cff61fa" kindref="member">OpenMM::Continuous1DFunction::Copy</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000020"/>This will be removed in a future release.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classOpenMM_1_1Continuous2DFunction_1a80e500513dbf535466209d38a67b7be8" kindref="member">OpenMM::Continuous2DFunction::Copy</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000021"/>This will be removed in a future release.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classOpenMM_1_1Continuous3DFunction_1aa0ec2b649474cc778fb65d24925b99d3" kindref="member">OpenMM::Continuous3DFunction::Copy</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000022"/>This will be removed in a future release.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classOpenMM_1_1CustomCentroidBondForce_1a841497806b53145ccb845cee0db846e1" kindref="member">OpenMM::CustomCentroidBondForce::getNumFunctions</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000002"/>This method exists only for backward compatibility. Use <ref refid="classOpenMM_1_1CustomCentroidBondForce_1a25ed53fc4d5b50212bd0b17ac0aaf83f" kindref="member">getNumTabulatedFunctions()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classOpenMM_1_1CustomCompoundBondForce_1adc8d57bd02cf8202bebb23d680abf496" kindref="member">OpenMM::CustomCompoundBondForce::addFunction</ref>  (const std::string &amp;name, const std::vector&lt; double &gt; &amp;values, double min, double max)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000004"/>This method exists only for backward compatibility. Use <ref refid="classOpenMM_1_1CustomCompoundBondForce_1afc78a1d1f5ef225632a5116c9c4ea99d" kindref="member">addTabulatedFunction()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classOpenMM_1_1CustomCompoundBondForce_1a4c2647cc13857e96f8c29ea4994455c3" kindref="member">OpenMM::CustomCompoundBondForce::getFunctionParameters</ref>  (int index, std::string &amp;name, std::vector&lt; double &gt; &amp;values, double &amp;min, double &amp;max) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000005"/>This method exists only for backward compatibility. Use getTabulatedFunctionParameters() instead. If the specified function is not a <ref refid="classOpenMM_1_1Continuous1DFunction" kindref="compound">Continuous1DFunction</ref>, this throws an exception.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classOpenMM_1_1CustomCompoundBondForce_1afc12224ae3fb8563f96af363a1ca04d3" kindref="member">OpenMM::CustomCompoundBondForce::getNumFunctions</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000003"/>This method exists only for backward compatibility. Use <ref refid="classOpenMM_1_1CustomCompoundBondForce_1a9cd5b3d25f79f5e93dbb447e1741b53e" kindref="member">getNumTabulatedFunctions()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classOpenMM_1_1CustomCompoundBondForce_1aaf5e1b9fa0cde754917f5512c3077f95" kindref="member">OpenMM::CustomCompoundBondForce::setFunctionParameters</ref>  (int index, const std::string &amp;name, const std::vector&lt; double &gt; &amp;values, double min, double max)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000006"/>This method exists only for backward compatibility. Use setTabulatedFunctionParameters() instead. If the specified function is not a <ref refid="classOpenMM_1_1Continuous1DFunction" kindref="compound">Continuous1DFunction</ref>, this throws an exception.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classOpenMM_1_1CustomGBForce_1a33ecd7ad4c5ba82009fc6e3d6db3d165" kindref="member">OpenMM::CustomGBForce::addFunction</ref>  (const std::string &amp;name, const std::vector&lt; double &gt; &amp;values, double min, double max)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000008"/>This method exists only for backward compatibility. Use <ref refid="classOpenMM_1_1CustomGBForce_1a99c07c35bb88dc79eebe2e594aed46d7" kindref="member">addTabulatedFunction()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classOpenMM_1_1CustomGBForce_1a3047e7bf045d4cdad47dcd04fe4d76b0" kindref="member">OpenMM::CustomGBForce::getFunctionParameters</ref>  (int index, std::string &amp;name, std::vector&lt; double &gt; &amp;values, double &amp;min, double &amp;max) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000009"/>This method exists only for backward compatibility. Use getTabulatedFunctionParameters() instead. If the specified function is not a <ref refid="classOpenMM_1_1Continuous1DFunction" kindref="compound">Continuous1DFunction</ref>, this throws an exception.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classOpenMM_1_1CustomGBForce_1a898cb04aab7cdd1c31affc9b330aa0e7" kindref="member">OpenMM::CustomGBForce::getNumFunctions</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000007"/>This method exists only for backward compatibility. Use <ref refid="classOpenMM_1_1CustomGBForce_1a1ff265edc60b04c8a02f059c9a22c4bf" kindref="member">getNumTabulatedFunctions()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classOpenMM_1_1CustomGBForce_1ae71d242310f76735f1dd2731fd5ed027" kindref="member">OpenMM::CustomGBForce::setFunctionParameters</ref>  (int index, const std::string &amp;name, const std::vector&lt; double &gt; &amp;values, double min, double max)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000010"/>This method exists only for backward compatibility. Use setTabulatedFunctionParameters() instead. If the specified function is not a <ref refid="classOpenMM_1_1Continuous1DFunction" kindref="compound">Continuous1DFunction</ref>, this throws an exception.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classOpenMM_1_1CustomHbondForce_1a41ad540e83921920a54a5c30d3b3032b" kindref="member">OpenMM::CustomHbondForce::addFunction</ref>  (const std::string &amp;name, const std::vector&lt; double &gt; &amp;values, double min, double max)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000012"/>This method exists only for backward compatibility. Use <ref refid="classOpenMM_1_1CustomHbondForce_1aeca7af0b2246e6fd70e986ce98dccf2d" kindref="member">addTabulatedFunction()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classOpenMM_1_1CustomHbondForce_1aefb02b41154b8c14c9a70ef11c5feaea" kindref="member">OpenMM::CustomHbondForce::getFunctionParameters</ref>  (int index, std::string &amp;name, std::vector&lt; double &gt; &amp;values, double &amp;min, double &amp;max) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000013"/>This method exists only for backward compatibility. Use getTabulatedFunctionParameters() instead. If the specified function is not a <ref refid="classOpenMM_1_1Continuous1DFunction" kindref="compound">Continuous1DFunction</ref>, this throws an exception.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classOpenMM_1_1CustomHbondForce_1a00565df8584df3d10fb8246ca9b29a31" kindref="member">OpenMM::CustomHbondForce::getNumFunctions</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000011"/>This method exists only for backward compatibility. Use <ref refid="classOpenMM_1_1CustomHbondForce_1a19dc15950089f4c60c22d988c822aceb" kindref="member">getNumTabulatedFunctions()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classOpenMM_1_1CustomHbondForce_1aa4c9e449649306862d6ba1ae537919e5" kindref="member">OpenMM::CustomHbondForce::setFunctionParameters</ref>  (int index, const std::string &amp;name, const std::vector&lt; double &gt; &amp;values, double min, double max)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000014"/>This method exists only for backward compatibility. Use setTabulatedFunctionParameters() instead. If the specified function is not a <ref refid="classOpenMM_1_1Continuous1DFunction" kindref="compound">Continuous1DFunction</ref>, this throws an exception.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classOpenMM_1_1CustomNonbondedForce_1a728b7c634e665b753249939007efd1a8" kindref="member">OpenMM::CustomNonbondedForce::addFunction</ref>  (const std::string &amp;name, const std::vector&lt; double &gt; &amp;values, double min, double max)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000016"/>This method exists only for backward compatibility. Use <ref refid="classOpenMM_1_1CustomNonbondedForce_1ac7c24d607916cca0d0980956de03cd15" kindref="member">addTabulatedFunction()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classOpenMM_1_1CustomNonbondedForce_1a5d4d46959b5bce422e460abea76ede01" kindref="member">OpenMM::CustomNonbondedForce::getFunctionParameters</ref>  (int index, std::string &amp;name, std::vector&lt; double &gt; &amp;values, double &amp;min, double &amp;max) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000017"/>This method exists only for backward compatibility. Use getTabulatedFunctionParameters() instead. If the specified function is not a <ref refid="classOpenMM_1_1Continuous1DFunction" kindref="compound">Continuous1DFunction</ref>, this throws an exception.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classOpenMM_1_1CustomNonbondedForce_1a46fd6c6b5db88768cd261e0c685e8e50" kindref="member">OpenMM::CustomNonbondedForce::getNumFunctions</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000015"/>This method exists only for backward compatibility. Use <ref refid="classOpenMM_1_1CustomNonbondedForce_1ab67b0a25dcfb0ece09a4d1f4e3f5847f" kindref="member">getNumTabulatedFunctions()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classOpenMM_1_1CustomNonbondedForce_1a7aedd5adf90d6229e51e60a83b647044" kindref="member">OpenMM::CustomNonbondedForce::setFunctionParameters</ref>  (int index, const std::string &amp;name, const std::vector&lt; double &gt; &amp;values, double min, double max)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000018"/>This method exists only for backward compatibility. Use setTabulatedFunctionParameters() instead. If the specified function is not a <ref refid="classOpenMM_1_1Continuous1DFunction" kindref="compound">Continuous1DFunction</ref>, this throws an exception.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classOpenMM_1_1Discrete1DFunction_1a579e812c06b945dc99d86b5989682bc2" kindref="member">OpenMM::Discrete1DFunction::Copy</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000023"/>This will be removed in a future release.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classOpenMM_1_1Discrete2DFunction_1a5c20f7508147fec13c7119badbd84951" kindref="member">OpenMM::Discrete2DFunction::Copy</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000024"/>This will be removed in a future release.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classOpenMM_1_1Discrete3DFunction_1a2671186b0c312538be1643c2ba7c71fe" kindref="member">OpenMM::Discrete3DFunction::Copy</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000025"/>This will be removed in a future release.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classOpenMM_1_1Platform_1a71c79bfcaf2210750ff3fd6968022adb" kindref="member">OpenMM::Platform::supportsDoublePrecision</ref>  () const =0</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000001"/>This method is not well defined, and is too simplistic to describe the actual behavior of some Platforms, such as ones that offer multiple precision modes. It will be removed in a future release.  </para>
</listitem>
<varlistentry><term>Member <ref refid="classOpenMM_1_1TabulatedFunction_1adce303d356f47ce25bad0d8f426f9d00" kindref="member">OpenMM::TabulatedFunction::Copy</ref>  () const =0</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000019"/>This will be removed in a future release. </para>
</listitem>
</variablelist>
</para>
    </detaileddescription>
    <location file="deprecated"/>
  </compounddef>
</doxygen>
