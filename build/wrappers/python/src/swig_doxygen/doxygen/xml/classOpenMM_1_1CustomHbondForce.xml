<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classOpenMM_1_1CustomHbondForce" kind="class" language="C++" prot="public">
    <compoundname>OpenMM::CustomHbondForce</compoundname>
    <basecompoundref refid="classOpenMM_1_1Force" prot="public" virt="non-virtual">OpenMM::Force</basecompoundref>
    <includes refid="CustomHbondForce_8h" local="no">CustomHbondForce.h</includes>
    <innerclass refid="classOpenMM_1_1CustomHbondForce_1_1ExclusionInfo" prot="private">OpenMM::CustomHbondForce::ExclusionInfo</innerclass>
    <innerclass refid="classOpenMM_1_1CustomHbondForce_1_1FunctionInfo" prot="private">OpenMM::CustomHbondForce::FunctionInfo</innerclass>
    <innerclass refid="classOpenMM_1_1CustomHbondForce_1_1GlobalParameterInfo" prot="private">OpenMM::CustomHbondForce::GlobalParameterInfo</innerclass>
    <innerclass refid="classOpenMM_1_1CustomHbondForce_1_1GroupInfo" prot="private">OpenMM::CustomHbondForce::GroupInfo</innerclass>
    <innerclass refid="classOpenMM_1_1CustomHbondForce_1_1PerPairParameterInfo" prot="private">OpenMM::CustomHbondForce::PerPairParameterInfo</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classOpenMM_1_1CustomHbondForce_1afefd9143292586209274d8e355d8cba1" prot="public" static="no" strong="no">
        <type></type>
        <name>NonbondedMethod</name>
        <enumvalue id="classOpenMM_1_1CustomHbondForce_1afefd9143292586209274d8e355d8cba1a2c95b5f356beb501ec96df85cf24e9cf" prot="public">
          <name>NoCutoff</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>No cutoff is applied to nonbonded interactions. The full set of N^2 interactions is computed exactly. This necessarily means that periodic boundary conditions cannot be used. This is the default. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOpenMM_1_1CustomHbondForce_1afefd9143292586209274d8e355d8cba1a1425c7aeae13b2906bc0fabc3cf0d5ea" prot="public">
          <name>CutoffNonPeriodic</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interactions beyond the cutoff distance are ignored. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOpenMM_1_1CustomHbondForce_1afefd9143292586209274d8e355d8cba1a0d70001181e37f89042383fd650a2021" prot="public">
          <name>CutoffPeriodic</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Periodic boundary conditions are used, so that each particle interacts only with the nearest periodic copy of each other particle. Interactions beyond the cutoff distance are ignored. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an enumeration of the different methods that may be used for handling long range nonbonded forces. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="113" column="5" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" bodystart="113" bodyend="128"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classOpenMM_1_1CustomHbondForce_1af0dfae096921ac140ac98cf6186630d9" prot="private" static="no" mutable="no">
        <type><ref refid="classOpenMM_1_1CustomHbondForce_1afefd9143292586209274d8e355d8cba1" kindref="member">NonbondedMethod</ref></type>
        <definition>NonbondedMethod OpenMM::CustomHbondForce::nonbondedMethod</definition>
        <argsstring></argsstring>
        <name>nonbondedMethod</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="475" column="21" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" bodystart="474" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1CustomHbondForce_1aa56145f17e651b4db1a9ea82d0364782" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double OpenMM::CustomHbondForce::cutoffDistance</definition>
        <argsstring></argsstring>
        <name>cutoffDistance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="476" column="12" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" bodystart="476" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1CustomHbondForce_1a42b733ddfbca420b7bfa28446d8c0c12" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string OpenMM::CustomHbondForce::energyExpression</definition>
        <argsstring></argsstring>
        <name>energyExpression</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="477" column="17" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" bodystart="477" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1CustomHbondForce_1a6a8d702c7bc30766f5da8fb355af453b" prot="private" static="no" mutable="no">
        <type>std::vector&lt; PerPairParameterInfo &gt;</type>
        <definition>std::vector&lt;PerPairParameterInfo&gt; OpenMM::CustomHbondForce::donorParameters</definition>
        <argsstring></argsstring>
        <name>donorParameters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="478" column="17" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" bodystart="478" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1CustomHbondForce_1ac9bbb3d572331d20faf59f52cfb38d8a" prot="private" static="no" mutable="no">
        <type>std::vector&lt; PerPairParameterInfo &gt;</type>
        <definition>std::vector&lt;PerPairParameterInfo&gt; OpenMM::CustomHbondForce::acceptorParameters</definition>
        <argsstring></argsstring>
        <name>acceptorParameters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="479" column="17" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" bodystart="479" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1CustomHbondForce_1a26bd342c9efe45791f51a9ad7779c389" prot="private" static="no" mutable="no">
        <type>std::vector&lt; GlobalParameterInfo &gt;</type>
        <definition>std::vector&lt;GlobalParameterInfo&gt; OpenMM::CustomHbondForce::globalParameters</definition>
        <argsstring></argsstring>
        <name>globalParameters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="480" column="17" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" bodystart="480" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1CustomHbondForce_1adc2db53dba83711a379cdd6b37af9a5d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; GroupInfo &gt;</type>
        <definition>std::vector&lt;GroupInfo&gt; OpenMM::CustomHbondForce::donors</definition>
        <argsstring></argsstring>
        <name>donors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="481" column="17" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" bodystart="481" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1CustomHbondForce_1a03000b3168357cb7c6da1a53d501742f" prot="private" static="no" mutable="no">
        <type>std::vector&lt; GroupInfo &gt;</type>
        <definition>std::vector&lt;GroupInfo&gt; OpenMM::CustomHbondForce::acceptors</definition>
        <argsstring></argsstring>
        <name>acceptors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="482" column="17" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" bodystart="482" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1CustomHbondForce_1a66b1dbf90a552c76995f028b40b271f0" prot="private" static="no" mutable="no">
        <type>std::vector&lt; ExclusionInfo &gt;</type>
        <definition>std::vector&lt;ExclusionInfo&gt; OpenMM::CustomHbondForce::exclusions</definition>
        <argsstring></argsstring>
        <name>exclusions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="483" column="17" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" bodystart="483" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1CustomHbondForce_1ae41fe78ea5d38b327129779aaf336be9" prot="private" static="no" mutable="no">
        <type>std::vector&lt; FunctionInfo &gt;</type>
        <definition>std::vector&lt;FunctionInfo&gt; OpenMM::CustomHbondForce::functions</definition>
        <argsstring></argsstring>
        <name>functions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="484" column="17" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" bodystart="484" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1a3d62e5362696d3b33d69ef255bca35d5" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>OpenMM::CustomHbondForce::CustomHbondForce</definition>
        <argsstring>(const std::string &amp;energy)</argsstring>
        <name>CustomHbondForce</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>energy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a <ref refid="classOpenMM_1_1CustomHbondForce" kindref="compound">CustomHbondForce</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>energy</parametername>
</parameternamelist>
<parameterdescription>
<para>an algebraic expression giving the interaction energy between a donor and an acceptor as a function of inter-particle distances, angles, and dihedrals, as well as any global, per-donor, and per-acceptor parameters </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="136" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1ac6a74e5f8b4479d42441fa9beb8364ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OpenMM::CustomHbondForce::~CustomHbondForce</definition>
        <argsstring>()</argsstring>
        <name>~CustomHbondForce</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="137" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1adfada9a0b779045eafebd5d2266fc302" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::CustomHbondForce::getNumDonors</definition>
        <argsstring>() const</argsstring>
        <name>getNumDonors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of donors for which force field parameters have been defined. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="141" column="9" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" bodystart="141" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1af107184c3b4204398dbce7019f2fd9c9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::CustomHbondForce::getNumAcceptors</definition>
        <argsstring>() const</argsstring>
        <name>getNumAcceptors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of acceptors for which force field parameters have been defined. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="147" column="9" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" bodystart="147" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1ad9f92a080722a43e57148a8e272098bb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::CustomHbondForce::getNumExclusions</definition>
        <argsstring>() const</argsstring>
        <name>getNumExclusions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of donor-acceptor pairs whose interactions should be excluded. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="153" column="9" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" bodystart="153" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1a1726cf660f4e7715f4cb7248eb92bb2f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::CustomHbondForce::getNumPerDonorParameters</definition>
        <argsstring>() const</argsstring>
        <name>getNumPerDonorParameters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of per-donor parameters that the interaction depends on. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="159" column="9" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" bodystart="159" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1a4576aa0ea095bd463faee0902b37fdd5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::CustomHbondForce::getNumPerAcceptorParameters</definition>
        <argsstring>() const</argsstring>
        <name>getNumPerAcceptorParameters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of per-acceptor parameters that the interaction depends on. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="165" column="9" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" bodystart="165" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1a69afdece0b794552d54525ad75fcf79b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::CustomHbondForce::getNumGlobalParameters</definition>
        <argsstring>() const</argsstring>
        <name>getNumGlobalParameters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of global parameters that the interaction depends on. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="171" column="9" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" bodystart="171" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1a19dc15950089f4c60c22d988c822aceb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::CustomHbondForce::getNumTabulatedFunctions</definition>
        <argsstring>() const</argsstring>
        <name>getNumTabulatedFunctions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of tabulated functions that have been defined. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="177" column="9" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" bodystart="177" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1a00565df8584df3d10fb8246ca9b29a31" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::CustomHbondForce::getNumFunctions</definition>
        <argsstring>() const</argsstring>
        <name>getNumFunctions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of tabulated functions that have been defined.</para>
<para><xrefsect id="deprecated_1_deprecated000011"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This method exists only for backward compatibility. Use <ref refid="classOpenMM_1_1CustomHbondForce_1a19dc15950089f4c60c22d988c822aceb" kindref="member">getNumTabulatedFunctions()</ref> instead. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="185" column="9" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" bodystart="185" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1ac2b98855c85feb8213c7cfff759ce1cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; OpenMM::CustomHbondForce::getEnergyFunction</definition>
        <argsstring>() const</argsstring>
        <name>getEnergyFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the algebraic expression that gives the interaction energy between a donor and an acceptor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="191" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1a9e31012451fde6286ff1e54f19da099e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::CustomHbondForce::setEnergyFunction</definition>
        <argsstring>(const std::string &amp;energy)</argsstring>
        <name>setEnergyFunction</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>energy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the algebraic expression that gives the interaction energy between a donor and an acceptor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="195" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1a560f529b16e42f5fa40e95cfefd60ad8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classOpenMM_1_1CustomHbondForce_1afefd9143292586209274d8e355d8cba1" kindref="member">NonbondedMethod</ref></type>
        <definition>NonbondedMethod OpenMM::CustomHbondForce::getNonbondedMethod</definition>
        <argsstring>() const</argsstring>
        <name>getNonbondedMethod</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the method used for handling long range nonbonded interactions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="199" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1a71862a018a39c27b59f328ec614bf85c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::CustomHbondForce::setNonbondedMethod</definition>
        <argsstring>(NonbondedMethod method)</argsstring>
        <name>setNonbondedMethod</name>
        <param>
          <type><ref refid="classOpenMM_1_1CustomHbondForce_1afefd9143292586209274d8e355d8cba1" kindref="member">NonbondedMethod</ref></type>
          <declname>method</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the method used for handling long range nonbonded interactions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="203" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1a46f9c22ca1be8ccb29299f090f24c4ff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double OpenMM::CustomHbondForce::getCutoffDistance</definition>
        <argsstring>() const</argsstring>
        <name>getCutoffDistance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the cutoff distance (in nm) being used. All interactions for which the distance between d1 and a1 is greater than the cutoff will be ignored. If the NonbondedMethod in use is NoCutoff, this value will have no effect.</para>
<para><simplesect kind="return"><para>the cutoff distance, measured in nm </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="210" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1a03f9deba471b23c53925919938ba24e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::CustomHbondForce::setCutoffDistance</definition>
        <argsstring>(double distance)</argsstring>
        <name>setCutoffDistance</name>
        <param>
          <type>double</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the cutoff distance (in nm) being used. All interactions for which the distance between d1 and a1 is greater than the cutoff will be ignored. If the NonbondedMethod in use is NoCutoff, this value will have no effect.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>distance</parametername>
</parameternamelist>
<parameterdescription>
<para>the cutoff distance, measured in nm </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="217" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1a497e99fd0d69c13abc1e68b690441f9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::CustomHbondForce::addPerDonorParameter</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>addPerDonorParameter</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a new per-donor parameter that the interaction may depend on.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the index of the parameter that was added </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="224" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1a075d8f34ea646daafadfa50c19d7de2f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; OpenMM::CustomHbondForce::getPerDonorParameterName</definition>
        <argsstring>(int index) const</argsstring>
        <name>getPerDonorParameterName</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the name of a per-donor parameter.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the parameter for which to get the name </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the parameter name </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="231" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1a51bc1e2f8a89480b240e8853dd3002bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::CustomHbondForce::setPerDonorParameterName</definition>
        <argsstring>(int index, const std::string &amp;name)</argsstring>
        <name>setPerDonorParameterName</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the name of a per-donor parameter.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the parameter for which to set the name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="238" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1aa756a711e896c4051982ffa1f83079c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::CustomHbondForce::addPerAcceptorParameter</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>addPerAcceptorParameter</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a new per-acceptor parameter that the interaction may depend on.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the index of the parameter that was added </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="245" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1a54aadd2103ba09af532deb4eda67c264" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; OpenMM::CustomHbondForce::getPerAcceptorParameterName</definition>
        <argsstring>(int index) const</argsstring>
        <name>getPerAcceptorParameterName</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the name of a per-acceptor parameter.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the parameter for which to get the name </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the parameter name </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="252" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1aaa88a34e53fd2206a16352c44a52fdc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::CustomHbondForce::setPerAcceptorParameterName</definition>
        <argsstring>(int index, const std::string &amp;name)</argsstring>
        <name>setPerAcceptorParameterName</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the name of a per-acceptor parameter.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the parameter for which to set the name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="259" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1a1164d5eaac6bb88509eddd5019473ff3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::CustomHbondForce::addGlobalParameter</definition>
        <argsstring>(const std::string &amp;name, double defaultValue)</argsstring>
        <name>addGlobalParameter</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>double</type>
          <declname>defaultValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a new global parameter that the interaction may depend on. The default value provided to this method is the initial value of the parameter in newly created Contexts. You can change the value at any time by calling setParameter() on the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the default value of the parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the index of the parameter that was added </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="269" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1ac5a70fb57a0251c9794ad4b205fbb016" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; OpenMM::CustomHbondForce::getGlobalParameterName</definition>
        <argsstring>(int index) const</argsstring>
        <name>getGlobalParameterName</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the name of a global parameter.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the parameter for which to get the name </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the parameter name </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="276" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1a6562d7343f7dd694f30faab3d4d6d0aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::CustomHbondForce::setGlobalParameterName</definition>
        <argsstring>(int index, const std::string &amp;name)</argsstring>
        <name>setGlobalParameterName</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the name of a global parameter.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the parameter for which to set the name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="283" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1addd61496d1b00288f3dab7a069df192a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double OpenMM::CustomHbondForce::getGlobalParameterDefaultValue</definition>
        <argsstring>(int index) const</argsstring>
        <name>getGlobalParameterDefaultValue</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the default value of a global parameter.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the parameter for which to get the default value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the parameter default value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="290" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1a35440cb7036c5ebf35a22242fe337fae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::CustomHbondForce::setGlobalParameterDefaultValue</definition>
        <argsstring>(int index, double defaultValue)</argsstring>
        <name>setGlobalParameterDefaultValue</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>double</type>
          <declname>defaultValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the default value of a global parameter.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the parameter for which to set the default value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the default value of the parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="297" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1a118ea8beef7d0998324dff5afbb25a67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::CustomHbondForce::addDonor</definition>
        <argsstring>(int d1, int d2, int d3, const std::vector&lt; double &gt; &amp;parameters=std::vector&lt; double &gt;())</argsstring>
        <name>addDonor</name>
        <param>
          <type>int</type>
          <declname>d1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>d2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>d3</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>parameters</declname>
          <defval>std::vector&lt; double &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a donor group to the force</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>d1</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the first particle for this donor group </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d2</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the second particle for this donor group. If the group only includes one particle, this must be -1. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d3</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the third particle for this donor group. If the group includes less than three particles, this must be -1. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>the list of per-donor parameter values for the new donor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the index of the donor that was added </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="309" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1a5f8d8517b1c0cad6101aa97ac4655fa8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::CustomHbondForce::getDonorParameters</definition>
        <argsstring>(int index, int &amp;d1, int &amp;d2, int &amp;d3, std::vector&lt; double &gt; &amp;parameters) const</argsstring>
        <name>getDonorParameters</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>d1</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>d2</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>d3</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt; &amp;</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the properties of a donor group.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the donor group to get </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">d1</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the first particle for this donor group </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">d2</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the second particle for this donor group. If the group only includes one particle, this will be -1. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">d3</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the third particle for this donor group. If the group includes less than three particles, this will be -1. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>the list of per-donor parameter values for the donor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="321" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1a67092a3e4108da8c8eb5573f77270678" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::CustomHbondForce::setDonorParameters</definition>
        <argsstring>(int index, int d1, int d2, int d3, const std::vector&lt; double &gt; &amp;parameters=std::vector&lt; double &gt;())</argsstring>
        <name>setDonorParameters</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>int</type>
          <declname>d1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>d2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>d3</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>parameters</declname>
          <defval>std::vector&lt; double &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the properties of a donor group.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the donor group to set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d1</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the first particle for this donor group </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d2</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the second particle for this donor group. If the group only includes one particle, this must be -1. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d3</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the third particle for this donor group. If the group includes less than three particles, this must be -1. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>the list of per-donor parameter values for the donor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="333" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1a441c4759b33da500976e151757df6c7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::CustomHbondForce::addAcceptor</definition>
        <argsstring>(int a1, int a2, int a3, const std::vector&lt; double &gt; &amp;parameters=std::vector&lt; double &gt;())</argsstring>
        <name>addAcceptor</name>
        <param>
          <type>int</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>a2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>a3</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>parameters</declname>
          <defval>std::vector&lt; double &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add an acceptor group to the force</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a1</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the first particle for this acceptor group </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a2</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the second particle for this acceptor group. If the group only includes one particle, this must be -1. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a3</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the third particle for this acceptor group. If the group includes less than three particles, this must be -1. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>the list of per-acceptor parameter values for the new acceptor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the index of the acceptor that was added </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="345" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1a8106732e1eb90f68ba7c8bf7d5bb9bcf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::CustomHbondForce::getAcceptorParameters</definition>
        <argsstring>(int index, int &amp;a1, int &amp;a2, int &amp;a3, std::vector&lt; double &gt; &amp;parameters) const</argsstring>
        <name>getAcceptorParameters</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>a2</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>a3</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt; &amp;</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the properties of an acceptor group.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the acceptor group to get </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">a1</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the first particle for this acceptor group </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">a2</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the second particle for this acceptor group. If the group only includes one particle, this will be -1. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">a3</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the third particle for this acceptor group. If the group includes less than three particles, this will be -1. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>the list of per-acceptor parameter values for the acceptor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="357" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1a21ae3b0d188ae68d0c878efc67cff547" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::CustomHbondForce::setAcceptorParameters</definition>
        <argsstring>(int index, int a1, int a2, int a3, const std::vector&lt; double &gt; &amp;parameters=std::vector&lt; double &gt;())</argsstring>
        <name>setAcceptorParameters</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>int</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>a2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>a3</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>parameters</declname>
          <defval>std::vector&lt; double &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the properties of an acceptor group.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the acceptor group to set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a1</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the first particle for this acceptor group </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a2</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the second particle for this acceptor group. If the group only includes one particle, this must be -1. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a3</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the third particle for this acceptor group. If the group includes less than three particles, this must be -1. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>the list of per-acceptor parameter values for the acceptor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="369" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1ac55a18d63878975ef02f39feb10afe94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::CustomHbondForce::addExclusion</definition>
        <argsstring>(int donor, int acceptor)</argsstring>
        <name>addExclusion</name>
        <param>
          <type>int</type>
          <declname>donor</declname>
        </param>
        <param>
          <type>int</type>
          <declname>acceptor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a donor-acceptor pair to the list of interactions that should be excluded.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>donor</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the donor to exclude </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>acceptor</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the acceptor to exclude </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the index of the exclusion that was added </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="377" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1a5eff21d2c08ff9acac4dc51c0425a6f1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::CustomHbondForce::getExclusionParticles</definition>
        <argsstring>(int index, int &amp;donor, int &amp;acceptor) const</argsstring>
        <name>getExclusionParticles</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>donor</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>acceptor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the donor and acceptor in a pair whose interaction should be excluded.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the exclusion for which to get donor and acceptor indices </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">donor</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the donor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">acceptor</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the acceptor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="385" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1a12a09d60080c49e0e71f0fcd4915cf2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::CustomHbondForce::setExclusionParticles</definition>
        <argsstring>(int index, int donor, int acceptor)</argsstring>
        <name>setExclusionParticles</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>int</type>
          <declname>donor</declname>
        </param>
        <param>
          <type>int</type>
          <declname>acceptor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the donor and acceptor in a pair whose interaction should be excluded.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the exclusion for which to get donor and acceptor indices </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>donor</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the donor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>acceptor</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the acceptor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="393" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1aeca7af0b2246e6fd70e986ce98dccf2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::CustomHbondForce::addTabulatedFunction</definition>
        <argsstring>(const std::string &amp;name, TabulatedFunction *function)</argsstring>
        <name>addTabulatedFunction</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classOpenMM_1_1TabulatedFunction" kindref="compound">TabulatedFunction</ref> *</type>
          <declname>function</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a tabulated function that may appear in the energy expression.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the function as it appears in expressions </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>function</parametername>
</parameternamelist>
<parameterdescription>
<para>a <ref refid="classOpenMM_1_1TabulatedFunction" kindref="compound">TabulatedFunction</ref> object defining the function. The <ref refid="classOpenMM_1_1TabulatedFunction" kindref="compound">TabulatedFunction</ref> should have been created on the heap with the &quot;new&quot; operator. The <ref refid="classOpenMM_1_1Force" kindref="compound">Force</ref> takes over ownership of it, and deletes it when the <ref refid="classOpenMM_1_1Force" kindref="compound">Force</ref> itself is deleted. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the index of the function that was added </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="403" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1ac7a8d640616d9d256950c33d31101bc9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classOpenMM_1_1TabulatedFunction" kindref="compound">TabulatedFunction</ref> &amp;</type>
        <definition>const TabulatedFunction &amp; OpenMM::CustomHbondForce::getTabulatedFunction</definition>
        <argsstring>(int index) const</argsstring>
        <name>getTabulatedFunction</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a const reference to a tabulated function that may appear in the energy expression.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the function to get </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the <ref refid="classOpenMM_1_1TabulatedFunction" kindref="compound">TabulatedFunction</ref> object defining the function </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="410" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1ae85a654e448d0d596ea9f1c90c79c6ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classOpenMM_1_1TabulatedFunction" kindref="compound">TabulatedFunction</ref> &amp;</type>
        <definition>TabulatedFunction &amp; OpenMM::CustomHbondForce::getTabulatedFunction</definition>
        <argsstring>(int index)</argsstring>
        <name>getTabulatedFunction</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a reference to a tabulated function that may appear in the energy expression.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the function to get </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the <ref refid="classOpenMM_1_1TabulatedFunction" kindref="compound">TabulatedFunction</ref> object defining the function </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="417" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1ad0b00dc11b52eabf90e2d9e9f25e5bcb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; OpenMM::CustomHbondForce::getTabulatedFunctionName</definition>
        <argsstring>(int index) const</argsstring>
        <name>getTabulatedFunctionName</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the name of a tabulated function that may appear in the energy expression.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the function to get </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the name of the function as it appears in expressions </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="424" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1a41ad540e83921920a54a5c30d3b3032b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::CustomHbondForce::addFunction</definition>
        <argsstring>(const std::string &amp;name, const std::vector&lt; double &gt; &amp;values, double min, double max)</argsstring>
        <name>addFunction</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>double</type>
          <declname>min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a tabulated function that may appear in the energy expression.</para>
<para><xrefsect id="deprecated_1_deprecated000012"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This method exists only for backward compatibility. Use <ref refid="classOpenMM_1_1CustomHbondForce_1aeca7af0b2246e6fd70e986ce98dccf2d" kindref="member">addTabulatedFunction()</ref> instead. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="430" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1aefb02b41154b8c14c9a70ef11c5feaea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::CustomHbondForce::getFunctionParameters</definition>
        <argsstring>(int index, std::string &amp;name, std::vector&lt; double &gt; &amp;values, double &amp;min, double &amp;max) const</argsstring>
        <name>getFunctionParameters</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the parameters for a tabulated function that may appear in the energy expression.</para>
<para><xrefsect id="deprecated_1_deprecated000013"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This method exists only for backward compatibility. Use getTabulatedFunctionParameters() instead. If the specified function is not a <ref refid="classOpenMM_1_1Continuous1DFunction" kindref="compound">Continuous1DFunction</ref>, this throws an exception. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="437" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1aa4c9e449649306862d6ba1ae537919e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::CustomHbondForce::setFunctionParameters</definition>
        <argsstring>(int index, const std::string &amp;name, const std::vector&lt; double &gt; &amp;values, double min, double max)</argsstring>
        <name>setFunctionParameters</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>double</type>
          <declname>min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the parameters for a tabulated function that may appear in the energy expression.</para>
<para><xrefsect id="deprecated_1_deprecated000014"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This method exists only for backward compatibility. Use setTabulatedFunctionParameters() instead. If the specified function is not a <ref refid="classOpenMM_1_1Continuous1DFunction" kindref="compound">Continuous1DFunction</ref>, this throws an exception. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="444" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1adc094e7329292efa4e3dde4714f2fdcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::CustomHbondForce::updateParametersInContext</definition>
        <argsstring>(Context &amp;context)</argsstring>
        <name>updateParametersInContext</name>
        <param>
          <type><ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update the per-donor and per-acceptor parameters and tabulated functions in a <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> to match those stored in this <ref refid="classOpenMM_1_1Force" kindref="compound">Force</ref> object. This method provides an efficient method to update certain parameters in an existing <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> without needing to reinitialize it. Simply call <ref refid="classOpenMM_1_1CustomHbondForce_1a67092a3e4108da8c8eb5573f77270678" kindref="member">setDonorParameters()</ref> and <ref refid="classOpenMM_1_1CustomHbondForce_1a21ae3b0d188ae68d0c878efc67cff547" kindref="member">setAcceptorParameters()</ref> to modify this object&apos;s parameters, then call <ref refid="classOpenMM_1_1CustomHbondForce_1adc094e7329292efa4e3dde4714f2fdcb" kindref="member">updateParametersInContext()</ref> to copy them over to the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref>.</para>
<para>This method has several limitations. The only information it updates is the values of per-donor and per-acceptor parameters and tabulated functions. All other aspects of the <ref refid="classOpenMM_1_1Force" kindref="compound">Force</ref> (the energy function, nonbonded method, cutoff distance, etc.) are unaffected and can only be changed by reinitializing the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref>. The set of particles involved in a donor or acceptor cannot be changed, nor can new donors or acceptors be added. While the tabulated values of a function can change, everything else about it (its dimensions, the data range) must not be changed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="457" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1abb72f0b42875b68d303ce2ca7e0180ae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool OpenMM::CustomHbondForce::usesPeriodicBoundaryConditions</definition>
        <argsstring>() const</argsstring>
        <name>usesPeriodicBoundaryConditions</name>
        <reimplements refid="classOpenMM_1_1Force_1a955afab55a1cd8b24cdf91258477237f">usesPeriodicBoundaryConditions</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns whether or not this force makes use of periodic boundary conditions.</para>
<para><simplesect kind="return"><para>true if force uses PBC and false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="464" column="10" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" bodystart="464" bodyend="466"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classOpenMM_1_1CustomHbondForce_1a05b627311571d092ce633e7491f26db4" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>ForceImpl *</type>
        <definition>ForceImpl * OpenMM::CustomHbondForce::createImpl</definition>
        <argsstring>() const</argsstring>
        <name>createImpl</name>
        <reimplements refid="classOpenMM_1_1Force_1a12dc4c2566ab670d47ef05bda169fa05">createImpl</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>When a <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> is created, it invokes this method on each <ref refid="classOpenMM_1_1Force" kindref="compound">Force</ref> in the <ref refid="classOpenMM_1_1System" kindref="compound">System</ref>. It should create a new ForceImpl object which can be used by the context for calculating forces. The ForceImpl will be deleted automatically when the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> is deleted. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="468" column="15"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class supports a wide variety of energy functions used to represent hydrogen bonding. It computes interactions between &quot;donor&quot; particle groups and &quot;acceptor&quot; particle groups, where each group may include up to three particles. Typically a donor group consists of a hydrogen atom and the atoms it is bonded to, and an acceptor group consists of a negatively charged atom and the atoms it is bonded to.</para>
<para>We refer to the particles in a donor group as d1, d2 and d3, and the particles in an acceptor group as a1, a2, and a3. For each donor and each acceptor, <ref refid="classOpenMM_1_1CustomHbondForce" kindref="compound">CustomHbondForce</ref> evaluates a user supplied algebraic expression to determine the interaction energy. The expression may depend on arbitrary distances, angles, and dihedral angles defined by any of the six particles involved. The function distance(p1, p2) is the distance between the particles p1 and p2 (where &quot;p1&quot; and &quot;p2&quot; should be replaced by the names of the actual particles to calculate the distance between), angle(p1, p2, p3) is the angle formed by the three specified particles, and dihedral(p1, p2, p3, p4) is the dihedral angle formed by the four specified particles.</para>
<para>The expression also may involve tabulated functions, and may depend on arbitrary global, per-donor, and per-acceptor parameters. It also optionally supports periodic boundary conditions and cutoffs for long range interactions.</para>
<para>To use this class, create a <ref refid="classOpenMM_1_1CustomHbondForce" kindref="compound">CustomHbondForce</ref> object, passing an algebraic expression to the constructor that defines the interaction energy between each donor and acceptor. Then call <ref refid="classOpenMM_1_1CustomHbondForce_1a497e99fd0d69c13abc1e68b690441f9d" kindref="member">addPerDonorParameter()</ref> to define per-donor parameters, <ref refid="classOpenMM_1_1CustomHbondForce_1aa756a711e896c4051982ffa1f83079c1" kindref="member">addPerAcceptorParameter()</ref> to define per-acceptor parameters, and <ref refid="classOpenMM_1_1CustomHbondForce_1a1164d5eaac6bb88509eddd5019473ff3" kindref="member">addGlobalParameter()</ref> to define global parameters. The values of per-donor and per-acceptor parameters are specified as part of the system definition, while values of global parameters may be modified during a simulation by calling <ref refid="classOpenMM_1_1Context_1a368b7f53ee35bb151ee686441b7900af" kindref="member">Context::setParameter()</ref>.</para>
<para>Next, call <ref refid="classOpenMM_1_1CustomHbondForce_1a118ea8beef7d0998324dff5afbb25a67" kindref="member">addDonor()</ref> and <ref refid="classOpenMM_1_1CustomHbondForce_1a441c4759b33da500976e151757df6c7b" kindref="member">addAcceptor()</ref> to define donors and acceptors and specify their parameter values. After a donor or acceptor has been added, you can modify its parameters by calling <ref refid="classOpenMM_1_1CustomHbondForce_1a67092a3e4108da8c8eb5573f77270678" kindref="member">setDonorParameters()</ref> or <ref refid="classOpenMM_1_1CustomHbondForce_1a21ae3b0d188ae68d0c878efc67cff547" kindref="member">setAcceptorParameters()</ref>. This will have no effect on Contexts that already exist unless you call <ref refid="classOpenMM_1_1CustomHbondForce_1adc094e7329292efa4e3dde4714f2fdcb" kindref="member">updateParametersInContext()</ref>.</para>
<para><ref refid="classOpenMM_1_1CustomHbondForce" kindref="compound">CustomHbondForce</ref> also lets you specify &quot;exclusions&quot;, particular combinations of donors and acceptors whose interactions should be omitted from force and energy calculations. This is most often used for particles that are bonded to each other.</para>
<para>As an example, the following code creates a <ref refid="classOpenMM_1_1CustomHbondForce" kindref="compound">CustomHbondForce</ref> that implements a simple harmonic potential to keep the distance between a1 and d1, and the angle formed by a1-d1-d2, near ideal values:</para>
<para><verbatim>embed:rst:leading-asterisk
* .. code-block:: cpp
*
*    CustomHbondForce* force = new CustomHbondForce(&quot;k*(distance(a1,d1)-r0)^2*(angle(a1,d1,d2)-theta0)^2&quot;);
*
* </verbatim></para>
<para>This force depends on three parameters: k, r0, and theta0. The following code defines these as per-donor parameters:</para>
<para><verbatim>embed:rst:leading-asterisk
* .. code-block:: cpp
*
*    force-&gt;addPerDonorParameter(&quot;k&quot;);
*    force-&gt;addPerDonorParameter(&quot;r0&quot;);
*    force-&gt;addPerDonorParameter(&quot;theta0&quot;);
*
* </verbatim></para>
<para>Expressions may involve the operators + (add), - (subtract), * (multiply), / (divide), and ^ (power), and the following functions: sqrt, exp, log, sin, cos, sec, csc, tan, cot, asin, acos, atan, atan2, sinh, cosh, tanh, erf, erfc, min, max, abs, floor, ceil, step, delta, select. All trigonometric functions are defined in radians, and log is the natural logarithm. step(x) = 0 if x is less than 0, 1 otherwise. delta(x) = 1 if x is 0, 0 otherwise. select(x,y,z) = z if x = 0, y otherwise.</para>
<para>In addition, you can call <ref refid="classOpenMM_1_1CustomHbondForce_1aeca7af0b2246e6fd70e986ce98dccf2d" kindref="member">addTabulatedFunction()</ref> to define a new function based on tabulated values. You specify the function by creating a <ref refid="classOpenMM_1_1TabulatedFunction" kindref="compound">TabulatedFunction</ref> object. That function can then appear in the expression. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>OpenMM::CustomHbondForce</label>
        <link refid="classOpenMM_1_1CustomHbondForce"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>OpenMM::Force</label>
        <link refid="classOpenMM_1_1Force"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>OpenMM::CustomHbondForce</label>
        <link refid="classOpenMM_1_1CustomHbondForce"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>OpenMM::Force</label>
        <link refid="classOpenMM_1_1Force"/>
      </node>
    </collaborationgraph>
    <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" line="108" column="1" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/CustomHbondForce.h" bodystart="108" bodyend="485"/>
    <listofallmembers>
      <member refid="classOpenMM_1_1CustomHbondForce_1ac9bbb3d572331d20faf59f52cfb38d8a" prot="private" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>acceptorParameters</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1a03000b3168357cb7c6da1a53d501742f" prot="private" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>acceptors</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1a441c4759b33da500976e151757df6c7b" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>addAcceptor</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1a118ea8beef7d0998324dff5afbb25a67" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>addDonor</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1ac55a18d63878975ef02f39feb10afe94" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>addExclusion</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1a41ad540e83921920a54a5c30d3b3032b" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>addFunction</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1a1164d5eaac6bb88509eddd5019473ff3" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>addGlobalParameter</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1aa756a711e896c4051982ffa1f83079c1" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>addPerAcceptorParameter</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1a497e99fd0d69c13abc1e68b690441f9d" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>addPerDonorParameter</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1aeca7af0b2246e6fd70e986ce98dccf2d" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>addTabulatedFunction</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1a05b627311571d092ce633e7491f26db4" prot="protected" virt="virtual"><scope>OpenMM::CustomHbondForce</scope><name>createImpl</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1a3d62e5362696d3b33d69ef255bca35d5" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>CustomHbondForce</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1aa56145f17e651b4db1a9ea82d0364782" prot="private" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>cutoffDistance</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1afefd9143292586209274d8e355d8cba1a1425c7aeae13b2906bc0fabc3cf0d5ea" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>CutoffNonPeriodic</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1afefd9143292586209274d8e355d8cba1a0d70001181e37f89042383fd650a2021" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>CutoffPeriodic</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1a6a8d702c7bc30766f5da8fb355af453b" prot="private" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>donorParameters</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1adc2db53dba83711a379cdd6b37af9a5d" prot="private" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>donors</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1a42b733ddfbca420b7bfa28446d8c0c12" prot="private" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>energyExpression</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1a66b1dbf90a552c76995f028b40b271f0" prot="private" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>exclusions</name></member>
      <member refid="classOpenMM_1_1Force_1a40e75e251ec93d3bc9fc87b96026fbc2" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>Force</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1ae41fe78ea5d38b327129779aaf336be9" prot="private" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>functions</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1a8106732e1eb90f68ba7c8bf7d5bb9bcf" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>getAcceptorParameters</name></member>
      <member refid="classOpenMM_1_1Force_1a152bbe8e42e036e697b587c0832e233b" prot="protected" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>getContextImpl</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1a46f9c22ca1be8ccb29299f090f24c4ff" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>getCutoffDistance</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1a5f8d8517b1c0cad6101aa97ac4655fa8" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>getDonorParameters</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1ac2b98855c85feb8213c7cfff759ce1cf" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>getEnergyFunction</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1a5eff21d2c08ff9acac4dc51c0425a6f1" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>getExclusionParticles</name></member>
      <member refid="classOpenMM_1_1Force_1ab9428f8447cba02d548963242dd674ff" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>getForceGroup</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1aefb02b41154b8c14c9a70ef11c5feaea" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>getFunctionParameters</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1addd61496d1b00288f3dab7a069df192a" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>getGlobalParameterDefaultValue</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1ac5a70fb57a0251c9794ad4b205fbb016" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>getGlobalParameterName</name></member>
      <member refid="classOpenMM_1_1Force_1aef442934a17134fe13f5dcc40ada7b11" prot="protected" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>getImplInContext</name></member>
      <member refid="classOpenMM_1_1Force_1a1af3134b705088bd8ed5b6e7521db43d" prot="protected" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>getImplInContext</name></member>
      <member refid="classOpenMM_1_1Force_1a479fe60e5fe8e344109f794ecd7b7bab" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>getName</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1a560f529b16e42f5fa40e95cfefd60ad8" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>getNonbondedMethod</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1af107184c3b4204398dbce7019f2fd9c9" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>getNumAcceptors</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1adfada9a0b779045eafebd5d2266fc302" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>getNumDonors</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1ad9f92a080722a43e57148a8e272098bb" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>getNumExclusions</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1a00565df8584df3d10fb8246ca9b29a31" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>getNumFunctions</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1a69afdece0b794552d54525ad75fcf79b" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>getNumGlobalParameters</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1a4576aa0ea095bd463faee0902b37fdd5" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>getNumPerAcceptorParameters</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1a1726cf660f4e7715f4cb7248eb92bb2f" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>getNumPerDonorParameters</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1a19dc15950089f4c60c22d988c822aceb" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>getNumTabulatedFunctions</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1a54aadd2103ba09af532deb4eda67c264" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>getPerAcceptorParameterName</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1a075d8f34ea646daafadfa50c19d7de2f" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>getPerDonorParameterName</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1ac7a8d640616d9d256950c33d31101bc9" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>getTabulatedFunction</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1ae85a654e448d0d596ea9f1c90c79c6ef" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>getTabulatedFunction</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1ad0b00dc11b52eabf90e2d9e9f25e5bcb" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>getTabulatedFunctionName</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1a26bd342c9efe45791f51a9ad7779c389" prot="private" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>globalParameters</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1afefd9143292586209274d8e355d8cba1a2c95b5f356beb501ec96df85cf24e9cf" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>NoCutoff</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1af0dfae096921ac140ac98cf6186630d9" prot="private" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>nonbondedMethod</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1afefd9143292586209274d8e355d8cba1" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>NonbondedMethod</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1a21ae3b0d188ae68d0c878efc67cff547" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>setAcceptorParameters</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1a03f9deba471b23c53925919938ba24e8" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>setCutoffDistance</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1a67092a3e4108da8c8eb5573f77270678" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>setDonorParameters</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1a9e31012451fde6286ff1e54f19da099e" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>setEnergyFunction</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1a12a09d60080c49e0e71f0fcd4915cf2f" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>setExclusionParticles</name></member>
      <member refid="classOpenMM_1_1Force_1a53e3829a91825a9f6aa17e5ade713f84" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>setForceGroup</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1aa4c9e449649306862d6ba1ae537919e5" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>setFunctionParameters</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1a35440cb7036c5ebf35a22242fe337fae" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>setGlobalParameterDefaultValue</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1a6562d7343f7dd694f30faab3d4d6d0aa" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>setGlobalParameterName</name></member>
      <member refid="classOpenMM_1_1Force_1ac0a383a4d4203427652f1ad5b2528215" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>setName</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1a71862a018a39c27b59f328ec614bf85c" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>setNonbondedMethod</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1aaa88a34e53fd2206a16352c44a52fdc7" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>setPerAcceptorParameterName</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1a51bc1e2f8a89480b240e8853dd3002bc" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>setPerDonorParameterName</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1adc094e7329292efa4e3dde4714f2fdcb" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>updateParametersInContext</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1abb72f0b42875b68d303ce2ca7e0180ae" prot="public" virt="virtual"><scope>OpenMM::CustomHbondForce</scope><name>usesPeriodicBoundaryConditions</name></member>
      <member refid="classOpenMM_1_1CustomHbondForce_1ac6a74e5f8b4479d42441fa9beb8364ff" prot="public" virt="non-virtual"><scope>OpenMM::CustomHbondForce</scope><name>~CustomHbondForce</name></member>
      <member refid="classOpenMM_1_1Force_1a6516b32ebeb95a694f56d93bdf81f4fb" prot="public" virt="virtual"><scope>OpenMM::CustomHbondForce</scope><name>~Force</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
