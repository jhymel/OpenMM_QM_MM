<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classOpenMM_1_1Integrator" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>OpenMM::Integrator</compoundname>
    <derivedcompoundref refid="classOpenMM_1_1BrownianIntegrator" prot="public" virt="non-virtual">OpenMM::BrownianIntegrator</derivedcompoundref>
    <derivedcompoundref refid="classOpenMM_1_1CompoundIntegrator" prot="public" virt="non-virtual">OpenMM::CompoundIntegrator</derivedcompoundref>
    <derivedcompoundref refid="classOpenMM_1_1CustomIntegrator" prot="public" virt="non-virtual">OpenMM::CustomIntegrator</derivedcompoundref>
    <derivedcompoundref refid="classOpenMM_1_1LangevinIntegrator" prot="public" virt="non-virtual">OpenMM::LangevinIntegrator</derivedcompoundref>
    <derivedcompoundref refid="classOpenMM_1_1LangevinMiddleIntegrator" prot="public" virt="non-virtual">OpenMM::LangevinMiddleIntegrator</derivedcompoundref>
    <derivedcompoundref refid="classOpenMM_1_1NoseHooverIntegrator" prot="public" virt="non-virtual">OpenMM::NoseHooverIntegrator</derivedcompoundref>
    <derivedcompoundref refid="classOpenMM_1_1VariableLangevinIntegrator" prot="public" virt="non-virtual">OpenMM::VariableLangevinIntegrator</derivedcompoundref>
    <derivedcompoundref refid="classOpenMM_1_1VariableVerletIntegrator" prot="public" virt="non-virtual">OpenMM::VariableVerletIntegrator</derivedcompoundref>
    <derivedcompoundref refid="classOpenMM_1_1VerletIntegrator" prot="public" virt="non-virtual">OpenMM::VerletIntegrator</derivedcompoundref>
    <includes refid="Integrator_8h" local="no">Integrator.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classOpenMM_1_1Integrator_1ac26c806e60ca4a0547680edb68f6e39b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Context</definition>
        <argsstring></argsstring>
        <name>Context</name>
        <param>
          <type><ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" line="102" column="18" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classOpenMM_1_1Integrator_1a7e2f3e20ff3f49ee3b9c0e529422b663" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class ContextImpl</definition>
        <argsstring></argsstring>
        <name>ContextImpl</name>
        <param>
          <type>ContextImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" line="103" column="18" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classOpenMM_1_1Integrator_1a5ef1f609b97a8982c3d713a5629624f0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class CompoundIntegrator</definition>
        <argsstring></argsstring>
        <name>CompoundIntegrator</name>
        <param>
          <type><ref refid="classOpenMM_1_1CompoundIntegrator" kindref="compound">CompoundIntegrator</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" line="104" column="18" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classOpenMM_1_1Integrator_1ac9c1c07848ae2c2e8617a949a11070c1" prot="protected" static="no" mutable="no">
        <type><ref refid="classOpenMM_1_1Integrator_1a7e2f3e20ff3f49ee3b9c0e529422b663" kindref="member">ContextImpl</ref> *</type>
        <definition>ContextImpl* OpenMM::Integrator::context</definition>
        <argsstring></argsstring>
        <name>context</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" line="105" column="17" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1Integrator_1ab3f6088553343feb8f47ab789e7a09a1" prot="protected" static="no" mutable="no">
        <type><ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> *</type>
        <definition>Context* OpenMM::Integrator::owner</definition>
        <argsstring></argsstring>
        <name>owner</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" line="106" column="13" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classOpenMM_1_1Integrator_1a33185045e1fcb1186e413d182f28e461" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double OpenMM::Integrator::stepSize</definition>
        <argsstring></argsstring>
        <name>stepSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" line="196" column="12" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1Integrator_1ac30d9b040938d0be1eedfc6e7484c204" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double OpenMM::Integrator::constraintTol</definition>
        <argsstring></argsstring>
        <name>constraintTol</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" line="196" column="21" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1Integrator_1a1208d82fd0a14f327a9f70436930f323" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int OpenMM::Integrator::forceGroups</definition>
        <argsstring></argsstring>
        <name>forceGroups</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" line="197" column="9" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classOpenMM_1_1Integrator_1a2732506bfb2afd8e2e9954d08cab1304" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OpenMM::Integrator::Integrator</definition>
        <argsstring>()</argsstring>
        <name>Integrator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" line="59" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1Integrator_1a9abbef84d9e2c4e5a3d3139f8fa84fff" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual OpenMM::Integrator::~Integrator</definition>
        <argsstring>()</argsstring>
        <name>~Integrator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" line="60" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1Integrator_1a880821318aee5b25b02f0929887825c1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double OpenMM::Integrator::getStepSize</definition>
        <argsstring>() const</argsstring>
        <name>getStepSize</name>
        <reimplementedby refid="classOpenMM_1_1CompoundIntegrator_1a584cf6ec5f12df62143e394a96c5ba26">getStepSize</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the size of each time step, in picoseconds. If this integrator uses variable time steps, the size of the most recent step is returned.</para>
<para><simplesect kind="return"><para>the step size, measured in ps </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" line="67" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1Integrator_1a86ef00f4e3abb9e3e325e3c4ebe5ead1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void OpenMM::Integrator::setStepSize</definition>
        <argsstring>(double size)</argsstring>
        <name>setStepSize</name>
        <reimplementedby refid="classOpenMM_1_1CompoundIntegrator_1abb64e175a1a55b76088b1ad74aea76b0">setStepSize</reimplementedby>
        <param>
          <type>double</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the size of each time step, in picoseconds. If this integrator uses variable time steps, the effect of calling this method is undefined, and it may simply be ignored.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>the step size, measured in ps </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" line="74" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1Integrator_1af742feb7b5b9adfcb259bf2dbc9319c4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double OpenMM::Integrator::getConstraintTolerance</definition>
        <argsstring>() const</argsstring>
        <name>getConstraintTolerance</name>
        <reimplementedby refid="classOpenMM_1_1CompoundIntegrator_1a7c83301f2a67053d16e510de2701e0fa">getConstraintTolerance</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the distance tolerance within which constraints are maintained, as a fraction of the constrained distance. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" line="78" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1Integrator_1a47f81ac027670bcad6050c72cc41bd67" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void OpenMM::Integrator::setConstraintTolerance</definition>
        <argsstring>(double tol)</argsstring>
        <name>setConstraintTolerance</name>
        <reimplementedby refid="classOpenMM_1_1CompoundIntegrator_1adb8469bf1fa3e318b202e3a20d1111cf">setConstraintTolerance</reimplementedby>
        <param>
          <type>double</type>
          <declname>tol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the distance tolerance within which constraints are maintained, as a fraction of the constrained distance. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" line="82" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1Integrator_1a55151232664ae778eb2f0e2e8bbe7b67" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void OpenMM::Integrator::step</definition>
        <argsstring>(int steps)=0</argsstring>
        <name>step</name>
        <reimplementedby refid="classOpenMM_1_1BrownianIntegrator_1a9c79551af4f0715cd7a53a1aa4615446">step</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1CompoundIntegrator_1aba23d74fdc33f9c5957aa7aab7d4dd83">step</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1CustomIntegrator_1a1eb08122e1eaf62121a3835f88813458">step</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1LangevinIntegrator_1a7b8c533776000a6c360eb8112dc8123c">step</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1LangevinMiddleIntegrator_1ae3b06a4f379a989859a0e860dbe7af9d">step</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1NoseHooverIntegrator_1ac33d58e470981fa34164dc4ee73c0966">step</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1VariableLangevinIntegrator_1a6fc701469f54895b0a0a524a3eb29676">step</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1VariableVerletIntegrator_1a5a8bbbd9e17d964fb8b25ad842516aac">step</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1VerletIntegrator_1a8bfb87088792e4e93c5947f2cfd2aa3a">step</reimplementedby>
        <param>
          <type>int</type>
          <declname>steps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Advance a simulation through time by taking a series of time steps.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>steps</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of time steps to take </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" line="88" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1Integrator_1a38c94f952b4fcab36371402e508eacf1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int OpenMM::Integrator::getIntegrationForceGroups</definition>
        <argsstring>() const</argsstring>
        <name>getIntegrationForceGroups</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get which force groups to use for integration. By default, all force groups are included. This is interpreted as a set of bit flags: the forces from group i will be included if (groups&amp;(1&lt;&lt;i)) != 0. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" line="94" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1Integrator_1a22b42a4a502c999d87e6bbd3f444eab4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void OpenMM::Integrator::setIntegrationForceGroups</definition>
        <argsstring>(int groups)</argsstring>
        <name>setIntegrationForceGroups</name>
        <param>
          <type>int</type>
          <declname>groups</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set which force groups to use for integration. By default, all force groups are included. This is interpreted as a set of bit flags: the forces from group i will be included if (groups&amp;(1&lt;&lt;i)) != 0. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" line="100" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classOpenMM_1_1Integrator_1a6a2b5bcc61b799be0a37b4a431bdcd7d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void OpenMM::Integrator::initialize</definition>
        <argsstring>(ContextImpl &amp;context)=0</argsstring>
        <name>initialize</name>
        <reimplementedby refid="classOpenMM_1_1BrownianIntegrator_1a0f205a6e23fffff7aa25b55a5b65bf5e">initialize</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1CompoundIntegrator_1a37d872f691a9019281566635ba420c03">initialize</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1CustomIntegrator_1aafc2c4f73364b34b6fdd34a326109def">initialize</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1LangevinIntegrator_1a11ca455fa4de1f2de19db97db2cc9861">initialize</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1LangevinMiddleIntegrator_1a1f4e254050bc6dcfc7782e074afce988">initialize</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1NoseHooverIntegrator_1a7bab1db09da3b78c9f0dd209ef8877be">initialize</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1VariableLangevinIntegrator_1a1d16e30bb73d173d07742e065135ebc5">initialize</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1VariableVerletIntegrator_1ae56aaf72a292adb5099d5ac054a4fde3">initialize</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1VerletIntegrator_1acefa03d3ea1444149b4f3326e1a85de8">initialize</reimplementedby>
        <param>
          <type><ref refid="classOpenMM_1_1Integrator_1a7e2f3e20ff3f49ee3b9c0e529422b663" kindref="member">ContextImpl</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This will be called by the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> when it is created. It informs the <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> of what context it will be integrating, and gives it a chance to do any necessary initialization. It will also get called again if the application calls reinitialize() on the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" line="112" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1Integrator_1a204f42ff795b94be55d0c9ba32261af6" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void OpenMM::Integrator::cleanup</definition>
        <argsstring>()</argsstring>
        <name>cleanup</name>
        <reimplementedby refid="classOpenMM_1_1BrownianIntegrator_1af36538476cf2e4a288e5e328f9c47c6f">cleanup</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1CompoundIntegrator_1a1fc90b4a8d7225a692f891581bd9cafc">cleanup</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1CustomIntegrator_1a077fdbfc5b6e24fe92c0d7e2a37990de">cleanup</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1LangevinIntegrator_1a41c8b6d3b44ae64c3663887de5db32ce">cleanup</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1LangevinMiddleIntegrator_1ac342f4994cff127cb235d8e7416b0117">cleanup</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1NoseHooverIntegrator_1a6c6f9d7e8cc31ed8082d59a38a025ab7">cleanup</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1VariableLangevinIntegrator_1a82eb906f5c374cda0d13a21b8d7788bb">cleanup</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1VariableVerletIntegrator_1a1679178e9139a5d04efd2a1b609f7296">cleanup</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1VerletIntegrator_1a8b58db35bf955a189256899edf6228cc">cleanup</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This will be called by the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> when it is destroyed to let the <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> do any necessary cleanup. It will also get called again if the application calls reinitialize() on the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" line="117" column="18" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" bodystart="117" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1Integrator_1a8f89d06e97e930a35c0c7825f80ea9c9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>virtual std::vector&lt; std::string &gt; OpenMM::Integrator::getKernelNames</definition>
        <argsstring>()=0</argsstring>
        <name>getKernelNames</name>
        <reimplementedby refid="classOpenMM_1_1BrownianIntegrator_1a12d9a48c18cce37c2884e21e17566aaf">getKernelNames</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1CompoundIntegrator_1a2fdb9eb40fd50dea17541b37f8158bda">getKernelNames</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1CustomIntegrator_1a17b8db03ee3b05b26ce931fd83d50afc">getKernelNames</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1LangevinIntegrator_1a3b0ce70d0cb51a60a9e63d1e9374be64">getKernelNames</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1LangevinMiddleIntegrator_1a578df7e6bc85ecab724538d26eb4c959">getKernelNames</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1NoseHooverIntegrator_1a85bb1eaacfc65b452d8bad4cbe9d14e5">getKernelNames</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1VariableLangevinIntegrator_1a15ed5b2293f3353a745c4ff05b5b81f0">getKernelNames</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1VariableVerletIntegrator_1a78f0b558f80a2c449a33391a784274ae">getKernelNames</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1VerletIntegrator_1a4a159028afc4b191044e3b44eced7d89">getKernelNames</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the names of all Kernels used by this <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" line="122" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1Integrator_1aa41aa4c012de261afa5dda15af4fb721" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void OpenMM::Integrator::stateChanged</definition>
        <argsstring>(State::DataType changed)</argsstring>
        <name>stateChanged</name>
        <reimplementedby refid="classOpenMM_1_1CompoundIntegrator_1aa9aa5ffaa70ed940fab8c44d6fc96201">stateChanged</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1CustomIntegrator_1a28faefe25cb874842682253ea1c0ee7a">stateChanged</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1NoseHooverIntegrator_1a90a318b98fe0affcfbccc7259ef99373">stateChanged</reimplementedby>
        <param>
          <type><ref refid="classOpenMM_1_1State_1a33046c06dbd6c93b71cc5d1448771933" kindref="member">State::DataType</ref></type>
          <declname>changed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This will be called by the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> when the user modifies aspects of the context state, such as positions, velocities, or parameters. This gives the <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> a chance to discard cached information. This is <emphasis>only</emphasis> called when the user modifies information using methods of the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> object. It is <emphasis>not</emphasis> called when a ForceImpl object modifies state information in its updateContextState() method (unless the ForceImpl calls a <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> method to perform the modification).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>changed</parametername>
</parameternamelist>
<parameterdescription>
<para>this specifies what aspect of the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> was changed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" line="132" column="18" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" bodystart="132" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1Integrator_1a0fd62d5846712eca58341556d48d991c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double OpenMM::Integrator::computeKineticEnergy</definition>
        <argsstring>()=0</argsstring>
        <name>computeKineticEnergy</name>
        <reimplementedby refid="classOpenMM_1_1BrownianIntegrator_1a9c718343c61594210dc81e0532224bdb">computeKineticEnergy</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1CompoundIntegrator_1a30694f0f3e73880a1b8fd8af3e5dcde2">computeKineticEnergy</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1CustomIntegrator_1acbf5f16ed43e6f4e74902e37a0c23d52">computeKineticEnergy</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1LangevinIntegrator_1a614f3018e913f959edb81cc697a9466d">computeKineticEnergy</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1LangevinMiddleIntegrator_1af43d350f6c1400a44ffaafa460234566">computeKineticEnergy</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1NoseHooverIntegrator_1a2bb504bd0a71aa9161fe11ec79e3b69b">computeKineticEnergy</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1VariableLangevinIntegrator_1aaf9ad349b92e739a7f6f8a7cb0d06348">computeKineticEnergy</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1VariableVerletIntegrator_1a20e34f6c2a25513363cc005acda2a843">computeKineticEnergy</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1VerletIntegrator_1ad0085c21ee68959f78d17de0b363c040">computeKineticEnergy</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the kinetic energy of the system at the current time. This may be different from simply mv<superscript>2</superscript>/2. For example, a leapfrog integrator will store velocities offset by half a step, but the kinetic energy should be computed at the current time, not delayed by half a step.</para>
<para>If <ref refid="classOpenMM_1_1Integrator_1ad61399ae80cda00231dd5d573cfd30e8" kindref="member">kineticEnergyRequiresForce()</ref> returns true, this method can assume that valid forces have already been computed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" line="142" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1Integrator_1ad61399ae80cda00231dd5d573cfd30e8" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool OpenMM::Integrator::kineticEnergyRequiresForce</definition>
        <argsstring>() const</argsstring>
        <name>kineticEnergyRequiresForce</name>
        <reimplementedby refid="classOpenMM_1_1BrownianIntegrator_1a12ab397590bfd23ecc4b858bb4e9f122">kineticEnergyRequiresForce</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1CustomIntegrator_1afd5e248f023845408c373f9740079a5e">kineticEnergyRequiresForce</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1LangevinMiddleIntegrator_1a1baa0e9943fff1580607a8742e15e6dd">kineticEnergyRequiresForce</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1NoseHooverIntegrator_1a408308ff61dd78676d857bc4ef2946db">kineticEnergyRequiresForce</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get whether <ref refid="classOpenMM_1_1Integrator_1a0fd62d5846712eca58341556d48d991c" kindref="member">computeKineticEnergy()</ref> expects forces to have been computed. The default implementation returns true to be safe. Non-leapfrog integrators can override this to return false, which makes calling getState() to query the energy less expensive. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" line="148" column="18" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" bodystart="148" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1Integrator_1a3a3874d3287e9e2ef4bd21dd2dd02d8a" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; <ref refid="classOpenMM_1_1Vec3" kindref="compound">Vec3</ref> &gt;</type>
        <definition>virtual std::vector&lt; Vec3 &gt; OpenMM::Integrator::getVelocitiesForTemperature</definition>
        <argsstring>(const System &amp;system, double temperature, int randomSeed) const</argsstring>
        <name>getVelocitiesForTemperature</name>
        <param>
          <type>const <ref refid="classOpenMM_1_1System" kindref="compound">System</ref> &amp;</type>
          <declname>system</declname>
        </param>
        <param>
          <type>double</type>
          <declname>temperature</declname>
        </param>
        <param>
          <type>int</type>
          <declname>randomSeed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a list of velocities normally distributed around a target temperature. This may be overridden by Drude integrators to ensure that Drude pairs have their center of mass velocity assigned as a single entity, rather than treating both particles as being independent.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>system</parametername>
</parameternamelist>
<parameterdescription>
<para>the system whose velocities are to be initialized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>temperature</parametername>
</parameternamelist>
<parameterdescription>
<para>the target temperature in Kelvin. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>randomSeed</parametername>
</parameternamelist>
<parameterdescription>
<para>the random number seed to use when selecting velocities </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" line="160" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1Integrator_1a1fc2b21fac0b7497399a499f24c2628f" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>virtual double OpenMM::Integrator::getVelocityTimeOffset</definition>
        <argsstring>() const</argsstring>
        <name>getVelocityTimeOffset</name>
        <reimplementedby refid="classOpenMM_1_1CompoundIntegrator_1a9b4c50611d590e1b0794474144dbd28e">getVelocityTimeOffset</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1LangevinIntegrator_1a40fd93cafa393ab78641c3cc46ff743e">getVelocityTimeOffset</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1LangevinMiddleIntegrator_1a269b3c9cffd53d118210eba89dd560da">getVelocityTimeOffset</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1VerletIntegrator_1a77de50358fafa3808504426fbc08b0ce">getVelocityTimeOffset</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the time interval by which velocities are offset from positions. This is used to adjust velocities when setVelocitiesToTemperature() is called on a <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" line="165" column="20" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" bodystart="165" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1Integrator_1a08d633ac9c6fbcbfc507ea8ff1fdf26a" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void OpenMM::Integrator::createCheckpoint</definition>
        <argsstring>(std::ostream &amp;stream) const</argsstring>
        <name>createCheckpoint</name>
        <reimplementedby refid="classOpenMM_1_1CompoundIntegrator_1af3c31f8730469c6b5bc86b5b6f524440">createCheckpoint</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1CustomIntegrator_1a33ae4b735eb3b0d8e6ec2c9352159737">createCheckpoint</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1NoseHooverIntegrator_1a8e9927f75e2a9ac6982d345a4639b4ae">createCheckpoint</reimplementedby>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is called while writing checkpoints. It gives the integrator a chance to write its own data. The default implementation does nothing. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" line="172" column="18" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" bodystart="172" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1Integrator_1a6928a443a3f4eb407e4a8e82d549683d" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void OpenMM::Integrator::loadCheckpoint</definition>
        <argsstring>(std::istream &amp;stream)</argsstring>
        <name>loadCheckpoint</name>
        <reimplementedby refid="classOpenMM_1_1CompoundIntegrator_1a1249d858fe4cda28bf179eb9fdd90ac8">loadCheckpoint</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1CustomIntegrator_1aa60b1e6712c1d2541de342b7a484b38c">loadCheckpoint</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1NoseHooverIntegrator_1a3bc2ef069fc3bdacfd2b635b5b6caa70">loadCheckpoint</reimplementedby>
        <param>
          <type>std::istream &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is called while loading a checkpoint. The integrator should read in whatever data it wrote in <ref refid="classOpenMM_1_1Integrator_1a08d633ac9c6fbcbfc507ea8ff1fdf26a" kindref="member">createCheckpoint()</ref> and update its internal state accordingly. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" line="178" column="18" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" bodystart="178" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1Integrator_1a38196dae74d6dea780076f44a10ed4aa" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void OpenMM::Integrator::serializeParameters</definition>
        <argsstring>(SerializationNode &amp;node) const</argsstring>
        <name>serializeParameters</name>
        <reimplementedby refid="classOpenMM_1_1CompoundIntegrator_1a5e3f818818363b689550f1d79fc67fa5">serializeParameters</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1CustomIntegrator_1ab2848625998710e30927955633ec235c">serializeParameters</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1NoseHooverIntegrator_1a11852a17d247d7614293ba0b20fef854">serializeParameters</reimplementedby>
        <param>
          <type>SerializationNode &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is called while creating a <ref refid="classOpenMM_1_1State" kindref="compound">State</ref>. The <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> should store the values of all time-varying parameters into the SerializationNode so they can be saved as part of the state. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" line="185" column="18" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" bodystart="185" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1Integrator_1a6ef56427b124e5e36cabfefc8c11ced4" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void OpenMM::Integrator::deserializeParameters</definition>
        <argsstring>(const SerializationNode &amp;node)</argsstring>
        <name>deserializeParameters</name>
        <reimplementedby refid="classOpenMM_1_1CompoundIntegrator_1a7167d400a076e6117ed15c65eeb68723">deserializeParameters</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1CustomIntegrator_1a17e5997bfb41fc3c838689703f0ac176">deserializeParameters</reimplementedby>
        <reimplementedby refid="classOpenMM_1_1NoseHooverIntegrator_1aee78ed56fe525adba436be11a00bc620">deserializeParameters</reimplementedby>
        <param>
          <type>const SerializationNode &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is called when loading a previously saved <ref refid="classOpenMM_1_1State" kindref="compound">State</ref>. The <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> should load the values of all time-varying parameters from the SerializationNode. If the node contains parameters that are not defined for this <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref>, it should throw an exception. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" line="193" column="18" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" bodystart="193" bodyend="194"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>An <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> defines a method for simulating a <ref refid="classOpenMM_1_1System" kindref="compound">System</ref> by integrating the equations of motion. This is an abstract class. Subclasses define particular integration methods.</para>
<para>Each <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> object is bound to a particular <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> which it integrates. This connection is specified by passing the <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> as an argument to the constructor of the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref>. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>OpenMM::BrownianIntegrator</label>
        <link refid="classOpenMM_1_1BrownianIntegrator"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>OpenMM::CompoundIntegrator</label>
        <link refid="classOpenMM_1_1CompoundIntegrator"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>OpenMM::CustomIntegrator</label>
        <link refid="classOpenMM_1_1CustomIntegrator"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>OpenMM::Integrator</label>
        <link refid="classOpenMM_1_1Integrator"/>
      </node>
      <node id="5">
        <label>OpenMM::LangevinIntegrator</label>
        <link refid="classOpenMM_1_1LangevinIntegrator"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>OpenMM::LangevinMiddleIntegrator</label>
        <link refid="classOpenMM_1_1LangevinMiddleIntegrator"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>OpenMM::NoseHooverIntegrator</label>
        <link refid="classOpenMM_1_1NoseHooverIntegrator"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>OpenMM::VariableLangevinIntegrator</label>
        <link refid="classOpenMM_1_1VariableLangevinIntegrator"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>OpenMM::VariableVerletIntegrator</label>
        <link refid="classOpenMM_1_1VariableVerletIntegrator"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>OpenMM::VerletIntegrator</label>
        <link refid="classOpenMM_1_1VerletIntegrator"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>OpenMM::Context</label>
        <link refid="classOpenMM_1_1Context"/>
      </node>
      <node id="1">
        <label>OpenMM::Integrator</label>
        <link refid="classOpenMM_1_1Integrator"/>
        <childnode refid="2" relation="usage">
          <edgelabel>owner</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" line="57" column="1" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/openmmapi/include/openmm/Integrator.h" bodystart="57" bodyend="198"/>
    <listofallmembers>
      <member refid="classOpenMM_1_1Integrator_1a204f42ff795b94be55d0c9ba32261af6" prot="protected" virt="virtual"><scope>OpenMM::Integrator</scope><name>cleanup</name></member>
      <member refid="classOpenMM_1_1Integrator_1a5ef1f609b97a8982c3d713a5629624f0" prot="protected" virt="non-virtual"><scope>OpenMM::Integrator</scope><name>CompoundIntegrator</name></member>
      <member refid="classOpenMM_1_1Integrator_1a0fd62d5846712eca58341556d48d991c" prot="protected" virt="pure-virtual"><scope>OpenMM::Integrator</scope><name>computeKineticEnergy</name></member>
      <member refid="classOpenMM_1_1Integrator_1ac30d9b040938d0be1eedfc6e7484c204" prot="private" virt="non-virtual"><scope>OpenMM::Integrator</scope><name>constraintTol</name></member>
      <member refid="classOpenMM_1_1Integrator_1ac9c1c07848ae2c2e8617a949a11070c1" prot="protected" virt="non-virtual"><scope>OpenMM::Integrator</scope><name>context</name></member>
      <member refid="classOpenMM_1_1Integrator_1ac26c806e60ca4a0547680edb68f6e39b" prot="protected" virt="non-virtual"><scope>OpenMM::Integrator</scope><name>Context</name></member>
      <member refid="classOpenMM_1_1Integrator_1a7e2f3e20ff3f49ee3b9c0e529422b663" prot="protected" virt="non-virtual"><scope>OpenMM::Integrator</scope><name>ContextImpl</name></member>
      <member refid="classOpenMM_1_1Integrator_1a08d633ac9c6fbcbfc507ea8ff1fdf26a" prot="protected" virt="virtual"><scope>OpenMM::Integrator</scope><name>createCheckpoint</name></member>
      <member refid="classOpenMM_1_1Integrator_1a6ef56427b124e5e36cabfefc8c11ced4" prot="protected" virt="virtual"><scope>OpenMM::Integrator</scope><name>deserializeParameters</name></member>
      <member refid="classOpenMM_1_1Integrator_1a1208d82fd0a14f327a9f70436930f323" prot="private" virt="non-virtual"><scope>OpenMM::Integrator</scope><name>forceGroups</name></member>
      <member refid="classOpenMM_1_1Integrator_1af742feb7b5b9adfcb259bf2dbc9319c4" prot="public" virt="virtual"><scope>OpenMM::Integrator</scope><name>getConstraintTolerance</name></member>
      <member refid="classOpenMM_1_1Integrator_1a38c94f952b4fcab36371402e508eacf1" prot="public" virt="virtual"><scope>OpenMM::Integrator</scope><name>getIntegrationForceGroups</name></member>
      <member refid="classOpenMM_1_1Integrator_1a8f89d06e97e930a35c0c7825f80ea9c9" prot="protected" virt="pure-virtual"><scope>OpenMM::Integrator</scope><name>getKernelNames</name></member>
      <member refid="classOpenMM_1_1Integrator_1a880821318aee5b25b02f0929887825c1" prot="public" virt="virtual"><scope>OpenMM::Integrator</scope><name>getStepSize</name></member>
      <member refid="classOpenMM_1_1Integrator_1a3a3874d3287e9e2ef4bd21dd2dd02d8a" prot="protected" virt="virtual"><scope>OpenMM::Integrator</scope><name>getVelocitiesForTemperature</name></member>
      <member refid="classOpenMM_1_1Integrator_1a1fc2b21fac0b7497399a499f24c2628f" prot="protected" virt="virtual"><scope>OpenMM::Integrator</scope><name>getVelocityTimeOffset</name></member>
      <member refid="classOpenMM_1_1Integrator_1a6a2b5bcc61b799be0a37b4a431bdcd7d" prot="protected" virt="pure-virtual"><scope>OpenMM::Integrator</scope><name>initialize</name></member>
      <member refid="classOpenMM_1_1Integrator_1a2732506bfb2afd8e2e9954d08cab1304" prot="public" virt="non-virtual"><scope>OpenMM::Integrator</scope><name>Integrator</name></member>
      <member refid="classOpenMM_1_1Integrator_1ad61399ae80cda00231dd5d573cfd30e8" prot="protected" virt="virtual"><scope>OpenMM::Integrator</scope><name>kineticEnergyRequiresForce</name></member>
      <member refid="classOpenMM_1_1Integrator_1a6928a443a3f4eb407e4a8e82d549683d" prot="protected" virt="virtual"><scope>OpenMM::Integrator</scope><name>loadCheckpoint</name></member>
      <member refid="classOpenMM_1_1Integrator_1ab3f6088553343feb8f47ab789e7a09a1" prot="protected" virt="non-virtual"><scope>OpenMM::Integrator</scope><name>owner</name></member>
      <member refid="classOpenMM_1_1Integrator_1a38196dae74d6dea780076f44a10ed4aa" prot="protected" virt="virtual"><scope>OpenMM::Integrator</scope><name>serializeParameters</name></member>
      <member refid="classOpenMM_1_1Integrator_1a47f81ac027670bcad6050c72cc41bd67" prot="public" virt="virtual"><scope>OpenMM::Integrator</scope><name>setConstraintTolerance</name></member>
      <member refid="classOpenMM_1_1Integrator_1a22b42a4a502c999d87e6bbd3f444eab4" prot="public" virt="virtual"><scope>OpenMM::Integrator</scope><name>setIntegrationForceGroups</name></member>
      <member refid="classOpenMM_1_1Integrator_1a86ef00f4e3abb9e3e325e3c4ebe5ead1" prot="public" virt="virtual"><scope>OpenMM::Integrator</scope><name>setStepSize</name></member>
      <member refid="classOpenMM_1_1Integrator_1aa41aa4c012de261afa5dda15af4fb721" prot="protected" virt="virtual"><scope>OpenMM::Integrator</scope><name>stateChanged</name></member>
      <member refid="classOpenMM_1_1Integrator_1a55151232664ae778eb2f0e2e8bbe7b67" prot="public" virt="pure-virtual"><scope>OpenMM::Integrator</scope><name>step</name></member>
      <member refid="classOpenMM_1_1Integrator_1a33185045e1fcb1186e413d182f28e461" prot="private" virt="non-virtual"><scope>OpenMM::Integrator</scope><name>stepSize</name></member>
      <member refid="classOpenMM_1_1Integrator_1a9abbef84d9e2c4e5a3d3139f8fa84fff" prot="public" virt="virtual"><scope>OpenMM::Integrator</scope><name>~Integrator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
