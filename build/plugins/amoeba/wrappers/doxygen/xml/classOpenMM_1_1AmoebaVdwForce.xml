<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classOpenMM_1_1AmoebaVdwForce" kind="class" language="C++" prot="public">
    <compoundname>OpenMM::AmoebaVdwForce</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Force</basecompoundref>
    <includes refid="AmoebaVdwForce_8h" local="no">AmoebaVdwForce.h</includes>
    <innerclass refid="classOpenMM_1_1AmoebaVdwForce_1_1ParticleTypeInfo" prot="private">OpenMM::AmoebaVdwForce::ParticleTypeInfo</innerclass>
    <innerclass refid="classOpenMM_1_1AmoebaVdwForce_1_1TypePairInfo" prot="private">OpenMM::AmoebaVdwForce::TypePairInfo</innerclass>
    <innerclass refid="classOpenMM_1_1AmoebaVdwForce_1_1VdwInfo" prot="private">OpenMM::AmoebaVdwForce::VdwInfo</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classOpenMM_1_1AmoebaVdwForce_1a6014194eb71944af9df786d851fee784" prot="public" static="no" strong="no">
        <type></type>
        <name>NonbondedMethod</name>
        <enumvalue id="classOpenMM_1_1AmoebaVdwForce_1a6014194eb71944af9df786d851fee784af158fd40c7f4259986935f6f332554c4" prot="public">
          <name>NoCutoff</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>No cutoff is applied to nonbonded interactions. The full set of N^2 interactions is computed exactly. This necessarily means that periodic boundary conditions cannot be used. This is the default. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOpenMM_1_1AmoebaVdwForce_1a6014194eb71944af9df786d851fee784a5452c300301ed92b4aadef4ffc5c482e" prot="public">
          <name>CutoffPeriodic</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Periodic boundary conditions are used, so that each particle interacts only with the nearest periodic copy of each other particle. Interactions beyond the cutoff distance are ignored. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an enumeration of the different methods that may be used for handling long range nonbonded forces. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="95" column="5" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" bodystart="95" bodyend="106"/>
      </memberdef>
      <memberdef kind="enum" id="classOpenMM_1_1AmoebaVdwForce_1aa5576892f183092e51f6cfce684e661b" prot="public" static="no" strong="no">
        <type></type>
        <name>PotentialFunction</name>
        <enumvalue id="classOpenMM_1_1AmoebaVdwForce_1aa5576892f183092e51f6cfce684e661ba5134e3e7d1bbc60cbc27cd330b67b9b4" prot="public">
          <name>Buffered147</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Use a buffered 14-7 potential. This is the default. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOpenMM_1_1AmoebaVdwForce_1aa5576892f183092e51f6cfce684e661ba4599d4ba380a4d9077e1bbcff9cc7314" prot="public">
          <name>LennardJones</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Use a Lennard-Jones 12-6 potential. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an enumeration of the different potential functions that can be used. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="111" column="5" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" bodystart="111" bodyend="120"/>
      </memberdef>
      <memberdef kind="enum" id="classOpenMM_1_1AmoebaVdwForce_1a8507c77112ff3565e3a5fbf94f721e87" prot="public" static="no" strong="no">
        <type></type>
        <name>AlchemicalMethod</name>
        <enumvalue id="classOpenMM_1_1AmoebaVdwForce_1a8507c77112ff3565e3a5fbf94f721e87a0451b087840b68213f84e367f97c7e10" prot="public">
          <name>None</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>All vdW interactions are treated normally. This is the default. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOpenMM_1_1AmoebaVdwForce_1a8507c77112ff3565e3a5fbf94f721e87ac2f8d213968d3b067bcaeb4f8536dc7c" prot="public">
          <name>Decouple</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Maintain full strength vdW interactions between two alchemical particles. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOpenMM_1_1AmoebaVdwForce_1a8507c77112ff3565e3a5fbf94f721e87a3a4819cf7ed9026354479661429b7522" prot="public">
          <name>Annihilate</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interactions between two alchemical particles are turned off at lambda=0. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an enumeration of the different alchemical methods used when applying softcore interactions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="125" column="5" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" bodystart="125" bodyend="138"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classOpenMM_1_1AmoebaVdwForce_1a94b0721e9520c4d1af4e1b06feb24d07" prot="private" static="no" mutable="no">
        <type><ref refid="classOpenMM_1_1AmoebaVdwForce_1a6014194eb71944af9df786d851fee784" kindref="member">NonbondedMethod</ref></type>
        <definition>NonbondedMethod OpenMM::AmoebaVdwForce::nonbondedMethod</definition>
        <argsstring></argsstring>
        <name>nonbondedMethod</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="468" column="21" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" bodystart="467" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1AmoebaVdwForce_1a834ed8c8a51fd9551fd274190103ad78" prot="private" static="no" mutable="no">
        <type><ref refid="classOpenMM_1_1AmoebaVdwForce_1aa5576892f183092e51f6cfce684e661b" kindref="member">PotentialFunction</ref></type>
        <definition>PotentialFunction OpenMM::AmoebaVdwForce::potentialFunction</definition>
        <argsstring></argsstring>
        <name>potentialFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="469" column="23" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" bodystart="469" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1AmoebaVdwForce_1a0bda6cb8450783767556d7340f1d4fe3" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double OpenMM::AmoebaVdwForce::cutoff</definition>
        <argsstring></argsstring>
        <name>cutoff</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="470" column="12" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" bodystart="470" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1AmoebaVdwForce_1a9f49a8ddc512fbd7d01340532c3ade53" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool OpenMM::AmoebaVdwForce::useDispersionCorrection</definition>
        <argsstring></argsstring>
        <name>useDispersionCorrection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="471" column="10" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" bodystart="471" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1AmoebaVdwForce_1a54394b0094221e5b70190fbb0eb4996b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool OpenMM::AmoebaVdwForce::useTypes</definition>
        <argsstring></argsstring>
        <name>useTypes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="471" column="34" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" bodystart="471" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1AmoebaVdwForce_1a18b172683931c75077868bb54135cfe7" prot="private" static="no" mutable="no">
        <type><ref refid="classOpenMM_1_1AmoebaVdwForce_1a8507c77112ff3565e3a5fbf94f721e87" kindref="member">AlchemicalMethod</ref></type>
        <definition>AlchemicalMethod OpenMM::AmoebaVdwForce::alchemicalMethod</definition>
        <argsstring></argsstring>
        <name>alchemicalMethod</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="472" column="22" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" bodystart="472" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1AmoebaVdwForce_1a21c50eca6eeb544c8faee08ea06942cc" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int OpenMM::AmoebaVdwForce::n</definition>
        <argsstring></argsstring>
        <name>n</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="473" column="9" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" bodystart="473" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1AmoebaVdwForce_1ac3983e656390a4427842d390d7d987fb" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double OpenMM::AmoebaVdwForce::alpha</definition>
        <argsstring></argsstring>
        <name>alpha</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="474" column="12" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" bodystart="474" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1AmoebaVdwForce_1a79ca2c83079f45aeb4268e4f479aa517" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string OpenMM::AmoebaVdwForce::sigmaCombiningRule</definition>
        <argsstring></argsstring>
        <name>sigmaCombiningRule</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="476" column="17" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" bodystart="476" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1AmoebaVdwForce_1ac73b61944ed2f07cc0a23eaf382505bc" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string OpenMM::AmoebaVdwForce::epsilonCombiningRule</definition>
        <argsstring></argsstring>
        <name>epsilonCombiningRule</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="477" column="17" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" bodystart="477" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1AmoebaVdwForce_1a9e45813d22cd5c4c654fbc797d577df1" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; int &gt; &gt;</type>
        <definition>std::vector&lt; std::vector&lt;int&gt; &gt; OpenMM::AmoebaVdwForce::exclusions</definition>
        <argsstring></argsstring>
        <name>exclusions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="479" column="17" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" bodystart="479" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1AmoebaVdwForce_1a28bc461608687c8e7a39739fb2873cb6" prot="private" static="no" mutable="no">
        <type>std::vector&lt; VdwInfo &gt;</type>
        <definition>std::vector&lt;VdwInfo&gt; OpenMM::AmoebaVdwForce::parameters</definition>
        <argsstring></argsstring>
        <name>parameters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="480" column="17" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" bodystart="480" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1AmoebaVdwForce_1a0b7425899e38e68c1e911d3a826d996a" prot="private" static="no" mutable="no">
        <type>std::vector&lt; ParticleTypeInfo &gt;</type>
        <definition>std::vector&lt;ParticleTypeInfo&gt; OpenMM::AmoebaVdwForce::types</definition>
        <argsstring></argsstring>
        <name>types</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="481" column="17" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" bodystart="481" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1AmoebaVdwForce_1a5abe4d06cc314c7ee6c85b70dd912fa1" prot="private" static="no" mutable="no">
        <type>std::vector&lt; TypePairInfo &gt;</type>
        <definition>std::vector&lt;TypePairInfo&gt; OpenMM::AmoebaVdwForce::pairs</definition>
        <argsstring></argsstring>
        <name>pairs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="482" column="17" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" bodystart="482" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1a05b7adc7a339f5e85825dcb25aee0634" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>static const std::string &amp; OpenMM::AmoebaVdwForce::Lambda</definition>
        <argsstring>()</argsstring>
        <name>Lambda</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is the name of the parameter which stores the current Amoeba vdW lambda value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="87" column="30" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" bodystart="87" bodyend="90"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1ab9906e8565d4453c833be8336f40fcc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OpenMM::AmoebaVdwForce::AmoebaVdwForce</definition>
        <argsstring>()</argsstring>
        <name>AmoebaVdwForce</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an Amoeba VdwForce. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="143" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1a85c50fecb1ebf481dff7390f125b70cb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::AmoebaVdwForce::getNumParticles</definition>
        <argsstring>() const</argsstring>
        <name>getNumParticles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of particles </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="148" column="9" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" bodystart="148" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1a1864d393e44aa1d6f2f4b4b64088a373" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::AmoebaVdwForce::getNumParticleTypes</definition>
        <argsstring>() const</argsstring>
        <name>getNumParticleTypes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of particle types. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="155" column="9" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" bodystart="155" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1ab32101d10973528167a77a782e147319" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::AmoebaVdwForce::getNumTypePairs</definition>
        <argsstring>() const</argsstring>
        <name>getNumTypePairs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of type pairs. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="162" column="9" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" bodystart="162" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1a93f9ae4652f984ef3a4e1af516c1aa0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::AmoebaVdwForce::setParticleParameters</definition>
        <argsstring>(int particleIndex, int parentIndex, double sigma, double epsilon, double reductionFactor, bool isAlchemical=false, int typeIndex=-1)</argsstring>
        <name>setParticleParameters</name>
        <param>
          <type>int</type>
          <declname>particleIndex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>parentIndex</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sigma</declname>
        </param>
        <param>
          <type>double</type>
          <declname>epsilon</declname>
        </param>
        <param>
          <type>double</type>
          <declname>reductionFactor</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isAlchemical</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>int</type>
          <declname>typeIndex</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the force field parameters for a vdw particle.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>particleIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the particle index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parentIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the parent particle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sigma</parametername>
</parameternamelist>
<parameterdescription>
<para>vdw sigma </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>epsilon</parametername>
</parameternamelist>
<parameterdescription>
<para>vdw epsilon </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reductionFactor</parametername>
</parameternamelist>
<parameterdescription>
<para>the fraction of the distance along the line from the parent particle to this particle at which the interaction site should be placed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>isAlchemical</parametername>
</parameternamelist>
<parameterdescription>
<para>if true, this vdW particle is undergoing an alchemical change. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>typeIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the particle type for this particle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="178" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1a62015741de0503181b4798547d521f54" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::AmoebaVdwForce::getParticleParameters</definition>
        <argsstring>(int particleIndex, int &amp;parentIndex, double &amp;sigma, double &amp;epsilon, double &amp;reductionFactor, bool &amp;isAlchemical, int &amp;typeIndex) const</argsstring>
        <name>getParticleParameters</name>
        <param>
          <type>int</type>
          <declname>particleIndex</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>parentIndex</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>sigma</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>epsilon</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>reductionFactor</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>isAlchemical</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>typeIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the force field parameters for a vdw particle.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>particleIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the particle index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">parentIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the parent particle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">sigma</parametername>
</parameternamelist>
<parameterdescription>
<para>vdw sigma </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">epsilon</parametername>
</parameternamelist>
<parameterdescription>
<para>vdw epsilon </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">reductionFactor</parametername>
</parameternamelist>
<parameterdescription>
<para>the fraction of the distance along the line from the parent particle to this particle at which the interaction site should be placed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">isAlchemical</parametername>
</parameternamelist>
<parameterdescription>
<para>if true, this vdW particle is undergoing an alchemical change. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">typeIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the particle type for this particle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="193" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1a27374ecc742dba394181f2e7d9b0f288" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::AmoebaVdwForce::addParticle</definition>
        <argsstring>(int parentIndex, double sigma, double epsilon, double reductionFactor, bool isAlchemical=false)</argsstring>
        <name>addParticle</name>
        <param>
          <type>int</type>
          <declname>parentIndex</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sigma</declname>
        </param>
        <param>
          <type>double</type>
          <declname>epsilon</declname>
        </param>
        <param>
          <type>double</type>
          <declname>reductionFactor</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isAlchemical</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add the force field parameters for a vdw particle. This version is used when parameters are defined for each particle.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parentIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the parent particle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sigma</parametername>
</parameternamelist>
<parameterdescription>
<para>vdw sigma </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>epsilon</parametername>
</parameternamelist>
<parameterdescription>
<para>vdw epsilon </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reductionFactor</parametername>
</parameternamelist>
<parameterdescription>
<para>the fraction of the distance along the line from the parent particle to this particle at which the interaction site should be placed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>isAlchemical</parametername>
</parameternamelist>
<parameterdescription>
<para>if true, this vdW particle is undergoing an alchemical change. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>index of added particle </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="208" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1a5c66b99182e9bcd2abec146217007874" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::AmoebaVdwForce::addParticle</definition>
        <argsstring>(int parentIndex, int typeIndex, double reductionFactor, bool isAlchemical=false)</argsstring>
        <name>addParticle</name>
        <param>
          <type>int</type>
          <declname>parentIndex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>typeIndex</declname>
        </param>
        <param>
          <type>double</type>
          <declname>reductionFactor</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isAlchemical</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add the force field parameters for a vdw particle. This version is used when parameters are defined by particle type.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parentIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the parent particle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>typeIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the particle type for this particle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reductionFactor</parametername>
</parameternamelist>
<parameterdescription>
<para>the fraction of the distance along the line from the parent particle to this particle at which the interaction site should be placed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>isAlchemical</parametername>
</parameternamelist>
<parameterdescription>
<para>if true, this vdW particle is undergoing an alchemical change. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>index of added particle </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="221" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1a5fd29972538c6cefe5aa2c4996e819e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::AmoebaVdwForce::addParticleType</definition>
        <argsstring>(double sigma, double epsilon)</argsstring>
        <name>addParticleType</name>
        <param>
          <type>double</type>
          <declname>sigma</declname>
        </param>
        <param>
          <type>double</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a particle type.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sigma</parametername>
</parameternamelist>
<parameterdescription>
<para>the sigma value for particles of this type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>epsilon</parametername>
</parameternamelist>
<parameterdescription>
<para>the epsilon value for particles of this type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the index of the particle type that was just added. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="230" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1a750aa76a7fc21bd20360c41a51acddc1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::AmoebaVdwForce::getParticleTypeParameters</definition>
        <argsstring>(int typeIndex, double &amp;sigma, double &amp;epsilon) const</argsstring>
        <name>getParticleTypeParameters</name>
        <param>
          <type>int</type>
          <declname>typeIndex</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>sigma</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the force field parameters for a particle type.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>typeIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the particle type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">sigma</parametername>
</parameternamelist>
<parameterdescription>
<para>the sigma value for particles of this type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">epsilon</parametername>
</parameternamelist>
<parameterdescription>
<para>the epsilon value for particles of this type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="239" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1a7eb22b8c9d080a4213762ca42456ce93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::AmoebaVdwForce::setParticleTypeParameters</definition>
        <argsstring>(int typeIndex, double sigma, double epsilon)</argsstring>
        <name>setParticleTypeParameters</name>
        <param>
          <type>int</type>
          <declname>typeIndex</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sigma</declname>
        </param>
        <param>
          <type>double</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the force field parameters for a particle type.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>typeIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the particle type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sigma</parametername>
</parameternamelist>
<parameterdescription>
<para>the sigma value for particles of this type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>epsilon</parametername>
</parameternamelist>
<parameterdescription>
<para>the epsilon value for particles of this type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="248" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1aac6f8899f5ffe553373c8b8dce1ce706" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::AmoebaVdwForce::addTypePair</definition>
        <argsstring>(int type1, int type2, double sigma, double epsilon)</argsstring>
        <name>addTypePair</name>
        <param>
          <type>int</type>
          <declname>type1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sigma</declname>
        </param>
        <param>
          <type>double</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a type pair. This overrides the standard combining rule for interactions between particles of two particular types.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type1</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the first particle type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type2</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the second particle type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sigma</parametername>
</parameternamelist>
<parameterdescription>
<para>the sigma value for interactions between particles of these two types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>epsilon</parametername>
</parameternamelist>
<parameterdescription>
<para>the epsilon value for interactions between particles of these two types </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the index of the type pair that was just added. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="260" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1a1e0971ae1051c1f3ddd3bf783377accf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::AmoebaVdwForce::getTypePairParameters</definition>
        <argsstring>(int pairIndex, int &amp;type1, int &amp;type2, double &amp;sigma, double &amp;epsilon) const</argsstring>
        <name>getTypePairParameters</name>
        <param>
          <type>int</type>
          <declname>pairIndex</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>type1</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>type2</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>sigma</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the force field parameters for a type pair. This overrides the standard combining rule for interactions between particles of two particular types.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pairIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the type pair </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">type1</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the first particle type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">type2</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the second particle type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">sigma</parametername>
</parameternamelist>
<parameterdescription>
<para>the sigma value for interactions between particles of these two types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">epsilon</parametername>
</parameternamelist>
<parameterdescription>
<para>the epsilon value for interactions between particles of these two types </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="272" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1a1fcce9d9dfe567d4f9e299c66b7b3432" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::AmoebaVdwForce::setTypePairParameters</definition>
        <argsstring>(int pairIndex, int type1, int type2, double sigma, double epsilon)</argsstring>
        <name>setTypePairParameters</name>
        <param>
          <type>int</type>
          <declname>pairIndex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sigma</declname>
        </param>
        <param>
          <type>double</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the force field parameters for a type pair. This overrides the standard combining rule for interactions between particles of two particular types.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pairIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the type pair </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type1</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the first particle type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type2</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the second particle type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sigma</parametername>
</parameternamelist>
<parameterdescription>
<para>the sigma value for interactions between particles of these two types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>epsilon</parametername>
</parameternamelist>
<parameterdescription>
<para>the epsilon value for interactions between particles of these two types </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="284" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1a34461e53b5d58aa6683db0d835a0555f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::AmoebaVdwForce::setSigmaCombiningRule</definition>
        <argsstring>(const std::string &amp;sigmaCombiningRule)</argsstring>
        <name>setSigmaCombiningRule</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>sigmaCombiningRule</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set sigma combining rule</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sigmaCombiningRule</parametername>
</parameternamelist>
<parameterdescription>
<para>sigma combining rule: &apos;ARITHMETIC&apos;, &apos;GEOMETRIC&apos;. &apos;CUBIC-MEAN&apos; </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="291" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1acc1a446c206d165c2dbbe44e47dd2f99" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; OpenMM::AmoebaVdwForce::getSigmaCombiningRule</definition>
        <argsstring>(void) const</argsstring>
        <name>getSigmaCombiningRule</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get sigma combining rule</para>
<para><simplesect kind="return"><para>sigmaCombiningRule sigma combining rule: &apos;ARITHMETIC&apos;, &apos;GEOMETRIC&apos;. &apos;CUBIC-MEAN&apos; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="298" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1a7012c6ca0daee6d4524376c7a48a7034" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::AmoebaVdwForce::setEpsilonCombiningRule</definition>
        <argsstring>(const std::string &amp;epsilonCombiningRule)</argsstring>
        <name>setEpsilonCombiningRule</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>epsilonCombiningRule</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set epsilon combining rule</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>epsilonCombiningRule</parametername>
</parameternamelist>
<parameterdescription>
<para>epsilon combining rule: &apos;ARITHMETIC&apos;, &apos;GEOMETRIC&apos;. &apos;HARMONIC&apos;, &apos;W-H&apos;, &apos;HHG&apos; </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="305" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1a5a9a500b96f2055d4613e2901e5bd470" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; OpenMM::AmoebaVdwForce::getEpsilonCombiningRule</definition>
        <argsstring>(void) const</argsstring>
        <name>getEpsilonCombiningRule</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get epsilon combining rule</para>
<para><simplesect kind="return"><para>epsilonCombiningRule epsilon combining rule: &apos;ARITHMETIC&apos;, &apos;GEOMETRIC&apos;. &apos;HARMONIC&apos;, &apos;W-H&apos;, &apos;HHG&apos; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="312" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1a6fb91300a1051efe46a052b688416fd8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool OpenMM::AmoebaVdwForce::getUseDispersionCorrection</definition>
        <argsstring>() const</argsstring>
        <name>getUseDispersionCorrection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get whether to add a contribution to the energy that approximately represents the effect of VdW interactions beyond the cutoff distance. The energy depends on the volume of the periodic box, and is only applicable when periodic boundary conditions are used. When running simulations at constant pressure, adding this contribution can improve the quality of results. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="320" column="10" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" bodystart="320" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1a9daa398e967a7820e510c6ba6d1cb3cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::AmoebaVdwForce::setUseDispersionCorrection</definition>
        <argsstring>(bool useCorrection)</argsstring>
        <name>setUseDispersionCorrection</name>
        <param>
          <type>bool</type>
          <declname>useCorrection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set whether to add a contribution to the energy that approximately represents the effect of VdW interactions beyond the cutoff distance. The energy depends on the volume of the periodic box, and is only applicable when periodic boundary conditions are used. When running simulations at constant pressure, adding this contribution can improve the quality of results. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="330" column="10" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" bodystart="330" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1a8f90bf64aa37571ab73b9f2ee5eed9c9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool OpenMM::AmoebaVdwForce::getUseParticleTypes</definition>
        <argsstring>() const</argsstring>
        <name>getUseParticleTypes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get whether parameters were specified by particle or by particle type. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="337" column="10" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" bodystart="337" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1ab9e53dc63979072c07983e1d2fa7b5e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::AmoebaVdwForce::setParticleExclusions</definition>
        <argsstring>(int particleIndex, const std::vector&lt; int &gt; &amp;exclusions)</argsstring>
        <name>setParticleExclusions</name>
        <param>
          <type>int</type>
          <declname>particleIndex</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>exclusions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set exclusions for specified particle</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>particleIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>particle index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exclusions</parametername>
</parameternamelist>
<parameterdescription>
<para>vector of exclusions </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="347" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1a9fa718dbca61ed85e88c54dd1906956a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::AmoebaVdwForce::getParticleExclusions</definition>
        <argsstring>(int particleIndex, std::vector&lt; int &gt; &amp;exclusions) const</argsstring>
        <name>getParticleExclusions</name>
        <param>
          <type>int</type>
          <declname>particleIndex</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt; &amp;</type>
          <declname>exclusions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get exclusions for specified particle</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>particleIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>particle index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">exclusions</parametername>
</parameternamelist>
<parameterdescription>
<para>vector of exclusions </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="355" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1a3c90a82f0a325d2752b4ea1cde62248d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double OpenMM::AmoebaVdwForce::getCutoffDistance</definition>
        <argsstring>() const</argsstring>
        <name>getCutoffDistance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the cutoff distance (in nm) being used for nonbonded interactions. If the NonbondedMethod in use is NoCutoff, this value will have no effect.</para>
<para><simplesect kind="return"><para>the cutoff distance, measured in nm </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="364" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1a9fc76ac10eec5d6af25875570607424e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::AmoebaVdwForce::setCutoffDistance</definition>
        <argsstring>(double distance)</argsstring>
        <name>setCutoffDistance</name>
        <param>
          <type>double</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the cutoff distance (in nm) being used for nonbonded interactions. If the NonbondedMethod in use is NoCutoff, this value will have no effect.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>distance</parametername>
</parameternamelist>
<parameterdescription>
<para>the cutoff distance, measured in nm </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="372" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1a876e5171181c90bf87e27d6a5cf0f4d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::AmoebaVdwForce::setCutoff</definition>
        <argsstring>(double cutoff)</argsstring>
        <name>setCutoff</name>
        <param>
          <type>double</type>
          <declname>cutoff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the cutoff distance.</para>
<para><xrefsect id="deprecated_1_deprecated000005"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This method exists only for backward compatibility. Use <ref refid="classOpenMM_1_1AmoebaVdwForce_1a9fc76ac10eec5d6af25875570607424e" kindref="member">setCutoffDistance()</ref> instead. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="379" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1adc650cce34c372766e0f3dc8a3cbd7b1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double OpenMM::AmoebaVdwForce::getCutoff</definition>
        <argsstring>() const</argsstring>
        <name>getCutoff</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the cutoff distance.</para>
<para><xrefsect id="deprecated_1_deprecated000006"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This method exists only for backward compatibility. Use <ref refid="classOpenMM_1_1AmoebaVdwForce_1a3c90a82f0a325d2752b4ea1cde62248d" kindref="member">getCutoffDistance()</ref> instead. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="386" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1af8b0417b300cc2e3a387f46adac66a17" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classOpenMM_1_1AmoebaVdwForce_1a6014194eb71944af9df786d851fee784" kindref="member">NonbondedMethod</ref></type>
        <definition>NonbondedMethod OpenMM::AmoebaVdwForce::getNonbondedMethod</definition>
        <argsstring>() const</argsstring>
        <name>getNonbondedMethod</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the method used for handling long range nonbonded interactions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="391" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1a51bccd7cedbfdcb3677acbd7c8ffd89e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::AmoebaVdwForce::setNonbondedMethod</definition>
        <argsstring>(NonbondedMethod method)</argsstring>
        <name>setNonbondedMethod</name>
        <param>
          <type><ref refid="classOpenMM_1_1AmoebaVdwForce_1a6014194eb71944af9df786d851fee784" kindref="member">NonbondedMethod</ref></type>
          <declname>method</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the method used for handling long range nonbonded interactions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="396" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1abd0e62fdae1a2bf3447ac261ff08f892" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classOpenMM_1_1AmoebaVdwForce_1aa5576892f183092e51f6cfce684e661b" kindref="member">PotentialFunction</ref></type>
        <definition>PotentialFunction OpenMM::AmoebaVdwForce::getPotentialFunction</definition>
        <argsstring>() const</argsstring>
        <name>getPotentialFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the potential function to use. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="401" column="23" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" bodystart="401" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1af7aa2aaddeaf3fd5bdd6b7829d69dde1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::AmoebaVdwForce::setPotentialFunction</definition>
        <argsstring>(PotentialFunction potential)</argsstring>
        <name>setPotentialFunction</name>
        <param>
          <type><ref refid="classOpenMM_1_1AmoebaVdwForce_1aa5576892f183092e51f6cfce684e661b" kindref="member">PotentialFunction</ref></type>
          <declname>potential</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the potential function to use. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="408" column="10" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" bodystart="408" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1a523bae76a04f22e82fbe2c2d2b6ef965" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::AmoebaVdwForce::setSoftcorePower</definition>
        <argsstring>(int n)</argsstring>
        <name>setSoftcorePower</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the softcore power on lambda (default = 5). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="415" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1adba502fded8c5f9351d0bbf426834708" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int OpenMM::AmoebaVdwForce::getSoftcorePower</definition>
        <argsstring>() const</argsstring>
        <name>getSoftcorePower</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the softcore power on lambda. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="420" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1aa2f914cf762f79280d1491a465d1dcb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::AmoebaVdwForce::setSoftcoreAlpha</definition>
        <argsstring>(double alpha)</argsstring>
        <name>setSoftcoreAlpha</name>
        <param>
          <type>double</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the softcore alpha value (default = 0.7). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="425" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1a665d632267c13605b9cb86e90da0e8fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double OpenMM::AmoebaVdwForce::getSoftcoreAlpha</definition>
        <argsstring>() const</argsstring>
        <name>getSoftcoreAlpha</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the softcore alpha value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="430" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1afa15364cd10ed0c5e8ad4699f7b2ae76" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classOpenMM_1_1AmoebaVdwForce_1a8507c77112ff3565e3a5fbf94f721e87" kindref="member">AlchemicalMethod</ref></type>
        <definition>AlchemicalMethod OpenMM::AmoebaVdwForce::getAlchemicalMethod</definition>
        <argsstring>() const</argsstring>
        <name>getAlchemicalMethod</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the method used for alchemical interactions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="435" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1a3d7eefc2d31005bd6fb21f05a57c70de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::AmoebaVdwForce::setAlchemicalMethod</definition>
        <argsstring>(AlchemicalMethod method)</argsstring>
        <name>setAlchemicalMethod</name>
        <param>
          <type><ref refid="classOpenMM_1_1AmoebaVdwForce_1a8507c77112ff3565e3a5fbf94f721e87" kindref="member">AlchemicalMethod</ref></type>
          <declname>method</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the method used for handling long range nonbonded interactions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="440" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1a0cd71dacceca0684ffc77211edb53971" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::AmoebaVdwForce::updateParametersInContext</definition>
        <argsstring>(Context &amp;context)</argsstring>
        <name>updateParametersInContext</name>
        <param>
          <type>Context &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update the per-particle parameters in a Context to match those stored in this Force object. This method provides an efficient method to update certain parameters in an existing Context without needing to reinitialize it. Simply call <ref refid="classOpenMM_1_1AmoebaVdwForce_1a93f9ae4652f984ef3a4e1af516c1aa0a" kindref="member">setParticleParameters()</ref> to modify this object&apos;s parameters, then call <ref refid="classOpenMM_1_1AmoebaVdwForce_1a0cd71dacceca0684ffc77211edb53971" kindref="member">updateParametersInContext()</ref> to copy them over to the Context.</para>
<para>The only information this method updates is the values of per-particle parameters. All other aspects of the Force (the nonbonded method, the cutoff distance, etc.) are unaffected and can only be changed by reinitializing the Context. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="451" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1a563565a035b414e2acce99019c04ea2c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool OpenMM::AmoebaVdwForce::usesPeriodicBoundaryConditions</definition>
        <argsstring>() const</argsstring>
        <name>usesPeriodicBoundaryConditions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns whether or not this force makes use of periodic boundary conditions.</para>
<para><simplesect kind="return"><para>true if nonbondedMethod uses PBC and false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="458" column="10" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" bodystart="458" bodyend="460"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classOpenMM_1_1AmoebaVdwForce_1ae5c4411c0dbc2dc04adf8a206d5e2407" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ForceImpl *</type>
        <definition>ForceImpl * OpenMM::AmoebaVdwForce::createImpl</definition>
        <argsstring>() const</argsstring>
        <name>createImpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="462" column="15"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class models van der Waals forces in the AMOEBA force field. It can use either buffered 14-7 potential or a Lennard-Jones 12-6 potential.</para>
<para>This class can operate in two different modes. In one mode, force field parameters are defined for each particle. When two particles interact, a combining rule is used to calculate the interaction parameters based on the parameters for the two particles. To use the class in this mode, call the version of <ref refid="classOpenMM_1_1AmoebaVdwForce_1a27374ecc742dba394181f2e7d9b0f288" kindref="member">addParticle()</ref> that takes sigma and epsilon values. It should be called once for each particle in the System.</para>
<para>In the other mode, each particle has a type index, and parameters are specified for each type rather than each individual particle. By default this mode also uses a combining rule, but you can override it by defining alternate parameters to use for specific pairs of particle types. To use the class in this mode, call the version of <ref refid="classOpenMM_1_1AmoebaVdwForce_1a27374ecc742dba394181f2e7d9b0f288" kindref="member">addParticle()</ref> that takes a type index. It should be called once for each particle in the System. You also must call <ref refid="classOpenMM_1_1AmoebaVdwForce_1a5fd29972538c6cefe5aa2c4996e819e5" kindref="member">addParticleType()</ref> once for each type. If you wish to override the combining for particular pairs of types, do so by calling <ref refid="classOpenMM_1_1AmoebaVdwForce_1aac6f8899f5ffe553373c8b8dce1ce706" kindref="member">addTypePair()</ref>.</para>
<para>A unique feature of this class is that the interaction site for a particle does not need to be exactly at the particle&apos;s location. Instead, it can be placed a fraction of the distance from that particle to another one. This is typically done for hydrogens to place the interaction site slightly closer to the parent atom. The fraction is known as the &quot;reduction factor&quot;, since it reduces the distance from the parent atom to the interaction site.</para>
<para>Support is also available for softcore interactions based on setting a per particle alchemical flag and setting the <ref refid="classOpenMM_1_1AmoebaVdwForce" kindref="compound">AmoebaVdwForce</ref> to use an &quot;AlchemicalMethod&quot; <ndash/> either Decouple or Annihilate. For Decouple, two alchemical atoms interact normally. For Annihilate, all interactions involving an alchemical atom are influenced. The softcore state is specified by setting a single Context parameter &quot;AmoebaVdwLambda&quot; between 0.0 and 1.0.</para>
<para>The softcore functional form can be modified by setting the softcore power (default of 5) and the softcore alpha (default of 0,7). For more information on the softcore functional form see Eq. 2 from: Jiao, D.; Golubkov, P. A.; Darden, T. A.; Ren, P., Calculation of protein-ligand binding free energy by using a polarizable potential. Proc. Natl. Acad. Sci. U.S.A. 2008, 105 (17), 6290-6295. <ulink url="https://www.pnas.org/content/105/17/6290">https://www.pnas.org/content/105/17/6290</ulink>. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Force</label>
      </node>
      <node id="1">
        <label>OpenMM::AmoebaVdwForce</label>
        <link refid="classOpenMM_1_1AmoebaVdwForce"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Force</label>
      </node>
      <node id="1">
        <label>OpenMM::AmoebaVdwForce</label>
        <link refid="classOpenMM_1_1AmoebaVdwForce"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" line="82" column="1" bodyfile="/storage/coda1/p-jmcdaniel43/0/jhymel6/OpenMM_verisons/openmm_7.7.0_qmmm/plugins/amoeba/openmmapi/include/openmm/AmoebaVdwForce.h" bodystart="82" bodyend="483"/>
    <listofallmembers>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a27374ecc742dba394181f2e7d9b0f288" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>addParticle</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a5c66b99182e9bcd2abec146217007874" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>addParticle</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a5fd29972538c6cefe5aa2c4996e819e5" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>addParticleType</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1aac6f8899f5ffe553373c8b8dce1ce706" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>addTypePair</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a8507c77112ff3565e3a5fbf94f721e87" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>AlchemicalMethod</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a18b172683931c75077868bb54135cfe7" prot="private" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>alchemicalMethod</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1ac3983e656390a4427842d390d7d987fb" prot="private" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>alpha</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1ab9906e8565d4453c833be8336f40fcc2" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>AmoebaVdwForce</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a8507c77112ff3565e3a5fbf94f721e87a3a4819cf7ed9026354479661429b7522" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>Annihilate</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1aa5576892f183092e51f6cfce684e661ba5134e3e7d1bbc60cbc27cd330b67b9b4" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>Buffered147</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1ae5c4411c0dbc2dc04adf8a206d5e2407" prot="protected" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>createImpl</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a0bda6cb8450783767556d7340f1d4fe3" prot="private" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>cutoff</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a6014194eb71944af9df786d851fee784a5452c300301ed92b4aadef4ffc5c482e" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>CutoffPeriodic</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a8507c77112ff3565e3a5fbf94f721e87ac2f8d213968d3b067bcaeb4f8536dc7c" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>Decouple</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1ac73b61944ed2f07cc0a23eaf382505bc" prot="private" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>epsilonCombiningRule</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a9e45813d22cd5c4c654fbc797d577df1" prot="private" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>exclusions</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1afa15364cd10ed0c5e8ad4699f7b2ae76" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>getAlchemicalMethod</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1adc650cce34c372766e0f3dc8a3cbd7b1" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>getCutoff</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a3c90a82f0a325d2752b4ea1cde62248d" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>getCutoffDistance</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a5a9a500b96f2055d4613e2901e5bd470" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>getEpsilonCombiningRule</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1af8b0417b300cc2e3a387f46adac66a17" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>getNonbondedMethod</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a85c50fecb1ebf481dff7390f125b70cb" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>getNumParticles</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a1864d393e44aa1d6f2f4b4b64088a373" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>getNumParticleTypes</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1ab32101d10973528167a77a782e147319" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>getNumTypePairs</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a9fa718dbca61ed85e88c54dd1906956a" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>getParticleExclusions</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a62015741de0503181b4798547d521f54" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>getParticleParameters</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a750aa76a7fc21bd20360c41a51acddc1" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>getParticleTypeParameters</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1abd0e62fdae1a2bf3447ac261ff08f892" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>getPotentialFunction</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1acc1a446c206d165c2dbbe44e47dd2f99" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>getSigmaCombiningRule</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a665d632267c13605b9cb86e90da0e8fd" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>getSoftcoreAlpha</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1adba502fded8c5f9351d0bbf426834708" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>getSoftcorePower</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a1e0971ae1051c1f3ddd3bf783377accf" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>getTypePairParameters</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a6fb91300a1051efe46a052b688416fd8" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>getUseDispersionCorrection</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a8f90bf64aa37571ab73b9f2ee5eed9c9" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>getUseParticleTypes</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a05b7adc7a339f5e85825dcb25aee0634" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>Lambda</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1aa5576892f183092e51f6cfce684e661ba4599d4ba380a4d9077e1bbcff9cc7314" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>LennardJones</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a21c50eca6eeb544c8faee08ea06942cc" prot="private" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>n</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a6014194eb71944af9df786d851fee784af158fd40c7f4259986935f6f332554c4" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>NoCutoff</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a6014194eb71944af9df786d851fee784" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>NonbondedMethod</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a94b0721e9520c4d1af4e1b06feb24d07" prot="private" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>nonbondedMethod</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a8507c77112ff3565e3a5fbf94f721e87a0451b087840b68213f84e367f97c7e10" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>None</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a5abe4d06cc314c7ee6c85b70dd912fa1" prot="private" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>pairs</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a28bc461608687c8e7a39739fb2873cb6" prot="private" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>parameters</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a834ed8c8a51fd9551fd274190103ad78" prot="private" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>potentialFunction</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1aa5576892f183092e51f6cfce684e661b" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>PotentialFunction</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a3d7eefc2d31005bd6fb21f05a57c70de" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>setAlchemicalMethod</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a876e5171181c90bf87e27d6a5cf0f4d7" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>setCutoff</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a9fc76ac10eec5d6af25875570607424e" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>setCutoffDistance</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a7012c6ca0daee6d4524376c7a48a7034" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>setEpsilonCombiningRule</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a51bccd7cedbfdcb3677acbd7c8ffd89e" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>setNonbondedMethod</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1ab9e53dc63979072c07983e1d2fa7b5e8" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>setParticleExclusions</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a93f9ae4652f984ef3a4e1af516c1aa0a" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>setParticleParameters</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a7eb22b8c9d080a4213762ca42456ce93" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>setParticleTypeParameters</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1af7aa2aaddeaf3fd5bdd6b7829d69dde1" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>setPotentialFunction</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a34461e53b5d58aa6683db0d835a0555f" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>setSigmaCombiningRule</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1aa2f914cf762f79280d1491a465d1dcb0" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>setSoftcoreAlpha</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a523bae76a04f22e82fbe2c2d2b6ef965" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>setSoftcorePower</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a1fcce9d9dfe567d4f9e299c66b7b3432" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>setTypePairParameters</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a9daa398e967a7820e510c6ba6d1cb3cd" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>setUseDispersionCorrection</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a79ca2c83079f45aeb4268e4f479aa517" prot="private" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>sigmaCombiningRule</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a0b7425899e38e68c1e911d3a826d996a" prot="private" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>types</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a0cd71dacceca0684ffc77211edb53971" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>updateParametersInContext</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a9f49a8ddc512fbd7d01340532c3ade53" prot="private" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>useDispersionCorrection</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a563565a035b414e2acce99019c04ea2c" prot="public" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>usesPeriodicBoundaryConditions</name></member>
      <member refid="classOpenMM_1_1AmoebaVdwForce_1a54394b0094221e5b70190fbb0eb4996b" prot="private" virt="non-virtual"><scope>OpenMM::AmoebaVdwForce</scope><name>useTypes</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
